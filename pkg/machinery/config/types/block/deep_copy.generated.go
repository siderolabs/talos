// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

// Code generated by "deep-copy -type VolumeConfigV1Alpha1 -type FilesystemScrubV1Alpha1 -pointer-receiver -header-file ../../../../../hack/boilerplate.txt -o deep_copy.generated.go ."; DO NOT EDIT.

package block

// DeepCopy generates a deep copy of *VolumeConfigV1Alpha1.
func (o *VolumeConfigV1Alpha1) DeepCopy() *VolumeConfigV1Alpha1 {
	var cp VolumeConfigV1Alpha1 = *o
	if o.ProvisioningSpec.ProvisioningGrow != nil {
		cp.ProvisioningSpec.ProvisioningGrow = new(bool)
		*cp.ProvisioningSpec.ProvisioningGrow = *o.ProvisioningSpec.ProvisioningGrow
	}
	if o.ProvisioningSpec.ProvisioningMinSize.value != nil {
		cp.ProvisioningSpec.ProvisioningMinSize.value = new(uint64)
		*cp.ProvisioningSpec.ProvisioningMinSize.value = *o.ProvisioningSpec.ProvisioningMinSize.value
	}
	if o.ProvisioningSpec.ProvisioningMinSize.raw != nil {
		cp.ProvisioningSpec.ProvisioningMinSize.raw = make([]byte, len(o.ProvisioningSpec.ProvisioningMinSize.raw))
		copy(cp.ProvisioningSpec.ProvisioningMinSize.raw, o.ProvisioningSpec.ProvisioningMinSize.raw)
	}
	if o.ProvisioningSpec.ProvisioningMaxSize.value != nil {
		cp.ProvisioningSpec.ProvisioningMaxSize.value = new(uint64)
		*cp.ProvisioningSpec.ProvisioningMaxSize.value = *o.ProvisioningSpec.ProvisioningMaxSize.value
	}
	if o.ProvisioningSpec.ProvisioningMaxSize.raw != nil {
		cp.ProvisioningSpec.ProvisioningMaxSize.raw = make([]byte, len(o.ProvisioningSpec.ProvisioningMaxSize.raw))
		copy(cp.ProvisioningSpec.ProvisioningMaxSize.raw, o.ProvisioningSpec.ProvisioningMaxSize.raw)
	}
	return &cp
}

// DeepCopy generates a deep copy of *FilesystemScrubV1Alpha1.
func (o *FilesystemScrubV1Alpha1) DeepCopy() *FilesystemScrubV1Alpha1 {
	var cp FilesystemScrubV1Alpha1 = *o
	return &cp
}
