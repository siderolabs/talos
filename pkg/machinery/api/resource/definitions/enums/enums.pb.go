// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: resource/definitions/enums/enums.proto

package enums

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RuntimeMachineStage describes the stage of the machine boot/run process.
type RuntimeMachineStage int32

const (
	RuntimeMachineStage_MACHINE_STAGE_UNKNOWN       RuntimeMachineStage = 0
	RuntimeMachineStage_MACHINE_STAGE_BOOTING       RuntimeMachineStage = 1
	RuntimeMachineStage_MACHINE_STAGE_INSTALLING    RuntimeMachineStage = 2
	RuntimeMachineStage_MACHINE_STAGE_MAINTENANCE   RuntimeMachineStage = 3
	RuntimeMachineStage_MACHINE_STAGE_RUNNING       RuntimeMachineStage = 4
	RuntimeMachineStage_MACHINE_STAGE_REBOOTING     RuntimeMachineStage = 5
	RuntimeMachineStage_MACHINE_STAGE_SHUTTING_DOWN RuntimeMachineStage = 6
	RuntimeMachineStage_MACHINE_STAGE_RESETTING     RuntimeMachineStage = 7
	RuntimeMachineStage_MACHINE_STAGE_UPGRADING     RuntimeMachineStage = 8
)

// Enum value maps for RuntimeMachineStage.
var (
	RuntimeMachineStage_name = map[int32]string{
		0: "MACHINE_STAGE_UNKNOWN",
		1: "MACHINE_STAGE_BOOTING",
		2: "MACHINE_STAGE_INSTALLING",
		3: "MACHINE_STAGE_MAINTENANCE",
		4: "MACHINE_STAGE_RUNNING",
		5: "MACHINE_STAGE_REBOOTING",
		6: "MACHINE_STAGE_SHUTTING_DOWN",
		7: "MACHINE_STAGE_RESETTING",
		8: "MACHINE_STAGE_UPGRADING",
	}
	RuntimeMachineStage_value = map[string]int32{
		"MACHINE_STAGE_UNKNOWN":       0,
		"MACHINE_STAGE_BOOTING":       1,
		"MACHINE_STAGE_INSTALLING":    2,
		"MACHINE_STAGE_MAINTENANCE":   3,
		"MACHINE_STAGE_RUNNING":       4,
		"MACHINE_STAGE_REBOOTING":     5,
		"MACHINE_STAGE_SHUTTING_DOWN": 6,
		"MACHINE_STAGE_RESETTING":     7,
		"MACHINE_STAGE_UPGRADING":     8,
	}
)

func (x RuntimeMachineStage) Enum() *RuntimeMachineStage {
	p := new(RuntimeMachineStage)
	*p = x
	return p
}

func (x RuntimeMachineStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RuntimeMachineStage) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[0].Descriptor()
}

func (RuntimeMachineStage) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[0]
}

func (x RuntimeMachineStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RuntimeMachineStage.Descriptor instead.
func (RuntimeMachineStage) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{0}
}

// RuntimeSELinuxState describes the current SELinux status.
type RuntimeSELinuxState int32

const (
	RuntimeSELinuxState_SE_LINUX_STATE_DISABLED   RuntimeSELinuxState = 0
	RuntimeSELinuxState_SE_LINUX_STATE_PERMISSIVE RuntimeSELinuxState = 1
	RuntimeSELinuxState_SE_LINUX_STATE_ENFORCING  RuntimeSELinuxState = 2
)

// Enum value maps for RuntimeSELinuxState.
var (
	RuntimeSELinuxState_name = map[int32]string{
		0: "SE_LINUX_STATE_DISABLED",
		1: "SE_LINUX_STATE_PERMISSIVE",
		2: "SE_LINUX_STATE_ENFORCING",
	}
	RuntimeSELinuxState_value = map[string]int32{
		"SE_LINUX_STATE_DISABLED":   0,
		"SE_LINUX_STATE_PERMISSIVE": 1,
		"SE_LINUX_STATE_ENFORCING":  2,
	}
)

func (x RuntimeSELinuxState) Enum() *RuntimeSELinuxState {
	p := new(RuntimeSELinuxState)
	*p = x
	return p
}

func (x RuntimeSELinuxState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RuntimeSELinuxState) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[1].Descriptor()
}

func (RuntimeSELinuxState) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[1]
}

func (x RuntimeSELinuxState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RuntimeSELinuxState.Descriptor instead.
func (RuntimeSELinuxState) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{1}
}

// RuntimeFIPSState describes the current FIPS status.
type RuntimeFIPSState int32

const (
	RuntimeFIPSState_FIPS_STATE_DISABLED RuntimeFIPSState = 0
	RuntimeFIPSState_FIPS_STATE_ENABLED  RuntimeFIPSState = 1
	RuntimeFIPSState_FIPS_STATE_STRICT   RuntimeFIPSState = 2
)

// Enum value maps for RuntimeFIPSState.
var (
	RuntimeFIPSState_name = map[int32]string{
		0: "FIPS_STATE_DISABLED",
		1: "FIPS_STATE_ENABLED",
		2: "FIPS_STATE_STRICT",
	}
	RuntimeFIPSState_value = map[string]int32{
		"FIPS_STATE_DISABLED": 0,
		"FIPS_STATE_ENABLED":  1,
		"FIPS_STATE_STRICT":   2,
	}
)

func (x RuntimeFIPSState) Enum() *RuntimeFIPSState {
	p := new(RuntimeFIPSState)
	*p = x
	return p
}

func (x RuntimeFIPSState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RuntimeFIPSState) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[2].Descriptor()
}

func (RuntimeFIPSState) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[2]
}

func (x RuntimeFIPSState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RuntimeFIPSState.Descriptor instead.
func (RuntimeFIPSState) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{2}
}

// MachineType represents a machine type.
type MachineType int32

const (
	// TypeUnknown represents undefined node type, when there is no machine configuration yet.
	MachineType_TYPE_UNKNOWN MachineType = 0
	// TypeInit type designates the first control plane node to come up. You can think of it like a bootstrap node.
	// This node will perform the initial steps to bootstrap the cluster -- generation of TLS assets, starting of the control plane, etc.
	MachineType_TYPE_INIT MachineType = 1
	// TypeControlPlane designates the node as a control plane member.
	// This means it will host etcd along with the Kubernetes controlplane components such as API Server, Controller Manager, Scheduler.
	MachineType_TYPE_CONTROL_PLANE MachineType = 2
	// TypeWorker designates the node as a worker node.
	// This means it will be an available compute node for scheduling workloads.
	MachineType_TYPE_WORKER MachineType = 3
)

// Enum value maps for MachineType.
var (
	MachineType_name = map[int32]string{
		0: "TYPE_UNKNOWN",
		1: "TYPE_INIT",
		2: "TYPE_CONTROL_PLANE",
		3: "TYPE_WORKER",
	}
	MachineType_value = map[string]int32{
		"TYPE_UNKNOWN":       0,
		"TYPE_INIT":          1,
		"TYPE_CONTROL_PLANE": 2,
		"TYPE_WORKER":        3,
	}
)

func (x MachineType) Enum() *MachineType {
	p := new(MachineType)
	*p = x
	return p
}

func (x MachineType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MachineType) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[3].Descriptor()
}

func (MachineType) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[3]
}

func (x MachineType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MachineType.Descriptor instead.
func (MachineType) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{3}
}

// NethelpersAddressFlag wraps IFF_* constants.
type NethelpersAddressFlag int32

const (
	NethelpersAddressFlag_NETHELPERS_ADDRESSFLAG_UNSPECIFIED NethelpersAddressFlag = 0
	NethelpersAddressFlag_ADDRESS_TEMPORARY                  NethelpersAddressFlag = 1
	NethelpersAddressFlag_ADDRESS_NO_DAD                     NethelpersAddressFlag = 2
	NethelpersAddressFlag_ADDRESS_OPTIMISTIC                 NethelpersAddressFlag = 4
	NethelpersAddressFlag_ADDRESS_DAD_FAILED                 NethelpersAddressFlag = 8
	NethelpersAddressFlag_ADDRESS_HOME                       NethelpersAddressFlag = 16
	NethelpersAddressFlag_ADDRESS_DEPRECATED                 NethelpersAddressFlag = 32
	NethelpersAddressFlag_ADDRESS_TENTATIVE                  NethelpersAddressFlag = 64
	NethelpersAddressFlag_ADDRESS_PERMANENT                  NethelpersAddressFlag = 128
	NethelpersAddressFlag_ADDRESS_MANAGEMENT_TEMP            NethelpersAddressFlag = 256
	NethelpersAddressFlag_ADDRESS_NO_PREFIX_ROUTE            NethelpersAddressFlag = 512
	NethelpersAddressFlag_ADDRESS_MC_AUTO_JOIN               NethelpersAddressFlag = 1024
	NethelpersAddressFlag_ADDRESS_STABLE_PRIVACY             NethelpersAddressFlag = 2048
)

// Enum value maps for NethelpersAddressFlag.
var (
	NethelpersAddressFlag_name = map[int32]string{
		0:    "NETHELPERS_ADDRESSFLAG_UNSPECIFIED",
		1:    "ADDRESS_TEMPORARY",
		2:    "ADDRESS_NO_DAD",
		4:    "ADDRESS_OPTIMISTIC",
		8:    "ADDRESS_DAD_FAILED",
		16:   "ADDRESS_HOME",
		32:   "ADDRESS_DEPRECATED",
		64:   "ADDRESS_TENTATIVE",
		128:  "ADDRESS_PERMANENT",
		256:  "ADDRESS_MANAGEMENT_TEMP",
		512:  "ADDRESS_NO_PREFIX_ROUTE",
		1024: "ADDRESS_MC_AUTO_JOIN",
		2048: "ADDRESS_STABLE_PRIVACY",
	}
	NethelpersAddressFlag_value = map[string]int32{
		"NETHELPERS_ADDRESSFLAG_UNSPECIFIED": 0,
		"ADDRESS_TEMPORARY":                  1,
		"ADDRESS_NO_DAD":                     2,
		"ADDRESS_OPTIMISTIC":                 4,
		"ADDRESS_DAD_FAILED":                 8,
		"ADDRESS_HOME":                       16,
		"ADDRESS_DEPRECATED":                 32,
		"ADDRESS_TENTATIVE":                  64,
		"ADDRESS_PERMANENT":                  128,
		"ADDRESS_MANAGEMENT_TEMP":            256,
		"ADDRESS_NO_PREFIX_ROUTE":            512,
		"ADDRESS_MC_AUTO_JOIN":               1024,
		"ADDRESS_STABLE_PRIVACY":             2048,
	}
)

func (x NethelpersAddressFlag) Enum() *NethelpersAddressFlag {
	p := new(NethelpersAddressFlag)
	*p = x
	return p
}

func (x NethelpersAddressFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersAddressFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[4].Descriptor()
}

func (NethelpersAddressFlag) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[4]
}

func (x NethelpersAddressFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersAddressFlag.Descriptor instead.
func (NethelpersAddressFlag) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{4}
}

// NethelpersAddressSortAlgorithm is an internal address sorting algorithm.
type NethelpersAddressSortAlgorithm int32

const (
	NethelpersAddressSortAlgorithm_ADDRESS_SORT_ALGORITHM_V1 NethelpersAddressSortAlgorithm = 0
	NethelpersAddressSortAlgorithm_ADDRESS_SORT_ALGORITHM_V2 NethelpersAddressSortAlgorithm = 1
)

// Enum value maps for NethelpersAddressSortAlgorithm.
var (
	NethelpersAddressSortAlgorithm_name = map[int32]string{
		0: "ADDRESS_SORT_ALGORITHM_V1",
		1: "ADDRESS_SORT_ALGORITHM_V2",
	}
	NethelpersAddressSortAlgorithm_value = map[string]int32{
		"ADDRESS_SORT_ALGORITHM_V1": 0,
		"ADDRESS_SORT_ALGORITHM_V2": 1,
	}
)

func (x NethelpersAddressSortAlgorithm) Enum() *NethelpersAddressSortAlgorithm {
	p := new(NethelpersAddressSortAlgorithm)
	*p = x
	return p
}

func (x NethelpersAddressSortAlgorithm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersAddressSortAlgorithm) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[5].Descriptor()
}

func (NethelpersAddressSortAlgorithm) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[5]
}

func (x NethelpersAddressSortAlgorithm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersAddressSortAlgorithm.Descriptor instead.
func (NethelpersAddressSortAlgorithm) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{5}
}

// NethelpersADLACPActive is ADLACPActive.
type NethelpersADLACPActive int32

const (
	NethelpersADLACPActive_ADLACP_ACTIVE_OFF NethelpersADLACPActive = 0
	NethelpersADLACPActive_ADLACP_ACTIVE_ON  NethelpersADLACPActive = 1
)

// Enum value maps for NethelpersADLACPActive.
var (
	NethelpersADLACPActive_name = map[int32]string{
		0: "ADLACP_ACTIVE_OFF",
		1: "ADLACP_ACTIVE_ON",
	}
	NethelpersADLACPActive_value = map[string]int32{
		"ADLACP_ACTIVE_OFF": 0,
		"ADLACP_ACTIVE_ON":  1,
	}
)

func (x NethelpersADLACPActive) Enum() *NethelpersADLACPActive {
	p := new(NethelpersADLACPActive)
	*p = x
	return p
}

func (x NethelpersADLACPActive) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersADLACPActive) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[6].Descriptor()
}

func (NethelpersADLACPActive) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[6]
}

func (x NethelpersADLACPActive) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersADLACPActive.Descriptor instead.
func (NethelpersADLACPActive) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{6}
}

// NethelpersADSelect is ADSelect.
type NethelpersADSelect int32

const (
	NethelpersADSelect_AD_SELECT_STABLE    NethelpersADSelect = 0
	NethelpersADSelect_AD_SELECT_BANDWIDTH NethelpersADSelect = 1
	NethelpersADSelect_AD_SELECT_COUNT     NethelpersADSelect = 2
)

// Enum value maps for NethelpersADSelect.
var (
	NethelpersADSelect_name = map[int32]string{
		0: "AD_SELECT_STABLE",
		1: "AD_SELECT_BANDWIDTH",
		2: "AD_SELECT_COUNT",
	}
	NethelpersADSelect_value = map[string]int32{
		"AD_SELECT_STABLE":    0,
		"AD_SELECT_BANDWIDTH": 1,
		"AD_SELECT_COUNT":     2,
	}
)

func (x NethelpersADSelect) Enum() *NethelpersADSelect {
	p := new(NethelpersADSelect)
	*p = x
	return p
}

func (x NethelpersADSelect) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersADSelect) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[7].Descriptor()
}

func (NethelpersADSelect) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[7]
}

func (x NethelpersADSelect) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersADSelect.Descriptor instead.
func (NethelpersADSelect) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{7}
}

// NethelpersARPAllTargets is an ARP targets mode.
type NethelpersARPAllTargets int32

const (
	NethelpersARPAllTargets_ARP_ALL_TARGETS_ANY NethelpersARPAllTargets = 0
	NethelpersARPAllTargets_ARP_ALL_TARGETS_ALL NethelpersARPAllTargets = 1
)

// Enum value maps for NethelpersARPAllTargets.
var (
	NethelpersARPAllTargets_name = map[int32]string{
		0: "ARP_ALL_TARGETS_ANY",
		1: "ARP_ALL_TARGETS_ALL",
	}
	NethelpersARPAllTargets_value = map[string]int32{
		"ARP_ALL_TARGETS_ANY": 0,
		"ARP_ALL_TARGETS_ALL": 1,
	}
)

func (x NethelpersARPAllTargets) Enum() *NethelpersARPAllTargets {
	p := new(NethelpersARPAllTargets)
	*p = x
	return p
}

func (x NethelpersARPAllTargets) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersARPAllTargets) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[8].Descriptor()
}

func (NethelpersARPAllTargets) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[8]
}

func (x NethelpersARPAllTargets) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersARPAllTargets.Descriptor instead.
func (NethelpersARPAllTargets) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{8}
}

// NethelpersARPValidate is an ARP Validation mode.
type NethelpersARPValidate int32

const (
	NethelpersARPValidate_ARP_VALIDATE_NONE          NethelpersARPValidate = 0
	NethelpersARPValidate_ARP_VALIDATE_ACTIVE        NethelpersARPValidate = 1
	NethelpersARPValidate_ARP_VALIDATE_BACKUP        NethelpersARPValidate = 2
	NethelpersARPValidate_ARP_VALIDATE_ALL           NethelpersARPValidate = 3
	NethelpersARPValidate_ARP_VALIDATE_FILTER        NethelpersARPValidate = 4
	NethelpersARPValidate_ARP_VALIDATE_FILTER_ACTIVE NethelpersARPValidate = 5
	NethelpersARPValidate_ARP_VALIDATE_FILTER_BACKUP NethelpersARPValidate = 6
)

// Enum value maps for NethelpersARPValidate.
var (
	NethelpersARPValidate_name = map[int32]string{
		0: "ARP_VALIDATE_NONE",
		1: "ARP_VALIDATE_ACTIVE",
		2: "ARP_VALIDATE_BACKUP",
		3: "ARP_VALIDATE_ALL",
		4: "ARP_VALIDATE_FILTER",
		5: "ARP_VALIDATE_FILTER_ACTIVE",
		6: "ARP_VALIDATE_FILTER_BACKUP",
	}
	NethelpersARPValidate_value = map[string]int32{
		"ARP_VALIDATE_NONE":          0,
		"ARP_VALIDATE_ACTIVE":        1,
		"ARP_VALIDATE_BACKUP":        2,
		"ARP_VALIDATE_ALL":           3,
		"ARP_VALIDATE_FILTER":        4,
		"ARP_VALIDATE_FILTER_ACTIVE": 5,
		"ARP_VALIDATE_FILTER_BACKUP": 6,
	}
)

func (x NethelpersARPValidate) Enum() *NethelpersARPValidate {
	p := new(NethelpersARPValidate)
	*p = x
	return p
}

func (x NethelpersARPValidate) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersARPValidate) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[9].Descriptor()
}

func (NethelpersARPValidate) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[9]
}

func (x NethelpersARPValidate) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersARPValidate.Descriptor instead.
func (NethelpersARPValidate) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{9}
}

// NethelpersAutoHostnameKind is a kind of automatically generated hostname.
type NethelpersAutoHostnameKind int32

const (
	NethelpersAutoHostnameKind_AUTO_HOSTNAME_KIND_OFF    NethelpersAutoHostnameKind = 0
	NethelpersAutoHostnameKind_AUTO_HOSTNAME_KIND_ADDR   NethelpersAutoHostnameKind = 1
	NethelpersAutoHostnameKind_AUTO_HOSTNAME_KIND_STABLE NethelpersAutoHostnameKind = 2
)

// Enum value maps for NethelpersAutoHostnameKind.
var (
	NethelpersAutoHostnameKind_name = map[int32]string{
		0: "AUTO_HOSTNAME_KIND_OFF",
		1: "AUTO_HOSTNAME_KIND_ADDR",
		2: "AUTO_HOSTNAME_KIND_STABLE",
	}
	NethelpersAutoHostnameKind_value = map[string]int32{
		"AUTO_HOSTNAME_KIND_OFF":    0,
		"AUTO_HOSTNAME_KIND_ADDR":   1,
		"AUTO_HOSTNAME_KIND_STABLE": 2,
	}
)

func (x NethelpersAutoHostnameKind) Enum() *NethelpersAutoHostnameKind {
	p := new(NethelpersAutoHostnameKind)
	*p = x
	return p
}

func (x NethelpersAutoHostnameKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersAutoHostnameKind) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[10].Descriptor()
}

func (NethelpersAutoHostnameKind) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[10]
}

func (x NethelpersAutoHostnameKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersAutoHostnameKind.Descriptor instead.
func (NethelpersAutoHostnameKind) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{10}
}

// NethelpersBondMode is a bond mode.
type NethelpersBondMode int32

const (
	NethelpersBondMode_BOND_MODE_ROUNDROBIN    NethelpersBondMode = 0
	NethelpersBondMode_BOND_MODE_ACTIVE_BACKUP NethelpersBondMode = 1
	NethelpersBondMode_BOND_MODE_XOR           NethelpersBondMode = 2
	NethelpersBondMode_BOND_MODE_BROADCAST     NethelpersBondMode = 3
	NethelpersBondMode_BOND_MODE8023_AD        NethelpersBondMode = 4
	NethelpersBondMode_BOND_MODE_TLB           NethelpersBondMode = 5
	NethelpersBondMode_BOND_MODE_ALB           NethelpersBondMode = 6
)

// Enum value maps for NethelpersBondMode.
var (
	NethelpersBondMode_name = map[int32]string{
		0: "BOND_MODE_ROUNDROBIN",
		1: "BOND_MODE_ACTIVE_BACKUP",
		2: "BOND_MODE_XOR",
		3: "BOND_MODE_BROADCAST",
		4: "BOND_MODE8023_AD",
		5: "BOND_MODE_TLB",
		6: "BOND_MODE_ALB",
	}
	NethelpersBondMode_value = map[string]int32{
		"BOND_MODE_ROUNDROBIN":    0,
		"BOND_MODE_ACTIVE_BACKUP": 1,
		"BOND_MODE_XOR":           2,
		"BOND_MODE_BROADCAST":     3,
		"BOND_MODE8023_AD":        4,
		"BOND_MODE_TLB":           5,
		"BOND_MODE_ALB":           6,
	}
)

func (x NethelpersBondMode) Enum() *NethelpersBondMode {
	p := new(NethelpersBondMode)
	*p = x
	return p
}

func (x NethelpersBondMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersBondMode) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[11].Descriptor()
}

func (NethelpersBondMode) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[11]
}

func (x NethelpersBondMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersBondMode.Descriptor instead.
func (NethelpersBondMode) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{11}
}

// NethelpersBondXmitHashPolicy is a bond hash policy.
type NethelpersBondXmitHashPolicy int32

const (
	NethelpersBondXmitHashPolicy_BOND_XMIT_POLICY_LAYER2  NethelpersBondXmitHashPolicy = 0
	NethelpersBondXmitHashPolicy_BOND_XMIT_POLICY_LAYER34 NethelpersBondXmitHashPolicy = 1
	NethelpersBondXmitHashPolicy_BOND_XMIT_POLICY_LAYER23 NethelpersBondXmitHashPolicy = 2
	NethelpersBondXmitHashPolicy_BOND_XMIT_POLICY_ENCAP23 NethelpersBondXmitHashPolicy = 3
	NethelpersBondXmitHashPolicy_BOND_XMIT_POLICY_ENCAP34 NethelpersBondXmitHashPolicy = 4
)

// Enum value maps for NethelpersBondXmitHashPolicy.
var (
	NethelpersBondXmitHashPolicy_name = map[int32]string{
		0: "BOND_XMIT_POLICY_LAYER2",
		1: "BOND_XMIT_POLICY_LAYER34",
		2: "BOND_XMIT_POLICY_LAYER23",
		3: "BOND_XMIT_POLICY_ENCAP23",
		4: "BOND_XMIT_POLICY_ENCAP34",
	}
	NethelpersBondXmitHashPolicy_value = map[string]int32{
		"BOND_XMIT_POLICY_LAYER2":  0,
		"BOND_XMIT_POLICY_LAYER34": 1,
		"BOND_XMIT_POLICY_LAYER23": 2,
		"BOND_XMIT_POLICY_ENCAP23": 3,
		"BOND_XMIT_POLICY_ENCAP34": 4,
	}
)

func (x NethelpersBondXmitHashPolicy) Enum() *NethelpersBondXmitHashPolicy {
	p := new(NethelpersBondXmitHashPolicy)
	*p = x
	return p
}

func (x NethelpersBondXmitHashPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersBondXmitHashPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[12].Descriptor()
}

func (NethelpersBondXmitHashPolicy) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[12]
}

func (x NethelpersBondXmitHashPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersBondXmitHashPolicy.Descriptor instead.
func (NethelpersBondXmitHashPolicy) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{12}
}

// NethelpersClientIdentifier is a DHCP client identifier.
type NethelpersClientIdentifier int32

const (
	NethelpersClientIdentifier_CLIENT_IDENTIFIER_NONE NethelpersClientIdentifier = 0
	NethelpersClientIdentifier_CLIENT_IDENTIFIER_MAC  NethelpersClientIdentifier = 1
	NethelpersClientIdentifier_CLIENT_IDENTIFIER_DUID NethelpersClientIdentifier = 2
)

// Enum value maps for NethelpersClientIdentifier.
var (
	NethelpersClientIdentifier_name = map[int32]string{
		0: "CLIENT_IDENTIFIER_NONE",
		1: "CLIENT_IDENTIFIER_MAC",
		2: "CLIENT_IDENTIFIER_DUID",
	}
	NethelpersClientIdentifier_value = map[string]int32{
		"CLIENT_IDENTIFIER_NONE": 0,
		"CLIENT_IDENTIFIER_MAC":  1,
		"CLIENT_IDENTIFIER_DUID": 2,
	}
)

func (x NethelpersClientIdentifier) Enum() *NethelpersClientIdentifier {
	p := new(NethelpersClientIdentifier)
	*p = x
	return p
}

func (x NethelpersClientIdentifier) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersClientIdentifier) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[13].Descriptor()
}

func (NethelpersClientIdentifier) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[13]
}

func (x NethelpersClientIdentifier) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersClientIdentifier.Descriptor instead.
func (NethelpersClientIdentifier) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{13}
}

// NethelpersConntrackState is a conntrack state.
type NethelpersConntrackState int32

const (
	NethelpersConntrackState_NETHELPERS_CONNTRACKSTATE_UNSPECIFIED NethelpersConntrackState = 0
	NethelpersConntrackState_CONNTRACK_STATE_NEW                   NethelpersConntrackState = 8
	NethelpersConntrackState_CONNTRACK_STATE_RELATED               NethelpersConntrackState = 4
	NethelpersConntrackState_CONNTRACK_STATE_ESTABLISHED           NethelpersConntrackState = 2
	NethelpersConntrackState_CONNTRACK_STATE_INVALID               NethelpersConntrackState = 1
)

// Enum value maps for NethelpersConntrackState.
var (
	NethelpersConntrackState_name = map[int32]string{
		0: "NETHELPERS_CONNTRACKSTATE_UNSPECIFIED",
		8: "CONNTRACK_STATE_NEW",
		4: "CONNTRACK_STATE_RELATED",
		2: "CONNTRACK_STATE_ESTABLISHED",
		1: "CONNTRACK_STATE_INVALID",
	}
	NethelpersConntrackState_value = map[string]int32{
		"NETHELPERS_CONNTRACKSTATE_UNSPECIFIED": 0,
		"CONNTRACK_STATE_NEW":                   8,
		"CONNTRACK_STATE_RELATED":               4,
		"CONNTRACK_STATE_ESTABLISHED":           2,
		"CONNTRACK_STATE_INVALID":               1,
	}
)

func (x NethelpersConntrackState) Enum() *NethelpersConntrackState {
	p := new(NethelpersConntrackState)
	*p = x
	return p
}

func (x NethelpersConntrackState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersConntrackState) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[14].Descriptor()
}

func (NethelpersConntrackState) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[14]
}

func (x NethelpersConntrackState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersConntrackState.Descriptor instead.
func (NethelpersConntrackState) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{14}
}

// NethelpersDuplex wraps ethtool.Duplex for YAML marshaling.
type NethelpersDuplex int32

const (
	NethelpersDuplex_HALF    NethelpersDuplex = 0
	NethelpersDuplex_FULL    NethelpersDuplex = 1
	NethelpersDuplex_UNKNOWN NethelpersDuplex = 255
)

// Enum value maps for NethelpersDuplex.
var (
	NethelpersDuplex_name = map[int32]string{
		0:   "HALF",
		1:   "FULL",
		255: "UNKNOWN",
	}
	NethelpersDuplex_value = map[string]int32{
		"HALF":    0,
		"FULL":    1,
		"UNKNOWN": 255,
	}
)

func (x NethelpersDuplex) Enum() *NethelpersDuplex {
	p := new(NethelpersDuplex)
	*p = x
	return p
}

func (x NethelpersDuplex) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersDuplex) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[15].Descriptor()
}

func (NethelpersDuplex) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[15]
}

func (x NethelpersDuplex) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersDuplex.Descriptor instead.
func (NethelpersDuplex) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{15}
}

// NethelpersFailOverMAC is a MAC failover mode.
type NethelpersFailOverMAC int32

const (
	NethelpersFailOverMAC_FAIL_OVER_MAC_NONE   NethelpersFailOverMAC = 0
	NethelpersFailOverMAC_FAIL_OVER_MAC_ACTIVE NethelpersFailOverMAC = 1
	NethelpersFailOverMAC_FAIL_OVER_MAC_FOLLOW NethelpersFailOverMAC = 2
)

// Enum value maps for NethelpersFailOverMAC.
var (
	NethelpersFailOverMAC_name = map[int32]string{
		0: "FAIL_OVER_MAC_NONE",
		1: "FAIL_OVER_MAC_ACTIVE",
		2: "FAIL_OVER_MAC_FOLLOW",
	}
	NethelpersFailOverMAC_value = map[string]int32{
		"FAIL_OVER_MAC_NONE":   0,
		"FAIL_OVER_MAC_ACTIVE": 1,
		"FAIL_OVER_MAC_FOLLOW": 2,
	}
)

func (x NethelpersFailOverMAC) Enum() *NethelpersFailOverMAC {
	p := new(NethelpersFailOverMAC)
	*p = x
	return p
}

func (x NethelpersFailOverMAC) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersFailOverMAC) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[16].Descriptor()
}

func (NethelpersFailOverMAC) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[16]
}

func (x NethelpersFailOverMAC) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersFailOverMAC.Descriptor instead.
func (NethelpersFailOverMAC) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{16}
}

// NethelpersFamily is a network family.
type NethelpersFamily int32

const (
	NethelpersFamily_NETHELPERS_FAMILY_UNSPECIFIED NethelpersFamily = 0
	NethelpersFamily_FAMILY_INET4                  NethelpersFamily = 2
	NethelpersFamily_FAMILY_INET6                  NethelpersFamily = 10
)

// Enum value maps for NethelpersFamily.
var (
	NethelpersFamily_name = map[int32]string{
		0:  "NETHELPERS_FAMILY_UNSPECIFIED",
		2:  "FAMILY_INET4",
		10: "FAMILY_INET6",
	}
	NethelpersFamily_value = map[string]int32{
		"NETHELPERS_FAMILY_UNSPECIFIED": 0,
		"FAMILY_INET4":                  2,
		"FAMILY_INET6":                  10,
	}
)

func (x NethelpersFamily) Enum() *NethelpersFamily {
	p := new(NethelpersFamily)
	*p = x
	return p
}

func (x NethelpersFamily) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersFamily) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[17].Descriptor()
}

func (NethelpersFamily) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[17]
}

func (x NethelpersFamily) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersFamily.Descriptor instead.
func (NethelpersFamily) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{17}
}

// NethelpersICMPType is a ICMP packet type.
type NethelpersICMPType int32

const (
	NethelpersICMPType_NETHELPERS_ICMPTYPE_UNSPECIFIED NethelpersICMPType = 0
	NethelpersICMPType_ICMP_TYPE_TIMESTAMP_REQUEST     NethelpersICMPType = 13
	NethelpersICMPType_ICMP_TYPE_TIMESTAMP_REPLY       NethelpersICMPType = 14
	NethelpersICMPType_ICMP_TYPE_ADDRESS_MASK_REQUEST  NethelpersICMPType = 17
	NethelpersICMPType_ICMP_TYPE_ADDRESS_MASK_REPLY    NethelpersICMPType = 18
)

// Enum value maps for NethelpersICMPType.
var (
	NethelpersICMPType_name = map[int32]string{
		0:  "NETHELPERS_ICMPTYPE_UNSPECIFIED",
		13: "ICMP_TYPE_TIMESTAMP_REQUEST",
		14: "ICMP_TYPE_TIMESTAMP_REPLY",
		17: "ICMP_TYPE_ADDRESS_MASK_REQUEST",
		18: "ICMP_TYPE_ADDRESS_MASK_REPLY",
	}
	NethelpersICMPType_value = map[string]int32{
		"NETHELPERS_ICMPTYPE_UNSPECIFIED": 0,
		"ICMP_TYPE_TIMESTAMP_REQUEST":     13,
		"ICMP_TYPE_TIMESTAMP_REPLY":       14,
		"ICMP_TYPE_ADDRESS_MASK_REQUEST":  17,
		"ICMP_TYPE_ADDRESS_MASK_REPLY":    18,
	}
)

func (x NethelpersICMPType) Enum() *NethelpersICMPType {
	p := new(NethelpersICMPType)
	*p = x
	return p
}

func (x NethelpersICMPType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersICMPType) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[18].Descriptor()
}

func (NethelpersICMPType) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[18]
}

func (x NethelpersICMPType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersICMPType.Descriptor instead.
func (NethelpersICMPType) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{18}
}

// NethelpersLACPRate is a LACP rate.
type NethelpersLACPRate int32

const (
	NethelpersLACPRate_LACP_RATE_SLOW NethelpersLACPRate = 0
	NethelpersLACPRate_LACP_RATE_FAST NethelpersLACPRate = 1
)

// Enum value maps for NethelpersLACPRate.
var (
	NethelpersLACPRate_name = map[int32]string{
		0: "LACP_RATE_SLOW",
		1: "LACP_RATE_FAST",
	}
	NethelpersLACPRate_value = map[string]int32{
		"LACP_RATE_SLOW": 0,
		"LACP_RATE_FAST": 1,
	}
)

func (x NethelpersLACPRate) Enum() *NethelpersLACPRate {
	p := new(NethelpersLACPRate)
	*p = x
	return p
}

func (x NethelpersLACPRate) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersLACPRate) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[19].Descriptor()
}

func (NethelpersLACPRate) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[19]
}

func (x NethelpersLACPRate) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersLACPRate.Descriptor instead.
func (NethelpersLACPRate) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{19}
}

// NethelpersLinkType is a link type.
type NethelpersLinkType int32

const (
	NethelpersLinkType_LINK_NETROM            NethelpersLinkType = 0
	NethelpersLinkType_LINK_ETHER             NethelpersLinkType = 1
	NethelpersLinkType_LINK_EETHER            NethelpersLinkType = 2
	NethelpersLinkType_LINK_AX25              NethelpersLinkType = 3
	NethelpersLinkType_LINK_PRONET            NethelpersLinkType = 4
	NethelpersLinkType_LINK_CHAOS             NethelpersLinkType = 5
	NethelpersLinkType_LINK_IEE802            NethelpersLinkType = 6
	NethelpersLinkType_LINK_ARCNET            NethelpersLinkType = 7
	NethelpersLinkType_LINK_ATALK             NethelpersLinkType = 8
	NethelpersLinkType_LINK_DLCI              NethelpersLinkType = 15
	NethelpersLinkType_LINK_ATM               NethelpersLinkType = 19
	NethelpersLinkType_LINK_METRICOM          NethelpersLinkType = 23
	NethelpersLinkType_LINK_IEEE1394          NethelpersLinkType = 24
	NethelpersLinkType_LINK_EUI64             NethelpersLinkType = 27
	NethelpersLinkType_LINK_INFINIBAND        NethelpersLinkType = 32
	NethelpersLinkType_LINK_SLIP              NethelpersLinkType = 256
	NethelpersLinkType_LINK_CSLIP             NethelpersLinkType = 257
	NethelpersLinkType_LINK_SLIP6             NethelpersLinkType = 258
	NethelpersLinkType_LINK_CSLIP6            NethelpersLinkType = 259
	NethelpersLinkType_LINK_RSRVD             NethelpersLinkType = 260
	NethelpersLinkType_LINK_ADAPT             NethelpersLinkType = 264
	NethelpersLinkType_LINK_ROSE              NethelpersLinkType = 270
	NethelpersLinkType_LINK_X25               NethelpersLinkType = 271
	NethelpersLinkType_LINK_HWX25             NethelpersLinkType = 272
	NethelpersLinkType_LINK_CAN               NethelpersLinkType = 280
	NethelpersLinkType_LINK_PPP               NethelpersLinkType = 512
	NethelpersLinkType_LINK_CISCO             NethelpersLinkType = 513
	NethelpersLinkType_LINK_HDLC              NethelpersLinkType = 513
	NethelpersLinkType_LINK_LAPB              NethelpersLinkType = 516
	NethelpersLinkType_LINK_DDCMP             NethelpersLinkType = 517
	NethelpersLinkType_LINK_RAWHDLC           NethelpersLinkType = 518
	NethelpersLinkType_LINK_TUNNEL            NethelpersLinkType = 768
	NethelpersLinkType_LINK_TUNNEL6           NethelpersLinkType = 769
	NethelpersLinkType_LINK_FRAD              NethelpersLinkType = 770
	NethelpersLinkType_LINK_SKIP              NethelpersLinkType = 771
	NethelpersLinkType_LINK_LOOPBCK           NethelpersLinkType = 772
	NethelpersLinkType_LINK_LOCALTLK          NethelpersLinkType = 773
	NethelpersLinkType_LINK_FDDI              NethelpersLinkType = 774
	NethelpersLinkType_LINK_BIF               NethelpersLinkType = 775
	NethelpersLinkType_LINK_SIT               NethelpersLinkType = 776
	NethelpersLinkType_LINK_IPDDP             NethelpersLinkType = 777
	NethelpersLinkType_LINK_IPGRE             NethelpersLinkType = 778
	NethelpersLinkType_LINK_PIMREG            NethelpersLinkType = 779
	NethelpersLinkType_LINK_HIPPI             NethelpersLinkType = 780
	NethelpersLinkType_LINK_ASH               NethelpersLinkType = 781
	NethelpersLinkType_LINK_ECONET            NethelpersLinkType = 782
	NethelpersLinkType_LINK_IRDA              NethelpersLinkType = 783
	NethelpersLinkType_LINK_FCPP              NethelpersLinkType = 784
	NethelpersLinkType_LINK_FCAL              NethelpersLinkType = 785
	NethelpersLinkType_LINK_FCPL              NethelpersLinkType = 786
	NethelpersLinkType_LINK_FCFABRIC          NethelpersLinkType = 787
	NethelpersLinkType_LINK_FCFABRIC1         NethelpersLinkType = 788
	NethelpersLinkType_LINK_FCFABRIC2         NethelpersLinkType = 789
	NethelpersLinkType_LINK_FCFABRIC3         NethelpersLinkType = 790
	NethelpersLinkType_LINK_FCFABRIC4         NethelpersLinkType = 791
	NethelpersLinkType_LINK_FCFABRIC5         NethelpersLinkType = 792
	NethelpersLinkType_LINK_FCFABRIC6         NethelpersLinkType = 793
	NethelpersLinkType_LINK_FCFABRIC7         NethelpersLinkType = 794
	NethelpersLinkType_LINK_FCFABRIC8         NethelpersLinkType = 795
	NethelpersLinkType_LINK_FCFABRIC9         NethelpersLinkType = 796
	NethelpersLinkType_LINK_FCFABRIC10        NethelpersLinkType = 797
	NethelpersLinkType_LINK_FCFABRIC11        NethelpersLinkType = 798
	NethelpersLinkType_LINK_FCFABRIC12        NethelpersLinkType = 799
	NethelpersLinkType_LINK_IEE802TR          NethelpersLinkType = 800
	NethelpersLinkType_LINK_IEE80211          NethelpersLinkType = 801
	NethelpersLinkType_LINK_IEE80211PRISM     NethelpersLinkType = 802
	NethelpersLinkType_LINK_IEE80211_RADIOTAP NethelpersLinkType = 803
	NethelpersLinkType_LINK_IEE8021154        NethelpersLinkType = 804
	NethelpersLinkType_LINK_IEE8021154MONITOR NethelpersLinkType = 805
	NethelpersLinkType_LINK_PHONET            NethelpersLinkType = 820
	NethelpersLinkType_LINK_PHONETPIPE        NethelpersLinkType = 821
	NethelpersLinkType_LINK_CAIF              NethelpersLinkType = 822
	NethelpersLinkType_LINK_IP6GRE            NethelpersLinkType = 823
	NethelpersLinkType_LINK_NETLINK           NethelpersLinkType = 824
	NethelpersLinkType_LINK6_LOWPAN           NethelpersLinkType = 825
	NethelpersLinkType_LINK_VOID              NethelpersLinkType = 65535
	NethelpersLinkType_LINK_NONE              NethelpersLinkType = 65534
)

// Enum value maps for NethelpersLinkType.
var (
	NethelpersLinkType_name = map[int32]string{
		0:   "LINK_NETROM",
		1:   "LINK_ETHER",
		2:   "LINK_EETHER",
		3:   "LINK_AX25",
		4:   "LINK_PRONET",
		5:   "LINK_CHAOS",
		6:   "LINK_IEE802",
		7:   "LINK_ARCNET",
		8:   "LINK_ATALK",
		15:  "LINK_DLCI",
		19:  "LINK_ATM",
		23:  "LINK_METRICOM",
		24:  "LINK_IEEE1394",
		27:  "LINK_EUI64",
		32:  "LINK_INFINIBAND",
		256: "LINK_SLIP",
		257: "LINK_CSLIP",
		258: "LINK_SLIP6",
		259: "LINK_CSLIP6",
		260: "LINK_RSRVD",
		264: "LINK_ADAPT",
		270: "LINK_ROSE",
		271: "LINK_X25",
		272: "LINK_HWX25",
		280: "LINK_CAN",
		512: "LINK_PPP",
		513: "LINK_CISCO",
		// Duplicate value: 513: "LINK_HDLC",
		516:   "LINK_LAPB",
		517:   "LINK_DDCMP",
		518:   "LINK_RAWHDLC",
		768:   "LINK_TUNNEL",
		769:   "LINK_TUNNEL6",
		770:   "LINK_FRAD",
		771:   "LINK_SKIP",
		772:   "LINK_LOOPBCK",
		773:   "LINK_LOCALTLK",
		774:   "LINK_FDDI",
		775:   "LINK_BIF",
		776:   "LINK_SIT",
		777:   "LINK_IPDDP",
		778:   "LINK_IPGRE",
		779:   "LINK_PIMREG",
		780:   "LINK_HIPPI",
		781:   "LINK_ASH",
		782:   "LINK_ECONET",
		783:   "LINK_IRDA",
		784:   "LINK_FCPP",
		785:   "LINK_FCAL",
		786:   "LINK_FCPL",
		787:   "LINK_FCFABRIC",
		788:   "LINK_FCFABRIC1",
		789:   "LINK_FCFABRIC2",
		790:   "LINK_FCFABRIC3",
		791:   "LINK_FCFABRIC4",
		792:   "LINK_FCFABRIC5",
		793:   "LINK_FCFABRIC6",
		794:   "LINK_FCFABRIC7",
		795:   "LINK_FCFABRIC8",
		796:   "LINK_FCFABRIC9",
		797:   "LINK_FCFABRIC10",
		798:   "LINK_FCFABRIC11",
		799:   "LINK_FCFABRIC12",
		800:   "LINK_IEE802TR",
		801:   "LINK_IEE80211",
		802:   "LINK_IEE80211PRISM",
		803:   "LINK_IEE80211_RADIOTAP",
		804:   "LINK_IEE8021154",
		805:   "LINK_IEE8021154MONITOR",
		820:   "LINK_PHONET",
		821:   "LINK_PHONETPIPE",
		822:   "LINK_CAIF",
		823:   "LINK_IP6GRE",
		824:   "LINK_NETLINK",
		825:   "LINK6_LOWPAN",
		65535: "LINK_VOID",
		65534: "LINK_NONE",
	}
	NethelpersLinkType_value = map[string]int32{
		"LINK_NETROM":            0,
		"LINK_ETHER":             1,
		"LINK_EETHER":            2,
		"LINK_AX25":              3,
		"LINK_PRONET":            4,
		"LINK_CHAOS":             5,
		"LINK_IEE802":            6,
		"LINK_ARCNET":            7,
		"LINK_ATALK":             8,
		"LINK_DLCI":              15,
		"LINK_ATM":               19,
		"LINK_METRICOM":          23,
		"LINK_IEEE1394":          24,
		"LINK_EUI64":             27,
		"LINK_INFINIBAND":        32,
		"LINK_SLIP":              256,
		"LINK_CSLIP":             257,
		"LINK_SLIP6":             258,
		"LINK_CSLIP6":            259,
		"LINK_RSRVD":             260,
		"LINK_ADAPT":             264,
		"LINK_ROSE":              270,
		"LINK_X25":               271,
		"LINK_HWX25":             272,
		"LINK_CAN":               280,
		"LINK_PPP":               512,
		"LINK_CISCO":             513,
		"LINK_HDLC":              513,
		"LINK_LAPB":              516,
		"LINK_DDCMP":             517,
		"LINK_RAWHDLC":           518,
		"LINK_TUNNEL":            768,
		"LINK_TUNNEL6":           769,
		"LINK_FRAD":              770,
		"LINK_SKIP":              771,
		"LINK_LOOPBCK":           772,
		"LINK_LOCALTLK":          773,
		"LINK_FDDI":              774,
		"LINK_BIF":               775,
		"LINK_SIT":               776,
		"LINK_IPDDP":             777,
		"LINK_IPGRE":             778,
		"LINK_PIMREG":            779,
		"LINK_HIPPI":             780,
		"LINK_ASH":               781,
		"LINK_ECONET":            782,
		"LINK_IRDA":              783,
		"LINK_FCPP":              784,
		"LINK_FCAL":              785,
		"LINK_FCPL":              786,
		"LINK_FCFABRIC":          787,
		"LINK_FCFABRIC1":         788,
		"LINK_FCFABRIC2":         789,
		"LINK_FCFABRIC3":         790,
		"LINK_FCFABRIC4":         791,
		"LINK_FCFABRIC5":         792,
		"LINK_FCFABRIC6":         793,
		"LINK_FCFABRIC7":         794,
		"LINK_FCFABRIC8":         795,
		"LINK_FCFABRIC9":         796,
		"LINK_FCFABRIC10":        797,
		"LINK_FCFABRIC11":        798,
		"LINK_FCFABRIC12":        799,
		"LINK_IEE802TR":          800,
		"LINK_IEE80211":          801,
		"LINK_IEE80211PRISM":     802,
		"LINK_IEE80211_RADIOTAP": 803,
		"LINK_IEE8021154":        804,
		"LINK_IEE8021154MONITOR": 805,
		"LINK_PHONET":            820,
		"LINK_PHONETPIPE":        821,
		"LINK_CAIF":              822,
		"LINK_IP6GRE":            823,
		"LINK_NETLINK":           824,
		"LINK6_LOWPAN":           825,
		"LINK_VOID":              65535,
		"LINK_NONE":              65534,
	}
)

func (x NethelpersLinkType) Enum() *NethelpersLinkType {
	p := new(NethelpersLinkType)
	*p = x
	return p
}

func (x NethelpersLinkType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersLinkType) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[20].Descriptor()
}

func (NethelpersLinkType) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[20]
}

func (x NethelpersLinkType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersLinkType.Descriptor instead.
func (NethelpersLinkType) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{20}
}

// NethelpersMatchOperator is a netfilter match operator.
type NethelpersMatchOperator int32

const (
	NethelpersMatchOperator_OPERATOR_EQUAL     NethelpersMatchOperator = 0
	NethelpersMatchOperator_OPERATOR_NOT_EQUAL NethelpersMatchOperator = 1
)

// Enum value maps for NethelpersMatchOperator.
var (
	NethelpersMatchOperator_name = map[int32]string{
		0: "OPERATOR_EQUAL",
		1: "OPERATOR_NOT_EQUAL",
	}
	NethelpersMatchOperator_value = map[string]int32{
		"OPERATOR_EQUAL":     0,
		"OPERATOR_NOT_EQUAL": 1,
	}
)

func (x NethelpersMatchOperator) Enum() *NethelpersMatchOperator {
	p := new(NethelpersMatchOperator)
	*p = x
	return p
}

func (x NethelpersMatchOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersMatchOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[21].Descriptor()
}

func (NethelpersMatchOperator) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[21]
}

func (x NethelpersMatchOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersMatchOperator.Descriptor instead.
func (NethelpersMatchOperator) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{21}
}

// NethelpersNfTablesChainHook wraps nftables.ChainHook for YAML marshaling.
type NethelpersNfTablesChainHook int32

const (
	NethelpersNfTablesChainHook_CHAIN_HOOK_PREROUTING  NethelpersNfTablesChainHook = 0
	NethelpersNfTablesChainHook_CHAIN_HOOK_INPUT       NethelpersNfTablesChainHook = 1
	NethelpersNfTablesChainHook_CHAIN_HOOK_FORWARD     NethelpersNfTablesChainHook = 2
	NethelpersNfTablesChainHook_CHAIN_HOOK_OUTPUT      NethelpersNfTablesChainHook = 3
	NethelpersNfTablesChainHook_CHAIN_HOOK_POSTROUTING NethelpersNfTablesChainHook = 4
)

// Enum value maps for NethelpersNfTablesChainHook.
var (
	NethelpersNfTablesChainHook_name = map[int32]string{
		0: "CHAIN_HOOK_PREROUTING",
		1: "CHAIN_HOOK_INPUT",
		2: "CHAIN_HOOK_FORWARD",
		3: "CHAIN_HOOK_OUTPUT",
		4: "CHAIN_HOOK_POSTROUTING",
	}
	NethelpersNfTablesChainHook_value = map[string]int32{
		"CHAIN_HOOK_PREROUTING":  0,
		"CHAIN_HOOK_INPUT":       1,
		"CHAIN_HOOK_FORWARD":     2,
		"CHAIN_HOOK_OUTPUT":      3,
		"CHAIN_HOOK_POSTROUTING": 4,
	}
)

func (x NethelpersNfTablesChainHook) Enum() *NethelpersNfTablesChainHook {
	p := new(NethelpersNfTablesChainHook)
	*p = x
	return p
}

func (x NethelpersNfTablesChainHook) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersNfTablesChainHook) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[22].Descriptor()
}

func (NethelpersNfTablesChainHook) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[22]
}

func (x NethelpersNfTablesChainHook) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersNfTablesChainHook.Descriptor instead.
func (NethelpersNfTablesChainHook) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{22}
}

// NethelpersNfTablesChainPriority wraps nftables.ChainPriority for YAML marshaling.
type NethelpersNfTablesChainPriority int32

const (
	NethelpersNfTablesChainPriority_NETHELPERS_NFTABLESCHAINPRIORITY_UNSPECIFIED NethelpersNfTablesChainPriority = 0
	NethelpersNfTablesChainPriority_CHAIN_PRIORITY_FIRST                         NethelpersNfTablesChainPriority = -2147483648
	NethelpersNfTablesChainPriority_CHAIN_PRIORITY_CONNTRACK_DEFRAG              NethelpersNfTablesChainPriority = -400
	NethelpersNfTablesChainPriority_CHAIN_PRIORITY_RAW                           NethelpersNfTablesChainPriority = -300
	NethelpersNfTablesChainPriority_CHAIN_PRIORITY_SE_LINUX_FIRST                NethelpersNfTablesChainPriority = -225
	NethelpersNfTablesChainPriority_CHAIN_PRIORITY_CONNTRACK                     NethelpersNfTablesChainPriority = -200
	NethelpersNfTablesChainPriority_CHAIN_PRIORITY_MANGLE                        NethelpersNfTablesChainPriority = -150
	NethelpersNfTablesChainPriority_CHAIN_PRIORITY_NAT_DEST                      NethelpersNfTablesChainPriority = -100
	NethelpersNfTablesChainPriority_CHAIN_PRIORITY_FILTER                        NethelpersNfTablesChainPriority = 0
	NethelpersNfTablesChainPriority_CHAIN_PRIORITY_SECURITY                      NethelpersNfTablesChainPriority = 50
	NethelpersNfTablesChainPriority_CHAIN_PRIORITY_NAT_SOURCE                    NethelpersNfTablesChainPriority = 100
	NethelpersNfTablesChainPriority_CHAIN_PRIORITY_SE_LINUX_LAST                 NethelpersNfTablesChainPriority = 225
	NethelpersNfTablesChainPriority_CHAIN_PRIORITY_CONNTRACK_HELPER              NethelpersNfTablesChainPriority = 300
	NethelpersNfTablesChainPriority_CHAIN_PRIORITY_LAST                          NethelpersNfTablesChainPriority = 2147483647
)

// Enum value maps for NethelpersNfTablesChainPriority.
var (
	NethelpersNfTablesChainPriority_name = map[int32]string{
		0:           "NETHELPERS_NFTABLESCHAINPRIORITY_UNSPECIFIED",
		-2147483648: "CHAIN_PRIORITY_FIRST",
		-400:        "CHAIN_PRIORITY_CONNTRACK_DEFRAG",
		-300:        "CHAIN_PRIORITY_RAW",
		-225:        "CHAIN_PRIORITY_SE_LINUX_FIRST",
		-200:        "CHAIN_PRIORITY_CONNTRACK",
		-150:        "CHAIN_PRIORITY_MANGLE",
		-100:        "CHAIN_PRIORITY_NAT_DEST",
		// Duplicate value: 0: "CHAIN_PRIORITY_FILTER",
		50:         "CHAIN_PRIORITY_SECURITY",
		100:        "CHAIN_PRIORITY_NAT_SOURCE",
		225:        "CHAIN_PRIORITY_SE_LINUX_LAST",
		300:        "CHAIN_PRIORITY_CONNTRACK_HELPER",
		2147483647: "CHAIN_PRIORITY_LAST",
	}
	NethelpersNfTablesChainPriority_value = map[string]int32{
		"NETHELPERS_NFTABLESCHAINPRIORITY_UNSPECIFIED": 0,
		"CHAIN_PRIORITY_FIRST":                         -2147483648,
		"CHAIN_PRIORITY_CONNTRACK_DEFRAG":              -400,
		"CHAIN_PRIORITY_RAW":                           -300,
		"CHAIN_PRIORITY_SE_LINUX_FIRST":                -225,
		"CHAIN_PRIORITY_CONNTRACK":                     -200,
		"CHAIN_PRIORITY_MANGLE":                        -150,
		"CHAIN_PRIORITY_NAT_DEST":                      -100,
		"CHAIN_PRIORITY_FILTER":                        0,
		"CHAIN_PRIORITY_SECURITY":                      50,
		"CHAIN_PRIORITY_NAT_SOURCE":                    100,
		"CHAIN_PRIORITY_SE_LINUX_LAST":                 225,
		"CHAIN_PRIORITY_CONNTRACK_HELPER":              300,
		"CHAIN_PRIORITY_LAST":                          2147483647,
	}
)

func (x NethelpersNfTablesChainPriority) Enum() *NethelpersNfTablesChainPriority {
	p := new(NethelpersNfTablesChainPriority)
	*p = x
	return p
}

func (x NethelpersNfTablesChainPriority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersNfTablesChainPriority) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[23].Descriptor()
}

func (NethelpersNfTablesChainPriority) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[23]
}

func (x NethelpersNfTablesChainPriority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersNfTablesChainPriority.Descriptor instead.
func (NethelpersNfTablesChainPriority) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{23}
}

// NethelpersNfTablesVerdict wraps nftables.Verdict for YAML marshaling.
type NethelpersNfTablesVerdict int32

const (
	NethelpersNfTablesVerdict_VERDICT_DROP   NethelpersNfTablesVerdict = 0
	NethelpersNfTablesVerdict_VERDICT_ACCEPT NethelpersNfTablesVerdict = 1
)

// Enum value maps for NethelpersNfTablesVerdict.
var (
	NethelpersNfTablesVerdict_name = map[int32]string{
		0: "VERDICT_DROP",
		1: "VERDICT_ACCEPT",
	}
	NethelpersNfTablesVerdict_value = map[string]int32{
		"VERDICT_DROP":   0,
		"VERDICT_ACCEPT": 1,
	}
)

func (x NethelpersNfTablesVerdict) Enum() *NethelpersNfTablesVerdict {
	p := new(NethelpersNfTablesVerdict)
	*p = x
	return p
}

func (x NethelpersNfTablesVerdict) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersNfTablesVerdict) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[24].Descriptor()
}

func (NethelpersNfTablesVerdict) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[24]
}

func (x NethelpersNfTablesVerdict) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersNfTablesVerdict.Descriptor instead.
func (NethelpersNfTablesVerdict) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{24}
}

// NethelpersOperationalState wraps rtnetlink.OperationalState for YAML marshaling.
type NethelpersOperationalState int32

const (
	NethelpersOperationalState_OPER_STATE_UNKNOWN          NethelpersOperationalState = 0
	NethelpersOperationalState_OPER_STATE_NOT_PRESENT      NethelpersOperationalState = 1
	NethelpersOperationalState_OPER_STATE_DOWN             NethelpersOperationalState = 2
	NethelpersOperationalState_OPER_STATE_LOWER_LAYER_DOWN NethelpersOperationalState = 3
	NethelpersOperationalState_OPER_STATE_TESTING          NethelpersOperationalState = 4
	NethelpersOperationalState_OPER_STATE_DORMANT          NethelpersOperationalState = 5
	NethelpersOperationalState_OPER_STATE_UP               NethelpersOperationalState = 6
)

// Enum value maps for NethelpersOperationalState.
var (
	NethelpersOperationalState_name = map[int32]string{
		0: "OPER_STATE_UNKNOWN",
		1: "OPER_STATE_NOT_PRESENT",
		2: "OPER_STATE_DOWN",
		3: "OPER_STATE_LOWER_LAYER_DOWN",
		4: "OPER_STATE_TESTING",
		5: "OPER_STATE_DORMANT",
		6: "OPER_STATE_UP",
	}
	NethelpersOperationalState_value = map[string]int32{
		"OPER_STATE_UNKNOWN":          0,
		"OPER_STATE_NOT_PRESENT":      1,
		"OPER_STATE_DOWN":             2,
		"OPER_STATE_LOWER_LAYER_DOWN": 3,
		"OPER_STATE_TESTING":          4,
		"OPER_STATE_DORMANT":          5,
		"OPER_STATE_UP":               6,
	}
)

func (x NethelpersOperationalState) Enum() *NethelpersOperationalState {
	p := new(NethelpersOperationalState)
	*p = x
	return p
}

func (x NethelpersOperationalState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersOperationalState) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[25].Descriptor()
}

func (NethelpersOperationalState) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[25]
}

func (x NethelpersOperationalState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersOperationalState.Descriptor instead.
func (NethelpersOperationalState) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{25}
}

// NethelpersPort wraps ethtool.Port for YAML marshaling.
type NethelpersPort int32

const (
	NethelpersPort_TWISTED_PAIR  NethelpersPort = 0
	NethelpersPort_AUI           NethelpersPort = 1
	NethelpersPort_MII           NethelpersPort = 2
	NethelpersPort_FIBRE         NethelpersPort = 3
	NethelpersPort_BNC           NethelpersPort = 4
	NethelpersPort_DIRECT_ATTACH NethelpersPort = 5
	NethelpersPort_NONE          NethelpersPort = 239
	NethelpersPort_OTHER         NethelpersPort = 255
)

// Enum value maps for NethelpersPort.
var (
	NethelpersPort_name = map[int32]string{
		0:   "TWISTED_PAIR",
		1:   "AUI",
		2:   "MII",
		3:   "FIBRE",
		4:   "BNC",
		5:   "DIRECT_ATTACH",
		239: "NONE",
		255: "OTHER",
	}
	NethelpersPort_value = map[string]int32{
		"TWISTED_PAIR":  0,
		"AUI":           1,
		"MII":           2,
		"FIBRE":         3,
		"BNC":           4,
		"DIRECT_ATTACH": 5,
		"NONE":          239,
		"OTHER":         255,
	}
)

func (x NethelpersPort) Enum() *NethelpersPort {
	p := new(NethelpersPort)
	*p = x
	return p
}

func (x NethelpersPort) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersPort) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[26].Descriptor()
}

func (NethelpersPort) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[26]
}

func (x NethelpersPort) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersPort.Descriptor instead.
func (NethelpersPort) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{26}
}

// NethelpersPrimaryReselect is an ARP targets mode.
type NethelpersPrimaryReselect int32

const (
	NethelpersPrimaryReselect_PRIMARY_RESELECT_ALWAYS  NethelpersPrimaryReselect = 0
	NethelpersPrimaryReselect_PRIMARY_RESELECT_BETTER  NethelpersPrimaryReselect = 1
	NethelpersPrimaryReselect_PRIMARY_RESELECT_FAILURE NethelpersPrimaryReselect = 2
)

// Enum value maps for NethelpersPrimaryReselect.
var (
	NethelpersPrimaryReselect_name = map[int32]string{
		0: "PRIMARY_RESELECT_ALWAYS",
		1: "PRIMARY_RESELECT_BETTER",
		2: "PRIMARY_RESELECT_FAILURE",
	}
	NethelpersPrimaryReselect_value = map[string]int32{
		"PRIMARY_RESELECT_ALWAYS":  0,
		"PRIMARY_RESELECT_BETTER":  1,
		"PRIMARY_RESELECT_FAILURE": 2,
	}
)

func (x NethelpersPrimaryReselect) Enum() *NethelpersPrimaryReselect {
	p := new(NethelpersPrimaryReselect)
	*p = x
	return p
}

func (x NethelpersPrimaryReselect) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersPrimaryReselect) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[27].Descriptor()
}

func (NethelpersPrimaryReselect) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[27]
}

func (x NethelpersPrimaryReselect) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersPrimaryReselect.Descriptor instead.
func (NethelpersPrimaryReselect) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{27}
}

// NethelpersProtocol is a inet protocol.
type NethelpersProtocol int32

const (
	NethelpersProtocol_NETHELPERS_PROTOCOL_UNSPECIFIED NethelpersProtocol = 0
	NethelpersProtocol_PROTOCOL_ICMP                   NethelpersProtocol = 1
	NethelpersProtocol_PROTOCOL_TCP                    NethelpersProtocol = 6
	NethelpersProtocol_PROTOCOL_UDP                    NethelpersProtocol = 17
	NethelpersProtocol_PROTOCOL_ICM_PV6                NethelpersProtocol = 58
)

// Enum value maps for NethelpersProtocol.
var (
	NethelpersProtocol_name = map[int32]string{
		0:  "NETHELPERS_PROTOCOL_UNSPECIFIED",
		1:  "PROTOCOL_ICMP",
		6:  "PROTOCOL_TCP",
		17: "PROTOCOL_UDP",
		58: "PROTOCOL_ICM_PV6",
	}
	NethelpersProtocol_value = map[string]int32{
		"NETHELPERS_PROTOCOL_UNSPECIFIED": 0,
		"PROTOCOL_ICMP":                   1,
		"PROTOCOL_TCP":                    6,
		"PROTOCOL_UDP":                    17,
		"PROTOCOL_ICM_PV6":                58,
	}
)

func (x NethelpersProtocol) Enum() *NethelpersProtocol {
	p := new(NethelpersProtocol)
	*p = x
	return p
}

func (x NethelpersProtocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersProtocol) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[28].Descriptor()
}

func (NethelpersProtocol) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[28]
}

func (x NethelpersProtocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersProtocol.Descriptor instead.
func (NethelpersProtocol) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{28}
}

// NethelpersRouteFlag wraps RTM_F_* constants.
type NethelpersRouteFlag int32

const (
	NethelpersRouteFlag_NETHELPERS_ROUTEFLAG_UNSPECIFIED NethelpersRouteFlag = 0
	NethelpersRouteFlag_ROUTE_NOTIFY                     NethelpersRouteFlag = 256
	NethelpersRouteFlag_ROUTE_CLONED                     NethelpersRouteFlag = 512
	NethelpersRouteFlag_ROUTE_EQUALIZE                   NethelpersRouteFlag = 1024
	NethelpersRouteFlag_ROUTE_PREFIX                     NethelpersRouteFlag = 2048
	NethelpersRouteFlag_ROUTE_LOOKUP_TABLE               NethelpersRouteFlag = 4096
	NethelpersRouteFlag_ROUTE_FIB_MATCH                  NethelpersRouteFlag = 8192
	NethelpersRouteFlag_ROUTE_OFFLOAD                    NethelpersRouteFlag = 16384
	NethelpersRouteFlag_ROUTE_TRAP                       NethelpersRouteFlag = 32768
)

// Enum value maps for NethelpersRouteFlag.
var (
	NethelpersRouteFlag_name = map[int32]string{
		0:     "NETHELPERS_ROUTEFLAG_UNSPECIFIED",
		256:   "ROUTE_NOTIFY",
		512:   "ROUTE_CLONED",
		1024:  "ROUTE_EQUALIZE",
		2048:  "ROUTE_PREFIX",
		4096:  "ROUTE_LOOKUP_TABLE",
		8192:  "ROUTE_FIB_MATCH",
		16384: "ROUTE_OFFLOAD",
		32768: "ROUTE_TRAP",
	}
	NethelpersRouteFlag_value = map[string]int32{
		"NETHELPERS_ROUTEFLAG_UNSPECIFIED": 0,
		"ROUTE_NOTIFY":                     256,
		"ROUTE_CLONED":                     512,
		"ROUTE_EQUALIZE":                   1024,
		"ROUTE_PREFIX":                     2048,
		"ROUTE_LOOKUP_TABLE":               4096,
		"ROUTE_FIB_MATCH":                  8192,
		"ROUTE_OFFLOAD":                    16384,
		"ROUTE_TRAP":                       32768,
	}
)

func (x NethelpersRouteFlag) Enum() *NethelpersRouteFlag {
	p := new(NethelpersRouteFlag)
	*p = x
	return p
}

func (x NethelpersRouteFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersRouteFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[29].Descriptor()
}

func (NethelpersRouteFlag) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[29]
}

func (x NethelpersRouteFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersRouteFlag.Descriptor instead.
func (NethelpersRouteFlag) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{29}
}

// NethelpersRouteProtocol is a routing protocol.
type NethelpersRouteProtocol int32

const (
	NethelpersRouteProtocol_PROTOCOL_UNSPEC     NethelpersRouteProtocol = 0
	NethelpersRouteProtocol_PROTOCOL_REDIRECT   NethelpersRouteProtocol = 1
	NethelpersRouteProtocol_PROTOCOL_KERNEL     NethelpersRouteProtocol = 2
	NethelpersRouteProtocol_PROTOCOL_BOOT       NethelpersRouteProtocol = 3
	NethelpersRouteProtocol_PROTOCOL_STATIC     NethelpersRouteProtocol = 4
	NethelpersRouteProtocol_PROTOCOL_RA         NethelpersRouteProtocol = 9
	NethelpersRouteProtocol_PROTOCOL_MRT        NethelpersRouteProtocol = 10
	NethelpersRouteProtocol_PROTOCOL_ZEBRA      NethelpersRouteProtocol = 11
	NethelpersRouteProtocol_PROTOCOL_BIRD       NethelpersRouteProtocol = 12
	NethelpersRouteProtocol_PROTOCOL_DNROUTED   NethelpersRouteProtocol = 13
	NethelpersRouteProtocol_PROTOCOL_XORP       NethelpersRouteProtocol = 14
	NethelpersRouteProtocol_PROTOCOL_NTK        NethelpersRouteProtocol = 15
	NethelpersRouteProtocol_PROTOCOL_DHCP       NethelpersRouteProtocol = 16
	NethelpersRouteProtocol_PROTOCOL_MRTD       NethelpersRouteProtocol = 17
	NethelpersRouteProtocol_PROTOCOL_KEEPALIVED NethelpersRouteProtocol = 18
	NethelpersRouteProtocol_PROTOCOL_BABEL      NethelpersRouteProtocol = 42
	NethelpersRouteProtocol_PROTOCOL_OPENR      NethelpersRouteProtocol = 99
	NethelpersRouteProtocol_PROTOCOL_BGP        NethelpersRouteProtocol = 186
	NethelpersRouteProtocol_PROTOCOL_ISIS       NethelpersRouteProtocol = 187
	NethelpersRouteProtocol_PROTOCOL_OSPF       NethelpersRouteProtocol = 188
	NethelpersRouteProtocol_PROTOCOL_RIP        NethelpersRouteProtocol = 189
	NethelpersRouteProtocol_PROTOCOL_EIGRP      NethelpersRouteProtocol = 192
)

// Enum value maps for NethelpersRouteProtocol.
var (
	NethelpersRouteProtocol_name = map[int32]string{
		0:   "PROTOCOL_UNSPEC",
		1:   "PROTOCOL_REDIRECT",
		2:   "PROTOCOL_KERNEL",
		3:   "PROTOCOL_BOOT",
		4:   "PROTOCOL_STATIC",
		9:   "PROTOCOL_RA",
		10:  "PROTOCOL_MRT",
		11:  "PROTOCOL_ZEBRA",
		12:  "PROTOCOL_BIRD",
		13:  "PROTOCOL_DNROUTED",
		14:  "PROTOCOL_XORP",
		15:  "PROTOCOL_NTK",
		16:  "PROTOCOL_DHCP",
		17:  "PROTOCOL_MRTD",
		18:  "PROTOCOL_KEEPALIVED",
		42:  "PROTOCOL_BABEL",
		99:  "PROTOCOL_OPENR",
		186: "PROTOCOL_BGP",
		187: "PROTOCOL_ISIS",
		188: "PROTOCOL_OSPF",
		189: "PROTOCOL_RIP",
		192: "PROTOCOL_EIGRP",
	}
	NethelpersRouteProtocol_value = map[string]int32{
		"PROTOCOL_UNSPEC":     0,
		"PROTOCOL_REDIRECT":   1,
		"PROTOCOL_KERNEL":     2,
		"PROTOCOL_BOOT":       3,
		"PROTOCOL_STATIC":     4,
		"PROTOCOL_RA":         9,
		"PROTOCOL_MRT":        10,
		"PROTOCOL_ZEBRA":      11,
		"PROTOCOL_BIRD":       12,
		"PROTOCOL_DNROUTED":   13,
		"PROTOCOL_XORP":       14,
		"PROTOCOL_NTK":        15,
		"PROTOCOL_DHCP":       16,
		"PROTOCOL_MRTD":       17,
		"PROTOCOL_KEEPALIVED": 18,
		"PROTOCOL_BABEL":      42,
		"PROTOCOL_OPENR":      99,
		"PROTOCOL_BGP":        186,
		"PROTOCOL_ISIS":       187,
		"PROTOCOL_OSPF":       188,
		"PROTOCOL_RIP":        189,
		"PROTOCOL_EIGRP":      192,
	}
)

func (x NethelpersRouteProtocol) Enum() *NethelpersRouteProtocol {
	p := new(NethelpersRouteProtocol)
	*p = x
	return p
}

func (x NethelpersRouteProtocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersRouteProtocol) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[30].Descriptor()
}

func (NethelpersRouteProtocol) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[30]
}

func (x NethelpersRouteProtocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersRouteProtocol.Descriptor instead.
func (NethelpersRouteProtocol) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{30}
}

// NethelpersRouteType is a route type.
type NethelpersRouteType int32

const (
	NethelpersRouteType_TYPE_UNSPEC      NethelpersRouteType = 0
	NethelpersRouteType_TYPE_UNICAST     NethelpersRouteType = 1
	NethelpersRouteType_TYPE_LOCAL       NethelpersRouteType = 2
	NethelpersRouteType_TYPE_BROADCAST   NethelpersRouteType = 3
	NethelpersRouteType_TYPE_ANYCAST     NethelpersRouteType = 4
	NethelpersRouteType_TYPE_MULTICAST   NethelpersRouteType = 5
	NethelpersRouteType_TYPE_BLACKHOLE   NethelpersRouteType = 6
	NethelpersRouteType_TYPE_UNREACHABLE NethelpersRouteType = 7
	NethelpersRouteType_TYPE_PROHIBIT    NethelpersRouteType = 8
	NethelpersRouteType_TYPE_THROW       NethelpersRouteType = 9
	NethelpersRouteType_TYPE_NAT         NethelpersRouteType = 10
	NethelpersRouteType_TYPE_X_RESOLVE   NethelpersRouteType = 11
)

// Enum value maps for NethelpersRouteType.
var (
	NethelpersRouteType_name = map[int32]string{
		0:  "TYPE_UNSPEC",
		1:  "TYPE_UNICAST",
		2:  "TYPE_LOCAL",
		3:  "TYPE_BROADCAST",
		4:  "TYPE_ANYCAST",
		5:  "TYPE_MULTICAST",
		6:  "TYPE_BLACKHOLE",
		7:  "TYPE_UNREACHABLE",
		8:  "TYPE_PROHIBIT",
		9:  "TYPE_THROW",
		10: "TYPE_NAT",
		11: "TYPE_X_RESOLVE",
	}
	NethelpersRouteType_value = map[string]int32{
		"TYPE_UNSPEC":      0,
		"TYPE_UNICAST":     1,
		"TYPE_LOCAL":       2,
		"TYPE_BROADCAST":   3,
		"TYPE_ANYCAST":     4,
		"TYPE_MULTICAST":   5,
		"TYPE_BLACKHOLE":   6,
		"TYPE_UNREACHABLE": 7,
		"TYPE_PROHIBIT":    8,
		"TYPE_THROW":       9,
		"TYPE_NAT":         10,
		"TYPE_X_RESOLVE":   11,
	}
)

func (x NethelpersRouteType) Enum() *NethelpersRouteType {
	p := new(NethelpersRouteType)
	*p = x
	return p
}

func (x NethelpersRouteType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersRouteType) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[31].Descriptor()
}

func (NethelpersRouteType) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[31]
}

func (x NethelpersRouteType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersRouteType.Descriptor instead.
func (NethelpersRouteType) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{31}
}

// NethelpersRoutingTable is a routing table ID.
type NethelpersRoutingTable int32

const (
	NethelpersRoutingTable_TABLE_UNSPEC  NethelpersRoutingTable = 0
	NethelpersRoutingTable_TABLE1        NethelpersRoutingTable = 1
	NethelpersRoutingTable_TABLE2        NethelpersRoutingTable = 2
	NethelpersRoutingTable_TABLE3        NethelpersRoutingTable = 3
	NethelpersRoutingTable_TABLE4        NethelpersRoutingTable = 4
	NethelpersRoutingTable_TABLE5        NethelpersRoutingTable = 5
	NethelpersRoutingTable_TABLE6        NethelpersRoutingTable = 6
	NethelpersRoutingTable_TABLE7        NethelpersRoutingTable = 7
	NethelpersRoutingTable_TABLE8        NethelpersRoutingTable = 8
	NethelpersRoutingTable_TABLE9        NethelpersRoutingTable = 9
	NethelpersRoutingTable_TABLE10       NethelpersRoutingTable = 10
	NethelpersRoutingTable_TABLE11       NethelpersRoutingTable = 11
	NethelpersRoutingTable_TABLE12       NethelpersRoutingTable = 12
	NethelpersRoutingTable_TABLE13       NethelpersRoutingTable = 13
	NethelpersRoutingTable_TABLE14       NethelpersRoutingTable = 14
	NethelpersRoutingTable_TABLE15       NethelpersRoutingTable = 15
	NethelpersRoutingTable_TABLE16       NethelpersRoutingTable = 16
	NethelpersRoutingTable_TABLE17       NethelpersRoutingTable = 17
	NethelpersRoutingTable_TABLE18       NethelpersRoutingTable = 18
	NethelpersRoutingTable_TABLE19       NethelpersRoutingTable = 19
	NethelpersRoutingTable_TABLE20       NethelpersRoutingTable = 20
	NethelpersRoutingTable_TABLE21       NethelpersRoutingTable = 21
	NethelpersRoutingTable_TABLE22       NethelpersRoutingTable = 22
	NethelpersRoutingTable_TABLE23       NethelpersRoutingTable = 23
	NethelpersRoutingTable_TABLE24       NethelpersRoutingTable = 24
	NethelpersRoutingTable_TABLE25       NethelpersRoutingTable = 25
	NethelpersRoutingTable_TABLE26       NethelpersRoutingTable = 26
	NethelpersRoutingTable_TABLE27       NethelpersRoutingTable = 27
	NethelpersRoutingTable_TABLE28       NethelpersRoutingTable = 28
	NethelpersRoutingTable_TABLE29       NethelpersRoutingTable = 29
	NethelpersRoutingTable_TABLE30       NethelpersRoutingTable = 30
	NethelpersRoutingTable_TABLE31       NethelpersRoutingTable = 31
	NethelpersRoutingTable_TABLE32       NethelpersRoutingTable = 32
	NethelpersRoutingTable_TABLE33       NethelpersRoutingTable = 33
	NethelpersRoutingTable_TABLE34       NethelpersRoutingTable = 34
	NethelpersRoutingTable_TABLE35       NethelpersRoutingTable = 35
	NethelpersRoutingTable_TABLE36       NethelpersRoutingTable = 36
	NethelpersRoutingTable_TABLE37       NethelpersRoutingTable = 37
	NethelpersRoutingTable_TABLE38       NethelpersRoutingTable = 38
	NethelpersRoutingTable_TABLE39       NethelpersRoutingTable = 39
	NethelpersRoutingTable_TABLE40       NethelpersRoutingTable = 40
	NethelpersRoutingTable_TABLE41       NethelpersRoutingTable = 41
	NethelpersRoutingTable_TABLE42       NethelpersRoutingTable = 42
	NethelpersRoutingTable_TABLE43       NethelpersRoutingTable = 43
	NethelpersRoutingTable_TABLE44       NethelpersRoutingTable = 44
	NethelpersRoutingTable_TABLE45       NethelpersRoutingTable = 45
	NethelpersRoutingTable_TABLE46       NethelpersRoutingTable = 46
	NethelpersRoutingTable_TABLE47       NethelpersRoutingTable = 47
	NethelpersRoutingTable_TABLE48       NethelpersRoutingTable = 48
	NethelpersRoutingTable_TABLE49       NethelpersRoutingTable = 49
	NethelpersRoutingTable_TABLE50       NethelpersRoutingTable = 50
	NethelpersRoutingTable_TABLE51       NethelpersRoutingTable = 51
	NethelpersRoutingTable_TABLE52       NethelpersRoutingTable = 52
	NethelpersRoutingTable_TABLE53       NethelpersRoutingTable = 53
	NethelpersRoutingTable_TABLE54       NethelpersRoutingTable = 54
	NethelpersRoutingTable_TABLE55       NethelpersRoutingTable = 55
	NethelpersRoutingTable_TABLE56       NethelpersRoutingTable = 56
	NethelpersRoutingTable_TABLE57       NethelpersRoutingTable = 57
	NethelpersRoutingTable_TABLE58       NethelpersRoutingTable = 58
	NethelpersRoutingTable_TABLE59       NethelpersRoutingTable = 59
	NethelpersRoutingTable_TABLE60       NethelpersRoutingTable = 60
	NethelpersRoutingTable_TABLE61       NethelpersRoutingTable = 61
	NethelpersRoutingTable_TABLE62       NethelpersRoutingTable = 62
	NethelpersRoutingTable_TABLE63       NethelpersRoutingTable = 63
	NethelpersRoutingTable_TABLE64       NethelpersRoutingTable = 64
	NethelpersRoutingTable_TABLE65       NethelpersRoutingTable = 65
	NethelpersRoutingTable_TABLE66       NethelpersRoutingTable = 66
	NethelpersRoutingTable_TABLE67       NethelpersRoutingTable = 67
	NethelpersRoutingTable_TABLE68       NethelpersRoutingTable = 68
	NethelpersRoutingTable_TABLE69       NethelpersRoutingTable = 69
	NethelpersRoutingTable_TABLE70       NethelpersRoutingTable = 70
	NethelpersRoutingTable_TABLE71       NethelpersRoutingTable = 71
	NethelpersRoutingTable_TABLE72       NethelpersRoutingTable = 72
	NethelpersRoutingTable_TABLE73       NethelpersRoutingTable = 73
	NethelpersRoutingTable_TABLE74       NethelpersRoutingTable = 74
	NethelpersRoutingTable_TABLE75       NethelpersRoutingTable = 75
	NethelpersRoutingTable_TABLE76       NethelpersRoutingTable = 76
	NethelpersRoutingTable_TABLE77       NethelpersRoutingTable = 77
	NethelpersRoutingTable_TABLE78       NethelpersRoutingTable = 78
	NethelpersRoutingTable_TABLE79       NethelpersRoutingTable = 79
	NethelpersRoutingTable_TABLE80       NethelpersRoutingTable = 80
	NethelpersRoutingTable_TABLE81       NethelpersRoutingTable = 81
	NethelpersRoutingTable_TABLE82       NethelpersRoutingTable = 82
	NethelpersRoutingTable_TABLE83       NethelpersRoutingTable = 83
	NethelpersRoutingTable_TABLE84       NethelpersRoutingTable = 84
	NethelpersRoutingTable_TABLE85       NethelpersRoutingTable = 85
	NethelpersRoutingTable_TABLE86       NethelpersRoutingTable = 86
	NethelpersRoutingTable_TABLE87       NethelpersRoutingTable = 87
	NethelpersRoutingTable_TABLE88       NethelpersRoutingTable = 88
	NethelpersRoutingTable_TABLE89       NethelpersRoutingTable = 89
	NethelpersRoutingTable_TABLE90       NethelpersRoutingTable = 90
	NethelpersRoutingTable_TABLE91       NethelpersRoutingTable = 91
	NethelpersRoutingTable_TABLE92       NethelpersRoutingTable = 92
	NethelpersRoutingTable_TABLE93       NethelpersRoutingTable = 93
	NethelpersRoutingTable_TABLE94       NethelpersRoutingTable = 94
	NethelpersRoutingTable_TABLE95       NethelpersRoutingTable = 95
	NethelpersRoutingTable_TABLE96       NethelpersRoutingTable = 96
	NethelpersRoutingTable_TABLE97       NethelpersRoutingTable = 97
	NethelpersRoutingTable_TABLE98       NethelpersRoutingTable = 98
	NethelpersRoutingTable_TABLE99       NethelpersRoutingTable = 99
	NethelpersRoutingTable_TABLE100      NethelpersRoutingTable = 100
	NethelpersRoutingTable_TABLE101      NethelpersRoutingTable = 101
	NethelpersRoutingTable_TABLE102      NethelpersRoutingTable = 102
	NethelpersRoutingTable_TABLE103      NethelpersRoutingTable = 103
	NethelpersRoutingTable_TABLE104      NethelpersRoutingTable = 104
	NethelpersRoutingTable_TABLE105      NethelpersRoutingTable = 105
	NethelpersRoutingTable_TABLE106      NethelpersRoutingTable = 106
	NethelpersRoutingTable_TABLE107      NethelpersRoutingTable = 107
	NethelpersRoutingTable_TABLE108      NethelpersRoutingTable = 108
	NethelpersRoutingTable_TABLE109      NethelpersRoutingTable = 109
	NethelpersRoutingTable_TABLE110      NethelpersRoutingTable = 110
	NethelpersRoutingTable_TABLE111      NethelpersRoutingTable = 111
	NethelpersRoutingTable_TABLE112      NethelpersRoutingTable = 112
	NethelpersRoutingTable_TABLE113      NethelpersRoutingTable = 113
	NethelpersRoutingTable_TABLE114      NethelpersRoutingTable = 114
	NethelpersRoutingTable_TABLE115      NethelpersRoutingTable = 115
	NethelpersRoutingTable_TABLE116      NethelpersRoutingTable = 116
	NethelpersRoutingTable_TABLE117      NethelpersRoutingTable = 117
	NethelpersRoutingTable_TABLE118      NethelpersRoutingTable = 118
	NethelpersRoutingTable_TABLE119      NethelpersRoutingTable = 119
	NethelpersRoutingTable_TABLE120      NethelpersRoutingTable = 120
	NethelpersRoutingTable_TABLE121      NethelpersRoutingTable = 121
	NethelpersRoutingTable_TABLE122      NethelpersRoutingTable = 122
	NethelpersRoutingTable_TABLE123      NethelpersRoutingTable = 123
	NethelpersRoutingTable_TABLE124      NethelpersRoutingTable = 124
	NethelpersRoutingTable_TABLE125      NethelpersRoutingTable = 125
	NethelpersRoutingTable_TABLE126      NethelpersRoutingTable = 126
	NethelpersRoutingTable_TABLE127      NethelpersRoutingTable = 127
	NethelpersRoutingTable_TABLE128      NethelpersRoutingTable = 128
	NethelpersRoutingTable_TABLE129      NethelpersRoutingTable = 129
	NethelpersRoutingTable_TABLE130      NethelpersRoutingTable = 130
	NethelpersRoutingTable_TABLE131      NethelpersRoutingTable = 131
	NethelpersRoutingTable_TABLE132      NethelpersRoutingTable = 132
	NethelpersRoutingTable_TABLE133      NethelpersRoutingTable = 133
	NethelpersRoutingTable_TABLE134      NethelpersRoutingTable = 134
	NethelpersRoutingTable_TABLE135      NethelpersRoutingTable = 135
	NethelpersRoutingTable_TABLE136      NethelpersRoutingTable = 136
	NethelpersRoutingTable_TABLE137      NethelpersRoutingTable = 137
	NethelpersRoutingTable_TABLE138      NethelpersRoutingTable = 138
	NethelpersRoutingTable_TABLE139      NethelpersRoutingTable = 139
	NethelpersRoutingTable_TABLE140      NethelpersRoutingTable = 140
	NethelpersRoutingTable_TABLE141      NethelpersRoutingTable = 141
	NethelpersRoutingTable_TABLE142      NethelpersRoutingTable = 142
	NethelpersRoutingTable_TABLE143      NethelpersRoutingTable = 143
	NethelpersRoutingTable_TABLE144      NethelpersRoutingTable = 144
	NethelpersRoutingTable_TABLE145      NethelpersRoutingTable = 145
	NethelpersRoutingTable_TABLE146      NethelpersRoutingTable = 146
	NethelpersRoutingTable_TABLE147      NethelpersRoutingTable = 147
	NethelpersRoutingTable_TABLE148      NethelpersRoutingTable = 148
	NethelpersRoutingTable_TABLE149      NethelpersRoutingTable = 149
	NethelpersRoutingTable_TABLE150      NethelpersRoutingTable = 150
	NethelpersRoutingTable_TABLE151      NethelpersRoutingTable = 151
	NethelpersRoutingTable_TABLE152      NethelpersRoutingTable = 152
	NethelpersRoutingTable_TABLE153      NethelpersRoutingTable = 153
	NethelpersRoutingTable_TABLE154      NethelpersRoutingTable = 154
	NethelpersRoutingTable_TABLE155      NethelpersRoutingTable = 155
	NethelpersRoutingTable_TABLE156      NethelpersRoutingTable = 156
	NethelpersRoutingTable_TABLE157      NethelpersRoutingTable = 157
	NethelpersRoutingTable_TABLE158      NethelpersRoutingTable = 158
	NethelpersRoutingTable_TABLE159      NethelpersRoutingTable = 159
	NethelpersRoutingTable_TABLE160      NethelpersRoutingTable = 160
	NethelpersRoutingTable_TABLE161      NethelpersRoutingTable = 161
	NethelpersRoutingTable_TABLE162      NethelpersRoutingTable = 162
	NethelpersRoutingTable_TABLE163      NethelpersRoutingTable = 163
	NethelpersRoutingTable_TABLE164      NethelpersRoutingTable = 164
	NethelpersRoutingTable_TABLE165      NethelpersRoutingTable = 165
	NethelpersRoutingTable_TABLE166      NethelpersRoutingTable = 166
	NethelpersRoutingTable_TABLE167      NethelpersRoutingTable = 167
	NethelpersRoutingTable_TABLE168      NethelpersRoutingTable = 168
	NethelpersRoutingTable_TABLE169      NethelpersRoutingTable = 169
	NethelpersRoutingTable_TABLE170      NethelpersRoutingTable = 170
	NethelpersRoutingTable_TABLE171      NethelpersRoutingTable = 171
	NethelpersRoutingTable_TABLE172      NethelpersRoutingTable = 172
	NethelpersRoutingTable_TABLE173      NethelpersRoutingTable = 173
	NethelpersRoutingTable_TABLE174      NethelpersRoutingTable = 174
	NethelpersRoutingTable_TABLE175      NethelpersRoutingTable = 175
	NethelpersRoutingTable_TABLE176      NethelpersRoutingTable = 176
	NethelpersRoutingTable_TABLE177      NethelpersRoutingTable = 177
	NethelpersRoutingTable_TABLE178      NethelpersRoutingTable = 178
	NethelpersRoutingTable_TABLE179      NethelpersRoutingTable = 179
	NethelpersRoutingTable_TABLE180      NethelpersRoutingTable = 180
	NethelpersRoutingTable_TABLE181      NethelpersRoutingTable = 181
	NethelpersRoutingTable_TABLE182      NethelpersRoutingTable = 182
	NethelpersRoutingTable_TABLE183      NethelpersRoutingTable = 183
	NethelpersRoutingTable_TABLE184      NethelpersRoutingTable = 184
	NethelpersRoutingTable_TABLE185      NethelpersRoutingTable = 185
	NethelpersRoutingTable_TABLE186      NethelpersRoutingTable = 186
	NethelpersRoutingTable_TABLE187      NethelpersRoutingTable = 187
	NethelpersRoutingTable_TABLE188      NethelpersRoutingTable = 188
	NethelpersRoutingTable_TABLE189      NethelpersRoutingTable = 189
	NethelpersRoutingTable_TABLE190      NethelpersRoutingTable = 190
	NethelpersRoutingTable_TABLE191      NethelpersRoutingTable = 191
	NethelpersRoutingTable_TABLE192      NethelpersRoutingTable = 192
	NethelpersRoutingTable_TABLE193      NethelpersRoutingTable = 193
	NethelpersRoutingTable_TABLE194      NethelpersRoutingTable = 194
	NethelpersRoutingTable_TABLE195      NethelpersRoutingTable = 195
	NethelpersRoutingTable_TABLE196      NethelpersRoutingTable = 196
	NethelpersRoutingTable_TABLE197      NethelpersRoutingTable = 197
	NethelpersRoutingTable_TABLE198      NethelpersRoutingTable = 198
	NethelpersRoutingTable_TABLE199      NethelpersRoutingTable = 199
	NethelpersRoutingTable_TABLE200      NethelpersRoutingTable = 200
	NethelpersRoutingTable_TABLE201      NethelpersRoutingTable = 201
	NethelpersRoutingTable_TABLE202      NethelpersRoutingTable = 202
	NethelpersRoutingTable_TABLE203      NethelpersRoutingTable = 203
	NethelpersRoutingTable_TABLE204      NethelpersRoutingTable = 204
	NethelpersRoutingTable_TABLE205      NethelpersRoutingTable = 205
	NethelpersRoutingTable_TABLE206      NethelpersRoutingTable = 206
	NethelpersRoutingTable_TABLE207      NethelpersRoutingTable = 207
	NethelpersRoutingTable_TABLE208      NethelpersRoutingTable = 208
	NethelpersRoutingTable_TABLE209      NethelpersRoutingTable = 209
	NethelpersRoutingTable_TABLE210      NethelpersRoutingTable = 210
	NethelpersRoutingTable_TABLE211      NethelpersRoutingTable = 211
	NethelpersRoutingTable_TABLE212      NethelpersRoutingTable = 212
	NethelpersRoutingTable_TABLE213      NethelpersRoutingTable = 213
	NethelpersRoutingTable_TABLE214      NethelpersRoutingTable = 214
	NethelpersRoutingTable_TABLE215      NethelpersRoutingTable = 215
	NethelpersRoutingTable_TABLE216      NethelpersRoutingTable = 216
	NethelpersRoutingTable_TABLE217      NethelpersRoutingTable = 217
	NethelpersRoutingTable_TABLE218      NethelpersRoutingTable = 218
	NethelpersRoutingTable_TABLE219      NethelpersRoutingTable = 219
	NethelpersRoutingTable_TABLE220      NethelpersRoutingTable = 220
	NethelpersRoutingTable_TABLE221      NethelpersRoutingTable = 221
	NethelpersRoutingTable_TABLE222      NethelpersRoutingTable = 222
	NethelpersRoutingTable_TABLE223      NethelpersRoutingTable = 223
	NethelpersRoutingTable_TABLE224      NethelpersRoutingTable = 224
	NethelpersRoutingTable_TABLE225      NethelpersRoutingTable = 225
	NethelpersRoutingTable_TABLE226      NethelpersRoutingTable = 226
	NethelpersRoutingTable_TABLE227      NethelpersRoutingTable = 227
	NethelpersRoutingTable_TABLE228      NethelpersRoutingTable = 228
	NethelpersRoutingTable_TABLE229      NethelpersRoutingTable = 229
	NethelpersRoutingTable_TABLE230      NethelpersRoutingTable = 230
	NethelpersRoutingTable_TABLE231      NethelpersRoutingTable = 231
	NethelpersRoutingTable_TABLE232      NethelpersRoutingTable = 232
	NethelpersRoutingTable_TABLE233      NethelpersRoutingTable = 233
	NethelpersRoutingTable_TABLE234      NethelpersRoutingTable = 234
	NethelpersRoutingTable_TABLE235      NethelpersRoutingTable = 235
	NethelpersRoutingTable_TABLE236      NethelpersRoutingTable = 236
	NethelpersRoutingTable_TABLE237      NethelpersRoutingTable = 237
	NethelpersRoutingTable_TABLE238      NethelpersRoutingTable = 238
	NethelpersRoutingTable_TABLE239      NethelpersRoutingTable = 239
	NethelpersRoutingTable_TABLE240      NethelpersRoutingTable = 240
	NethelpersRoutingTable_TABLE241      NethelpersRoutingTable = 241
	NethelpersRoutingTable_TABLE242      NethelpersRoutingTable = 242
	NethelpersRoutingTable_TABLE243      NethelpersRoutingTable = 243
	NethelpersRoutingTable_TABLE244      NethelpersRoutingTable = 244
	NethelpersRoutingTable_TABLE245      NethelpersRoutingTable = 245
	NethelpersRoutingTable_TABLE246      NethelpersRoutingTable = 246
	NethelpersRoutingTable_TABLE247      NethelpersRoutingTable = 247
	NethelpersRoutingTable_TABLE248      NethelpersRoutingTable = 248
	NethelpersRoutingTable_TABLE249      NethelpersRoutingTable = 249
	NethelpersRoutingTable_TABLE250      NethelpersRoutingTable = 250
	NethelpersRoutingTable_TABLE251      NethelpersRoutingTable = 251
	NethelpersRoutingTable_TABLE252      NethelpersRoutingTable = 252
	NethelpersRoutingTable_TABLE_DEFAULT NethelpersRoutingTable = 253
	NethelpersRoutingTable_TABLE_MAIN    NethelpersRoutingTable = 254
	NethelpersRoutingTable_TABLE_LOCAL   NethelpersRoutingTable = 255
)

// Enum value maps for NethelpersRoutingTable.
var (
	NethelpersRoutingTable_name = map[int32]string{
		0:   "TABLE_UNSPEC",
		1:   "TABLE1",
		2:   "TABLE2",
		3:   "TABLE3",
		4:   "TABLE4",
		5:   "TABLE5",
		6:   "TABLE6",
		7:   "TABLE7",
		8:   "TABLE8",
		9:   "TABLE9",
		10:  "TABLE10",
		11:  "TABLE11",
		12:  "TABLE12",
		13:  "TABLE13",
		14:  "TABLE14",
		15:  "TABLE15",
		16:  "TABLE16",
		17:  "TABLE17",
		18:  "TABLE18",
		19:  "TABLE19",
		20:  "TABLE20",
		21:  "TABLE21",
		22:  "TABLE22",
		23:  "TABLE23",
		24:  "TABLE24",
		25:  "TABLE25",
		26:  "TABLE26",
		27:  "TABLE27",
		28:  "TABLE28",
		29:  "TABLE29",
		30:  "TABLE30",
		31:  "TABLE31",
		32:  "TABLE32",
		33:  "TABLE33",
		34:  "TABLE34",
		35:  "TABLE35",
		36:  "TABLE36",
		37:  "TABLE37",
		38:  "TABLE38",
		39:  "TABLE39",
		40:  "TABLE40",
		41:  "TABLE41",
		42:  "TABLE42",
		43:  "TABLE43",
		44:  "TABLE44",
		45:  "TABLE45",
		46:  "TABLE46",
		47:  "TABLE47",
		48:  "TABLE48",
		49:  "TABLE49",
		50:  "TABLE50",
		51:  "TABLE51",
		52:  "TABLE52",
		53:  "TABLE53",
		54:  "TABLE54",
		55:  "TABLE55",
		56:  "TABLE56",
		57:  "TABLE57",
		58:  "TABLE58",
		59:  "TABLE59",
		60:  "TABLE60",
		61:  "TABLE61",
		62:  "TABLE62",
		63:  "TABLE63",
		64:  "TABLE64",
		65:  "TABLE65",
		66:  "TABLE66",
		67:  "TABLE67",
		68:  "TABLE68",
		69:  "TABLE69",
		70:  "TABLE70",
		71:  "TABLE71",
		72:  "TABLE72",
		73:  "TABLE73",
		74:  "TABLE74",
		75:  "TABLE75",
		76:  "TABLE76",
		77:  "TABLE77",
		78:  "TABLE78",
		79:  "TABLE79",
		80:  "TABLE80",
		81:  "TABLE81",
		82:  "TABLE82",
		83:  "TABLE83",
		84:  "TABLE84",
		85:  "TABLE85",
		86:  "TABLE86",
		87:  "TABLE87",
		88:  "TABLE88",
		89:  "TABLE89",
		90:  "TABLE90",
		91:  "TABLE91",
		92:  "TABLE92",
		93:  "TABLE93",
		94:  "TABLE94",
		95:  "TABLE95",
		96:  "TABLE96",
		97:  "TABLE97",
		98:  "TABLE98",
		99:  "TABLE99",
		100: "TABLE100",
		101: "TABLE101",
		102: "TABLE102",
		103: "TABLE103",
		104: "TABLE104",
		105: "TABLE105",
		106: "TABLE106",
		107: "TABLE107",
		108: "TABLE108",
		109: "TABLE109",
		110: "TABLE110",
		111: "TABLE111",
		112: "TABLE112",
		113: "TABLE113",
		114: "TABLE114",
		115: "TABLE115",
		116: "TABLE116",
		117: "TABLE117",
		118: "TABLE118",
		119: "TABLE119",
		120: "TABLE120",
		121: "TABLE121",
		122: "TABLE122",
		123: "TABLE123",
		124: "TABLE124",
		125: "TABLE125",
		126: "TABLE126",
		127: "TABLE127",
		128: "TABLE128",
		129: "TABLE129",
		130: "TABLE130",
		131: "TABLE131",
		132: "TABLE132",
		133: "TABLE133",
		134: "TABLE134",
		135: "TABLE135",
		136: "TABLE136",
		137: "TABLE137",
		138: "TABLE138",
		139: "TABLE139",
		140: "TABLE140",
		141: "TABLE141",
		142: "TABLE142",
		143: "TABLE143",
		144: "TABLE144",
		145: "TABLE145",
		146: "TABLE146",
		147: "TABLE147",
		148: "TABLE148",
		149: "TABLE149",
		150: "TABLE150",
		151: "TABLE151",
		152: "TABLE152",
		153: "TABLE153",
		154: "TABLE154",
		155: "TABLE155",
		156: "TABLE156",
		157: "TABLE157",
		158: "TABLE158",
		159: "TABLE159",
		160: "TABLE160",
		161: "TABLE161",
		162: "TABLE162",
		163: "TABLE163",
		164: "TABLE164",
		165: "TABLE165",
		166: "TABLE166",
		167: "TABLE167",
		168: "TABLE168",
		169: "TABLE169",
		170: "TABLE170",
		171: "TABLE171",
		172: "TABLE172",
		173: "TABLE173",
		174: "TABLE174",
		175: "TABLE175",
		176: "TABLE176",
		177: "TABLE177",
		178: "TABLE178",
		179: "TABLE179",
		180: "TABLE180",
		181: "TABLE181",
		182: "TABLE182",
		183: "TABLE183",
		184: "TABLE184",
		185: "TABLE185",
		186: "TABLE186",
		187: "TABLE187",
		188: "TABLE188",
		189: "TABLE189",
		190: "TABLE190",
		191: "TABLE191",
		192: "TABLE192",
		193: "TABLE193",
		194: "TABLE194",
		195: "TABLE195",
		196: "TABLE196",
		197: "TABLE197",
		198: "TABLE198",
		199: "TABLE199",
		200: "TABLE200",
		201: "TABLE201",
		202: "TABLE202",
		203: "TABLE203",
		204: "TABLE204",
		205: "TABLE205",
		206: "TABLE206",
		207: "TABLE207",
		208: "TABLE208",
		209: "TABLE209",
		210: "TABLE210",
		211: "TABLE211",
		212: "TABLE212",
		213: "TABLE213",
		214: "TABLE214",
		215: "TABLE215",
		216: "TABLE216",
		217: "TABLE217",
		218: "TABLE218",
		219: "TABLE219",
		220: "TABLE220",
		221: "TABLE221",
		222: "TABLE222",
		223: "TABLE223",
		224: "TABLE224",
		225: "TABLE225",
		226: "TABLE226",
		227: "TABLE227",
		228: "TABLE228",
		229: "TABLE229",
		230: "TABLE230",
		231: "TABLE231",
		232: "TABLE232",
		233: "TABLE233",
		234: "TABLE234",
		235: "TABLE235",
		236: "TABLE236",
		237: "TABLE237",
		238: "TABLE238",
		239: "TABLE239",
		240: "TABLE240",
		241: "TABLE241",
		242: "TABLE242",
		243: "TABLE243",
		244: "TABLE244",
		245: "TABLE245",
		246: "TABLE246",
		247: "TABLE247",
		248: "TABLE248",
		249: "TABLE249",
		250: "TABLE250",
		251: "TABLE251",
		252: "TABLE252",
		253: "TABLE_DEFAULT",
		254: "TABLE_MAIN",
		255: "TABLE_LOCAL",
	}
	NethelpersRoutingTable_value = map[string]int32{
		"TABLE_UNSPEC":  0,
		"TABLE1":        1,
		"TABLE2":        2,
		"TABLE3":        3,
		"TABLE4":        4,
		"TABLE5":        5,
		"TABLE6":        6,
		"TABLE7":        7,
		"TABLE8":        8,
		"TABLE9":        9,
		"TABLE10":       10,
		"TABLE11":       11,
		"TABLE12":       12,
		"TABLE13":       13,
		"TABLE14":       14,
		"TABLE15":       15,
		"TABLE16":       16,
		"TABLE17":       17,
		"TABLE18":       18,
		"TABLE19":       19,
		"TABLE20":       20,
		"TABLE21":       21,
		"TABLE22":       22,
		"TABLE23":       23,
		"TABLE24":       24,
		"TABLE25":       25,
		"TABLE26":       26,
		"TABLE27":       27,
		"TABLE28":       28,
		"TABLE29":       29,
		"TABLE30":       30,
		"TABLE31":       31,
		"TABLE32":       32,
		"TABLE33":       33,
		"TABLE34":       34,
		"TABLE35":       35,
		"TABLE36":       36,
		"TABLE37":       37,
		"TABLE38":       38,
		"TABLE39":       39,
		"TABLE40":       40,
		"TABLE41":       41,
		"TABLE42":       42,
		"TABLE43":       43,
		"TABLE44":       44,
		"TABLE45":       45,
		"TABLE46":       46,
		"TABLE47":       47,
		"TABLE48":       48,
		"TABLE49":       49,
		"TABLE50":       50,
		"TABLE51":       51,
		"TABLE52":       52,
		"TABLE53":       53,
		"TABLE54":       54,
		"TABLE55":       55,
		"TABLE56":       56,
		"TABLE57":       57,
		"TABLE58":       58,
		"TABLE59":       59,
		"TABLE60":       60,
		"TABLE61":       61,
		"TABLE62":       62,
		"TABLE63":       63,
		"TABLE64":       64,
		"TABLE65":       65,
		"TABLE66":       66,
		"TABLE67":       67,
		"TABLE68":       68,
		"TABLE69":       69,
		"TABLE70":       70,
		"TABLE71":       71,
		"TABLE72":       72,
		"TABLE73":       73,
		"TABLE74":       74,
		"TABLE75":       75,
		"TABLE76":       76,
		"TABLE77":       77,
		"TABLE78":       78,
		"TABLE79":       79,
		"TABLE80":       80,
		"TABLE81":       81,
		"TABLE82":       82,
		"TABLE83":       83,
		"TABLE84":       84,
		"TABLE85":       85,
		"TABLE86":       86,
		"TABLE87":       87,
		"TABLE88":       88,
		"TABLE89":       89,
		"TABLE90":       90,
		"TABLE91":       91,
		"TABLE92":       92,
		"TABLE93":       93,
		"TABLE94":       94,
		"TABLE95":       95,
		"TABLE96":       96,
		"TABLE97":       97,
		"TABLE98":       98,
		"TABLE99":       99,
		"TABLE100":      100,
		"TABLE101":      101,
		"TABLE102":      102,
		"TABLE103":      103,
		"TABLE104":      104,
		"TABLE105":      105,
		"TABLE106":      106,
		"TABLE107":      107,
		"TABLE108":      108,
		"TABLE109":      109,
		"TABLE110":      110,
		"TABLE111":      111,
		"TABLE112":      112,
		"TABLE113":      113,
		"TABLE114":      114,
		"TABLE115":      115,
		"TABLE116":      116,
		"TABLE117":      117,
		"TABLE118":      118,
		"TABLE119":      119,
		"TABLE120":      120,
		"TABLE121":      121,
		"TABLE122":      122,
		"TABLE123":      123,
		"TABLE124":      124,
		"TABLE125":      125,
		"TABLE126":      126,
		"TABLE127":      127,
		"TABLE128":      128,
		"TABLE129":      129,
		"TABLE130":      130,
		"TABLE131":      131,
		"TABLE132":      132,
		"TABLE133":      133,
		"TABLE134":      134,
		"TABLE135":      135,
		"TABLE136":      136,
		"TABLE137":      137,
		"TABLE138":      138,
		"TABLE139":      139,
		"TABLE140":      140,
		"TABLE141":      141,
		"TABLE142":      142,
		"TABLE143":      143,
		"TABLE144":      144,
		"TABLE145":      145,
		"TABLE146":      146,
		"TABLE147":      147,
		"TABLE148":      148,
		"TABLE149":      149,
		"TABLE150":      150,
		"TABLE151":      151,
		"TABLE152":      152,
		"TABLE153":      153,
		"TABLE154":      154,
		"TABLE155":      155,
		"TABLE156":      156,
		"TABLE157":      157,
		"TABLE158":      158,
		"TABLE159":      159,
		"TABLE160":      160,
		"TABLE161":      161,
		"TABLE162":      162,
		"TABLE163":      163,
		"TABLE164":      164,
		"TABLE165":      165,
		"TABLE166":      166,
		"TABLE167":      167,
		"TABLE168":      168,
		"TABLE169":      169,
		"TABLE170":      170,
		"TABLE171":      171,
		"TABLE172":      172,
		"TABLE173":      173,
		"TABLE174":      174,
		"TABLE175":      175,
		"TABLE176":      176,
		"TABLE177":      177,
		"TABLE178":      178,
		"TABLE179":      179,
		"TABLE180":      180,
		"TABLE181":      181,
		"TABLE182":      182,
		"TABLE183":      183,
		"TABLE184":      184,
		"TABLE185":      185,
		"TABLE186":      186,
		"TABLE187":      187,
		"TABLE188":      188,
		"TABLE189":      189,
		"TABLE190":      190,
		"TABLE191":      191,
		"TABLE192":      192,
		"TABLE193":      193,
		"TABLE194":      194,
		"TABLE195":      195,
		"TABLE196":      196,
		"TABLE197":      197,
		"TABLE198":      198,
		"TABLE199":      199,
		"TABLE200":      200,
		"TABLE201":      201,
		"TABLE202":      202,
		"TABLE203":      203,
		"TABLE204":      204,
		"TABLE205":      205,
		"TABLE206":      206,
		"TABLE207":      207,
		"TABLE208":      208,
		"TABLE209":      209,
		"TABLE210":      210,
		"TABLE211":      211,
		"TABLE212":      212,
		"TABLE213":      213,
		"TABLE214":      214,
		"TABLE215":      215,
		"TABLE216":      216,
		"TABLE217":      217,
		"TABLE218":      218,
		"TABLE219":      219,
		"TABLE220":      220,
		"TABLE221":      221,
		"TABLE222":      222,
		"TABLE223":      223,
		"TABLE224":      224,
		"TABLE225":      225,
		"TABLE226":      226,
		"TABLE227":      227,
		"TABLE228":      228,
		"TABLE229":      229,
		"TABLE230":      230,
		"TABLE231":      231,
		"TABLE232":      232,
		"TABLE233":      233,
		"TABLE234":      234,
		"TABLE235":      235,
		"TABLE236":      236,
		"TABLE237":      237,
		"TABLE238":      238,
		"TABLE239":      239,
		"TABLE240":      240,
		"TABLE241":      241,
		"TABLE242":      242,
		"TABLE243":      243,
		"TABLE244":      244,
		"TABLE245":      245,
		"TABLE246":      246,
		"TABLE247":      247,
		"TABLE248":      248,
		"TABLE249":      249,
		"TABLE250":      250,
		"TABLE251":      251,
		"TABLE252":      252,
		"TABLE_DEFAULT": 253,
		"TABLE_MAIN":    254,
		"TABLE_LOCAL":   255,
	}
)

func (x NethelpersRoutingTable) Enum() *NethelpersRoutingTable {
	p := new(NethelpersRoutingTable)
	*p = x
	return p
}

func (x NethelpersRoutingTable) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersRoutingTable) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[32].Descriptor()
}

func (NethelpersRoutingTable) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[32]
}

func (x NethelpersRoutingTable) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersRoutingTable.Descriptor instead.
func (NethelpersRoutingTable) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{32}
}

// NethelpersScope is an address scope.
type NethelpersScope int32

const (
	NethelpersScope_SCOPE_GLOBAL  NethelpersScope = 0
	NethelpersScope_SCOPE_SITE    NethelpersScope = 200
	NethelpersScope_SCOPE_LINK    NethelpersScope = 253
	NethelpersScope_SCOPE_HOST    NethelpersScope = 254
	NethelpersScope_SCOPE_NOWHERE NethelpersScope = 255
)

// Enum value maps for NethelpersScope.
var (
	NethelpersScope_name = map[int32]string{
		0:   "SCOPE_GLOBAL",
		200: "SCOPE_SITE",
		253: "SCOPE_LINK",
		254: "SCOPE_HOST",
		255: "SCOPE_NOWHERE",
	}
	NethelpersScope_value = map[string]int32{
		"SCOPE_GLOBAL":  0,
		"SCOPE_SITE":    200,
		"SCOPE_LINK":    253,
		"SCOPE_HOST":    254,
		"SCOPE_NOWHERE": 255,
	}
)

func (x NethelpersScope) Enum() *NethelpersScope {
	p := new(NethelpersScope)
	*p = x
	return p
}

func (x NethelpersScope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersScope) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[33].Descriptor()
}

func (NethelpersScope) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[33]
}

func (x NethelpersScope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersScope.Descriptor instead.
func (NethelpersScope) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{33}
}

// NethelpersVLANProtocol is a VLAN protocol.
type NethelpersVLANProtocol int32

const (
	NethelpersVLANProtocol_NETHELPERS_VLANPROTOCOL_UNSPECIFIED NethelpersVLANProtocol = 0
	NethelpersVLANProtocol_VLAN_PROTOCOL8021_Q                 NethelpersVLANProtocol = 33024
	NethelpersVLANProtocol_VLAN_PROTOCOL8021_AD                NethelpersVLANProtocol = 34984
)

// Enum value maps for NethelpersVLANProtocol.
var (
	NethelpersVLANProtocol_name = map[int32]string{
		0:     "NETHELPERS_VLANPROTOCOL_UNSPECIFIED",
		33024: "VLAN_PROTOCOL8021_Q",
		34984: "VLAN_PROTOCOL8021_AD",
	}
	NethelpersVLANProtocol_value = map[string]int32{
		"NETHELPERS_VLANPROTOCOL_UNSPECIFIED": 0,
		"VLAN_PROTOCOL8021_Q":                 33024,
		"VLAN_PROTOCOL8021_AD":                34984,
	}
)

func (x NethelpersVLANProtocol) Enum() *NethelpersVLANProtocol {
	p := new(NethelpersVLANProtocol)
	*p = x
	return p
}

func (x NethelpersVLANProtocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersVLANProtocol) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[34].Descriptor()
}

func (NethelpersVLANProtocol) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[34]
}

func (x NethelpersVLANProtocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersVLANProtocol.Descriptor instead.
func (NethelpersVLANProtocol) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{34}
}

// NethelpersWOLMode wraps ethtool.WOLMode for YAML marshaling.
type NethelpersWOLMode int32

const (
	NethelpersWOLMode_NETHELPERS_WOLMODE_UNSPECIFIED NethelpersWOLMode = 0
	NethelpersWOLMode_WOL_MODE_PHY                   NethelpersWOLMode = 1
	NethelpersWOLMode_WOL_MODE_UNICAST               NethelpersWOLMode = 2
	NethelpersWOLMode_WOL_MODE_MULTICAST             NethelpersWOLMode = 4
	NethelpersWOLMode_WOL_MODE_BROADCAST             NethelpersWOLMode = 8
	NethelpersWOLMode_WOL_MODE_MAGIC                 NethelpersWOLMode = 32
	NethelpersWOLMode_WOL_MODE_MAGIC_SECURE          NethelpersWOLMode = 64
	NethelpersWOLMode_WOL_MODE_FILTER                NethelpersWOLMode = 128
)

// Enum value maps for NethelpersWOLMode.
var (
	NethelpersWOLMode_name = map[int32]string{
		0:   "NETHELPERS_WOLMODE_UNSPECIFIED",
		1:   "WOL_MODE_PHY",
		2:   "WOL_MODE_UNICAST",
		4:   "WOL_MODE_MULTICAST",
		8:   "WOL_MODE_BROADCAST",
		32:  "WOL_MODE_MAGIC",
		64:  "WOL_MODE_MAGIC_SECURE",
		128: "WOL_MODE_FILTER",
	}
	NethelpersWOLMode_value = map[string]int32{
		"NETHELPERS_WOLMODE_UNSPECIFIED": 0,
		"WOL_MODE_PHY":                   1,
		"WOL_MODE_UNICAST":               2,
		"WOL_MODE_MULTICAST":             4,
		"WOL_MODE_BROADCAST":             8,
		"WOL_MODE_MAGIC":                 32,
		"WOL_MODE_MAGIC_SECURE":          64,
		"WOL_MODE_FILTER":                128,
	}
)

func (x NethelpersWOLMode) Enum() *NethelpersWOLMode {
	p := new(NethelpersWOLMode)
	*p = x
	return p
}

func (x NethelpersWOLMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NethelpersWOLMode) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[35].Descriptor()
}

func (NethelpersWOLMode) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[35]
}

func (x NethelpersWOLMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NethelpersWOLMode.Descriptor instead.
func (NethelpersWOLMode) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{35}
}

// BlockEncryptionKeyType describes encryption key type.
type BlockEncryptionKeyType int32

const (
	BlockEncryptionKeyType_ENCRYPTION_KEY_STATIC  BlockEncryptionKeyType = 0
	BlockEncryptionKeyType_ENCRYPTION_KEY_NODE_ID BlockEncryptionKeyType = 1
	BlockEncryptionKeyType_ENCRYPTION_KEY_KMS     BlockEncryptionKeyType = 2
	BlockEncryptionKeyType_ENCRYPTION_KEY_TPM     BlockEncryptionKeyType = 3
)

// Enum value maps for BlockEncryptionKeyType.
var (
	BlockEncryptionKeyType_name = map[int32]string{
		0: "ENCRYPTION_KEY_STATIC",
		1: "ENCRYPTION_KEY_NODE_ID",
		2: "ENCRYPTION_KEY_KMS",
		3: "ENCRYPTION_KEY_TPM",
	}
	BlockEncryptionKeyType_value = map[string]int32{
		"ENCRYPTION_KEY_STATIC":  0,
		"ENCRYPTION_KEY_NODE_ID": 1,
		"ENCRYPTION_KEY_KMS":     2,
		"ENCRYPTION_KEY_TPM":     3,
	}
)

func (x BlockEncryptionKeyType) Enum() *BlockEncryptionKeyType {
	p := new(BlockEncryptionKeyType)
	*p = x
	return p
}

func (x BlockEncryptionKeyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockEncryptionKeyType) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[36].Descriptor()
}

func (BlockEncryptionKeyType) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[36]
}

func (x BlockEncryptionKeyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlockEncryptionKeyType.Descriptor instead.
func (BlockEncryptionKeyType) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{36}
}

// BlockEncryptionProviderType describes encryption provider type.
type BlockEncryptionProviderType int32

const (
	BlockEncryptionProviderType_ENCRYPTION_PROVIDER_NONE  BlockEncryptionProviderType = 0
	BlockEncryptionProviderType_ENCRYPTION_PROVIDER_LUKS2 BlockEncryptionProviderType = 1
)

// Enum value maps for BlockEncryptionProviderType.
var (
	BlockEncryptionProviderType_name = map[int32]string{
		0: "ENCRYPTION_PROVIDER_NONE",
		1: "ENCRYPTION_PROVIDER_LUKS2",
	}
	BlockEncryptionProviderType_value = map[string]int32{
		"ENCRYPTION_PROVIDER_NONE":  0,
		"ENCRYPTION_PROVIDER_LUKS2": 1,
	}
)

func (x BlockEncryptionProviderType) Enum() *BlockEncryptionProviderType {
	p := new(BlockEncryptionProviderType)
	*p = x
	return p
}

func (x BlockEncryptionProviderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockEncryptionProviderType) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[37].Descriptor()
}

func (BlockEncryptionProviderType) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[37]
}

func (x BlockEncryptionProviderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlockEncryptionProviderType.Descriptor instead.
func (BlockEncryptionProviderType) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{37}
}

// BlockFilesystemType describes filesystem type.
type BlockFilesystemType int32

const (
	BlockFilesystemType_FILESYSTEM_TYPE_NONE    BlockFilesystemType = 0
	BlockFilesystemType_FILESYSTEM_TYPE_XFS     BlockFilesystemType = 1
	BlockFilesystemType_FILESYSTEM_TYPE_VFAT    BlockFilesystemType = 2
	BlockFilesystemType_FILESYSTEM_TYPE_EXT4    BlockFilesystemType = 3
	BlockFilesystemType_FILESYSTEM_TYPE_ISO9660 BlockFilesystemType = 4
	BlockFilesystemType_FILESYSTEM_TYPE_SWAP    BlockFilesystemType = 5
)

// Enum value maps for BlockFilesystemType.
var (
	BlockFilesystemType_name = map[int32]string{
		0: "FILESYSTEM_TYPE_NONE",
		1: "FILESYSTEM_TYPE_XFS",
		2: "FILESYSTEM_TYPE_VFAT",
		3: "FILESYSTEM_TYPE_EXT4",
		4: "FILESYSTEM_TYPE_ISO9660",
		5: "FILESYSTEM_TYPE_SWAP",
	}
	BlockFilesystemType_value = map[string]int32{
		"FILESYSTEM_TYPE_NONE":    0,
		"FILESYSTEM_TYPE_XFS":     1,
		"FILESYSTEM_TYPE_VFAT":    2,
		"FILESYSTEM_TYPE_EXT4":    3,
		"FILESYSTEM_TYPE_ISO9660": 4,
		"FILESYSTEM_TYPE_SWAP":    5,
	}
)

func (x BlockFilesystemType) Enum() *BlockFilesystemType {
	p := new(BlockFilesystemType)
	*p = x
	return p
}

func (x BlockFilesystemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockFilesystemType) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[38].Descriptor()
}

func (BlockFilesystemType) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[38]
}

func (x BlockFilesystemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlockFilesystemType.Descriptor instead.
func (BlockFilesystemType) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{38}
}

// BlockVolumePhase describes volume phase.
type BlockVolumePhase int32

const (
	BlockVolumePhase_VOLUME_PHASE_WAITING     BlockVolumePhase = 0
	BlockVolumePhase_VOLUME_PHASE_FAILED      BlockVolumePhase = 1
	BlockVolumePhase_VOLUME_PHASE_MISSING     BlockVolumePhase = 2
	BlockVolumePhase_VOLUME_PHASE_LOCATED     BlockVolumePhase = 3
	BlockVolumePhase_VOLUME_PHASE_PROVISIONED BlockVolumePhase = 4
	BlockVolumePhase_VOLUME_PHASE_PREPARED    BlockVolumePhase = 5
	BlockVolumePhase_VOLUME_PHASE_READY       BlockVolumePhase = 6
	BlockVolumePhase_VOLUME_PHASE_CLOSED      BlockVolumePhase = 7
)

// Enum value maps for BlockVolumePhase.
var (
	BlockVolumePhase_name = map[int32]string{
		0: "VOLUME_PHASE_WAITING",
		1: "VOLUME_PHASE_FAILED",
		2: "VOLUME_PHASE_MISSING",
		3: "VOLUME_PHASE_LOCATED",
		4: "VOLUME_PHASE_PROVISIONED",
		5: "VOLUME_PHASE_PREPARED",
		6: "VOLUME_PHASE_READY",
		7: "VOLUME_PHASE_CLOSED",
	}
	BlockVolumePhase_value = map[string]int32{
		"VOLUME_PHASE_WAITING":     0,
		"VOLUME_PHASE_FAILED":      1,
		"VOLUME_PHASE_MISSING":     2,
		"VOLUME_PHASE_LOCATED":     3,
		"VOLUME_PHASE_PROVISIONED": 4,
		"VOLUME_PHASE_PREPARED":    5,
		"VOLUME_PHASE_READY":       6,
		"VOLUME_PHASE_CLOSED":      7,
	}
)

func (x BlockVolumePhase) Enum() *BlockVolumePhase {
	p := new(BlockVolumePhase)
	*p = x
	return p
}

func (x BlockVolumePhase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockVolumePhase) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[39].Descriptor()
}

func (BlockVolumePhase) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[39]
}

func (x BlockVolumePhase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlockVolumePhase.Descriptor instead.
func (BlockVolumePhase) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{39}
}

// BlockVolumeType describes volume type.
type BlockVolumeType int32

const (
	BlockVolumeType_VOLUME_TYPE_PARTITION BlockVolumeType = 0
	BlockVolumeType_VOLUME_TYPE_DISK      BlockVolumeType = 1
	BlockVolumeType_VOLUME_TYPE_TMPFS     BlockVolumeType = 2
	BlockVolumeType_VOLUME_TYPE_DIRECTORY BlockVolumeType = 3
	BlockVolumeType_VOLUME_TYPE_SYMLINK   BlockVolumeType = 4
	BlockVolumeType_VOLUME_TYPE_OVERLAY   BlockVolumeType = 5
)

// Enum value maps for BlockVolumeType.
var (
	BlockVolumeType_name = map[int32]string{
		0: "VOLUME_TYPE_PARTITION",
		1: "VOLUME_TYPE_DISK",
		2: "VOLUME_TYPE_TMPFS",
		3: "VOLUME_TYPE_DIRECTORY",
		4: "VOLUME_TYPE_SYMLINK",
		5: "VOLUME_TYPE_OVERLAY",
	}
	BlockVolumeType_value = map[string]int32{
		"VOLUME_TYPE_PARTITION": 0,
		"VOLUME_TYPE_DISK":      1,
		"VOLUME_TYPE_TMPFS":     2,
		"VOLUME_TYPE_DIRECTORY": 3,
		"VOLUME_TYPE_SYMLINK":   4,
		"VOLUME_TYPE_OVERLAY":   5,
	}
)

func (x BlockVolumeType) Enum() *BlockVolumeType {
	p := new(BlockVolumeType)
	*p = x
	return p
}

func (x BlockVolumeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockVolumeType) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[40].Descriptor()
}

func (BlockVolumeType) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[40]
}

func (x BlockVolumeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlockVolumeType.Descriptor instead.
func (BlockVolumeType) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{40}
}

// CriImageCacheStatus describes image cache status type.
type CriImageCacheStatus int32

const (
	CriImageCacheStatus_IMAGE_CACHE_STATUS_UNKNOWN   CriImageCacheStatus = 0
	CriImageCacheStatus_IMAGE_CACHE_STATUS_DISABLED  CriImageCacheStatus = 1
	CriImageCacheStatus_IMAGE_CACHE_STATUS_PREPARING CriImageCacheStatus = 2
	CriImageCacheStatus_IMAGE_CACHE_STATUS_READY     CriImageCacheStatus = 3
)

// Enum value maps for CriImageCacheStatus.
var (
	CriImageCacheStatus_name = map[int32]string{
		0: "IMAGE_CACHE_STATUS_UNKNOWN",
		1: "IMAGE_CACHE_STATUS_DISABLED",
		2: "IMAGE_CACHE_STATUS_PREPARING",
		3: "IMAGE_CACHE_STATUS_READY",
	}
	CriImageCacheStatus_value = map[string]int32{
		"IMAGE_CACHE_STATUS_UNKNOWN":   0,
		"IMAGE_CACHE_STATUS_DISABLED":  1,
		"IMAGE_CACHE_STATUS_PREPARING": 2,
		"IMAGE_CACHE_STATUS_READY":     3,
	}
)

func (x CriImageCacheStatus) Enum() *CriImageCacheStatus {
	p := new(CriImageCacheStatus)
	*p = x
	return p
}

func (x CriImageCacheStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CriImageCacheStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[41].Descriptor()
}

func (CriImageCacheStatus) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[41]
}

func (x CriImageCacheStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CriImageCacheStatus.Descriptor instead.
func (CriImageCacheStatus) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{41}
}

// CriImageCacheCopyStatus describes image cache copy status type.
type CriImageCacheCopyStatus int32

const (
	CriImageCacheCopyStatus_IMAGE_CACHE_COPY_STATUS_UNKNOWN CriImageCacheCopyStatus = 0
	CriImageCacheCopyStatus_IMAGE_CACHE_COPY_STATUS_SKIPPED CriImageCacheCopyStatus = 1
	CriImageCacheCopyStatus_IMAGE_CACHE_COPY_STATUS_PENDING CriImageCacheCopyStatus = 2
	CriImageCacheCopyStatus_IMAGE_CACHE_COPY_STATUS_READY   CriImageCacheCopyStatus = 3
)

// Enum value maps for CriImageCacheCopyStatus.
var (
	CriImageCacheCopyStatus_name = map[int32]string{
		0: "IMAGE_CACHE_COPY_STATUS_UNKNOWN",
		1: "IMAGE_CACHE_COPY_STATUS_SKIPPED",
		2: "IMAGE_CACHE_COPY_STATUS_PENDING",
		3: "IMAGE_CACHE_COPY_STATUS_READY",
	}
	CriImageCacheCopyStatus_value = map[string]int32{
		"IMAGE_CACHE_COPY_STATUS_UNKNOWN": 0,
		"IMAGE_CACHE_COPY_STATUS_SKIPPED": 1,
		"IMAGE_CACHE_COPY_STATUS_PENDING": 2,
		"IMAGE_CACHE_COPY_STATUS_READY":   3,
	}
)

func (x CriImageCacheCopyStatus) Enum() *CriImageCacheCopyStatus {
	p := new(CriImageCacheCopyStatus)
	*p = x
	return p
}

func (x CriImageCacheCopyStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CriImageCacheCopyStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[42].Descriptor()
}

func (CriImageCacheCopyStatus) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[42]
}

func (x CriImageCacheCopyStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CriImageCacheCopyStatus.Descriptor instead.
func (CriImageCacheCopyStatus) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{42}
}

// KubespanPeerState is KubeSpan peer current state.
type KubespanPeerState int32

const (
	KubespanPeerState_PEER_STATE_UNKNOWN KubespanPeerState = 0
	KubespanPeerState_PEER_STATE_UP      KubespanPeerState = 1
	KubespanPeerState_PEER_STATE_DOWN    KubespanPeerState = 2
)

// Enum value maps for KubespanPeerState.
var (
	KubespanPeerState_name = map[int32]string{
		0: "PEER_STATE_UNKNOWN",
		1: "PEER_STATE_UP",
		2: "PEER_STATE_DOWN",
	}
	KubespanPeerState_value = map[string]int32{
		"PEER_STATE_UNKNOWN": 0,
		"PEER_STATE_UP":      1,
		"PEER_STATE_DOWN":    2,
	}
)

func (x KubespanPeerState) Enum() *KubespanPeerState {
	p := new(KubespanPeerState)
	*p = x
	return p
}

func (x KubespanPeerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KubespanPeerState) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[43].Descriptor()
}

func (KubespanPeerState) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[43]
}

func (x KubespanPeerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KubespanPeerState.Descriptor instead.
func (KubespanPeerState) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{43}
}

// NetworkConfigLayer describes network configuration layers, with lowest priority first.
type NetworkConfigLayer int32

const (
	NetworkConfigLayer_CONFIG_DEFAULT               NetworkConfigLayer = 0
	NetworkConfigLayer_CONFIG_CMDLINE               NetworkConfigLayer = 1
	NetworkConfigLayer_CONFIG_PLATFORM              NetworkConfigLayer = 2
	NetworkConfigLayer_CONFIG_OPERATOR              NetworkConfigLayer = 3
	NetworkConfigLayer_CONFIG_MACHINE_CONFIGURATION NetworkConfigLayer = 4
)

// Enum value maps for NetworkConfigLayer.
var (
	NetworkConfigLayer_name = map[int32]string{
		0: "CONFIG_DEFAULT",
		1: "CONFIG_CMDLINE",
		2: "CONFIG_PLATFORM",
		3: "CONFIG_OPERATOR",
		4: "CONFIG_MACHINE_CONFIGURATION",
	}
	NetworkConfigLayer_value = map[string]int32{
		"CONFIG_DEFAULT":               0,
		"CONFIG_CMDLINE":               1,
		"CONFIG_PLATFORM":              2,
		"CONFIG_OPERATOR":              3,
		"CONFIG_MACHINE_CONFIGURATION": 4,
	}
)

func (x NetworkConfigLayer) Enum() *NetworkConfigLayer {
	p := new(NetworkConfigLayer)
	*p = x
	return p
}

func (x NetworkConfigLayer) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NetworkConfigLayer) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[44].Descriptor()
}

func (NetworkConfigLayer) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[44]
}

func (x NetworkConfigLayer) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NetworkConfigLayer.Descriptor instead.
func (NetworkConfigLayer) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{44}
}

// NetworkOperator enumerates Talos network operators.
type NetworkOperator int32

const (
	NetworkOperator_OPERATOR_DHCP4 NetworkOperator = 0
	NetworkOperator_OPERATOR_DHCP6 NetworkOperator = 1
	NetworkOperator_OPERATOR_VIP   NetworkOperator = 2
)

// Enum value maps for NetworkOperator.
var (
	NetworkOperator_name = map[int32]string{
		0: "OPERATOR_DHCP4",
		1: "OPERATOR_DHCP6",
		2: "OPERATOR_VIP",
	}
	NetworkOperator_value = map[string]int32{
		"OPERATOR_DHCP4": 0,
		"OPERATOR_DHCP6": 1,
		"OPERATOR_VIP":   2,
	}
)

func (x NetworkOperator) Enum() *NetworkOperator {
	p := new(NetworkOperator)
	*p = x
	return p
}

func (x NetworkOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NetworkOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_definitions_enums_enums_proto_enumTypes[45].Descriptor()
}

func (NetworkOperator) Type() protoreflect.EnumType {
	return &file_resource_definitions_enums_enums_proto_enumTypes[45]
}

func (x NetworkOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NetworkOperator.Descriptor instead.
func (NetworkOperator) EnumDescriptor() ([]byte, []int) {
	return file_resource_definitions_enums_enums_proto_rawDescGZIP(), []int{45}
}

var File_resource_definitions_enums_enums_proto protoreflect.FileDescriptor

const file_resource_definitions_enums_enums_proto_rawDesc = "" +
	"\n" +
	"&resource/definitions/enums/enums.proto\x12 talos.resource.definitions.enums*\x9b\x02\n" +
	"\x13RuntimeMachineStage\x12\x19\n" +
	"\x15MACHINE_STAGE_UNKNOWN\x10\x00\x12\x19\n" +
	"\x15MACHINE_STAGE_BOOTING\x10\x01\x12\x1c\n" +
	"\x18MACHINE_STAGE_INSTALLING\x10\x02\x12\x1d\n" +
	"\x19MACHINE_STAGE_MAINTENANCE\x10\x03\x12\x19\n" +
	"\x15MACHINE_STAGE_RUNNING\x10\x04\x12\x1b\n" +
	"\x17MACHINE_STAGE_REBOOTING\x10\x05\x12\x1f\n" +
	"\x1bMACHINE_STAGE_SHUTTING_DOWN\x10\x06\x12\x1b\n" +
	"\x17MACHINE_STAGE_RESETTING\x10\a\x12\x1b\n" +
	"\x17MACHINE_STAGE_UPGRADING\x10\b*o\n" +
	"\x13RuntimeSELinuxState\x12\x1b\n" +
	"\x17SE_LINUX_STATE_DISABLED\x10\x00\x12\x1d\n" +
	"\x19SE_LINUX_STATE_PERMISSIVE\x10\x01\x12\x1c\n" +
	"\x18SE_LINUX_STATE_ENFORCING\x10\x02*Z\n" +
	"\x10RuntimeFIPSState\x12\x17\n" +
	"\x13FIPS_STATE_DISABLED\x10\x00\x12\x16\n" +
	"\x12FIPS_STATE_ENABLED\x10\x01\x12\x15\n" +
	"\x11FIPS_STATE_STRICT\x10\x02*W\n" +
	"\vMachineType\x12\x10\n" +
	"\fTYPE_UNKNOWN\x10\x00\x12\r\n" +
	"\tTYPE_INIT\x10\x01\x12\x16\n" +
	"\x12TYPE_CONTROL_PLANE\x10\x02\x12\x0f\n" +
	"\vTYPE_WORKER\x10\x03*\xe7\x02\n" +
	"\x15NethelpersAddressFlag\x12&\n" +
	"\"NETHELPERS_ADDRESSFLAG_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11ADDRESS_TEMPORARY\x10\x01\x12\x12\n" +
	"\x0eADDRESS_NO_DAD\x10\x02\x12\x16\n" +
	"\x12ADDRESS_OPTIMISTIC\x10\x04\x12\x16\n" +
	"\x12ADDRESS_DAD_FAILED\x10\b\x12\x10\n" +
	"\fADDRESS_HOME\x10\x10\x12\x16\n" +
	"\x12ADDRESS_DEPRECATED\x10 \x12\x15\n" +
	"\x11ADDRESS_TENTATIVE\x10@\x12\x16\n" +
	"\x11ADDRESS_PERMANENT\x10\x80\x01\x12\x1c\n" +
	"\x17ADDRESS_MANAGEMENT_TEMP\x10\x80\x02\x12\x1c\n" +
	"\x17ADDRESS_NO_PREFIX_ROUTE\x10\x80\x04\x12\x19\n" +
	"\x14ADDRESS_MC_AUTO_JOIN\x10\x80\b\x12\x1b\n" +
	"\x16ADDRESS_STABLE_PRIVACY\x10\x80\x10*^\n" +
	"\x1eNethelpersAddressSortAlgorithm\x12\x1d\n" +
	"\x19ADDRESS_SORT_ALGORITHM_V1\x10\x00\x12\x1d\n" +
	"\x19ADDRESS_SORT_ALGORITHM_V2\x10\x01*E\n" +
	"\x16NethelpersADLACPActive\x12\x15\n" +
	"\x11ADLACP_ACTIVE_OFF\x10\x00\x12\x14\n" +
	"\x10ADLACP_ACTIVE_ON\x10\x01*X\n" +
	"\x12NethelpersADSelect\x12\x14\n" +
	"\x10AD_SELECT_STABLE\x10\x00\x12\x17\n" +
	"\x13AD_SELECT_BANDWIDTH\x10\x01\x12\x13\n" +
	"\x0fAD_SELECT_COUNT\x10\x02*K\n" +
	"\x17NethelpersARPAllTargets\x12\x17\n" +
	"\x13ARP_ALL_TARGETS_ANY\x10\x00\x12\x17\n" +
	"\x13ARP_ALL_TARGETS_ALL\x10\x01*\xcf\x01\n" +
	"\x15NethelpersARPValidate\x12\x15\n" +
	"\x11ARP_VALIDATE_NONE\x10\x00\x12\x17\n" +
	"\x13ARP_VALIDATE_ACTIVE\x10\x01\x12\x17\n" +
	"\x13ARP_VALIDATE_BACKUP\x10\x02\x12\x14\n" +
	"\x10ARP_VALIDATE_ALL\x10\x03\x12\x17\n" +
	"\x13ARP_VALIDATE_FILTER\x10\x04\x12\x1e\n" +
	"\x1aARP_VALIDATE_FILTER_ACTIVE\x10\x05\x12\x1e\n" +
	"\x1aARP_VALIDATE_FILTER_BACKUP\x10\x06*t\n" +
	"\x1aNethelpersAutoHostnameKind\x12\x1a\n" +
	"\x16AUTO_HOSTNAME_KIND_OFF\x10\x00\x12\x1b\n" +
	"\x17AUTO_HOSTNAME_KIND_ADDR\x10\x01\x12\x1d\n" +
	"\x19AUTO_HOSTNAME_KIND_STABLE\x10\x02*\xb3\x01\n" +
	"\x12NethelpersBondMode\x12\x18\n" +
	"\x14BOND_MODE_ROUNDROBIN\x10\x00\x12\x1b\n" +
	"\x17BOND_MODE_ACTIVE_BACKUP\x10\x01\x12\x11\n" +
	"\rBOND_MODE_XOR\x10\x02\x12\x17\n" +
	"\x13BOND_MODE_BROADCAST\x10\x03\x12\x14\n" +
	"\x10BOND_MODE8023_AD\x10\x04\x12\x11\n" +
	"\rBOND_MODE_TLB\x10\x05\x12\x11\n" +
	"\rBOND_MODE_ALB\x10\x06*\xb3\x01\n" +
	"\x1cNethelpersBondXmitHashPolicy\x12\x1b\n" +
	"\x17BOND_XMIT_POLICY_LAYER2\x10\x00\x12\x1c\n" +
	"\x18BOND_XMIT_POLICY_LAYER34\x10\x01\x12\x1c\n" +
	"\x18BOND_XMIT_POLICY_LAYER23\x10\x02\x12\x1c\n" +
	"\x18BOND_XMIT_POLICY_ENCAP23\x10\x03\x12\x1c\n" +
	"\x18BOND_XMIT_POLICY_ENCAP34\x10\x04*o\n" +
	"\x1aNethelpersClientIdentifier\x12\x1a\n" +
	"\x16CLIENT_IDENTIFIER_NONE\x10\x00\x12\x19\n" +
	"\x15CLIENT_IDENTIFIER_MAC\x10\x01\x12\x1a\n" +
	"\x16CLIENT_IDENTIFIER_DUID\x10\x02*\xb9\x01\n" +
	"\x18NethelpersConntrackState\x12)\n" +
	"%NETHELPERS_CONNTRACKSTATE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13CONNTRACK_STATE_NEW\x10\b\x12\x1b\n" +
	"\x17CONNTRACK_STATE_RELATED\x10\x04\x12\x1f\n" +
	"\x1bCONNTRACK_STATE_ESTABLISHED\x10\x02\x12\x1b\n" +
	"\x17CONNTRACK_STATE_INVALID\x10\x01*4\n" +
	"\x10NethelpersDuplex\x12\b\n" +
	"\x04HALF\x10\x00\x12\b\n" +
	"\x04FULL\x10\x01\x12\f\n" +
	"\aUNKNOWN\x10\xff\x01*c\n" +
	"\x15NethelpersFailOverMAC\x12\x16\n" +
	"\x12FAIL_OVER_MAC_NONE\x10\x00\x12\x18\n" +
	"\x14FAIL_OVER_MAC_ACTIVE\x10\x01\x12\x18\n" +
	"\x14FAIL_OVER_MAC_FOLLOW\x10\x02*Y\n" +
	"\x10NethelpersFamily\x12!\n" +
	"\x1dNETHELPERS_FAMILY_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\fFAMILY_INET4\x10\x02\x12\x10\n" +
	"\fFAMILY_INET6\x10\n" +
	"*\xbf\x01\n" +
	"\x12NethelpersICMPType\x12#\n" +
	"\x1fNETHELPERS_ICMPTYPE_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bICMP_TYPE_TIMESTAMP_REQUEST\x10\r\x12\x1d\n" +
	"\x19ICMP_TYPE_TIMESTAMP_REPLY\x10\x0e\x12\"\n" +
	"\x1eICMP_TYPE_ADDRESS_MASK_REQUEST\x10\x11\x12 \n" +
	"\x1cICMP_TYPE_ADDRESS_MASK_REPLY\x10\x12*<\n" +
	"\x12NethelpersLACPRate\x12\x12\n" +
	"\x0eLACP_RATE_SLOW\x10\x00\x12\x12\n" +
	"\x0eLACP_RATE_FAST\x10\x01*\x93\v\n" +
	"\x12NethelpersLinkType\x12\x0f\n" +
	"\vLINK_NETROM\x10\x00\x12\x0e\n" +
	"\n" +
	"LINK_ETHER\x10\x01\x12\x0f\n" +
	"\vLINK_EETHER\x10\x02\x12\r\n" +
	"\tLINK_AX25\x10\x03\x12\x0f\n" +
	"\vLINK_PRONET\x10\x04\x12\x0e\n" +
	"\n" +
	"LINK_CHAOS\x10\x05\x12\x0f\n" +
	"\vLINK_IEE802\x10\x06\x12\x0f\n" +
	"\vLINK_ARCNET\x10\a\x12\x0e\n" +
	"\n" +
	"LINK_ATALK\x10\b\x12\r\n" +
	"\tLINK_DLCI\x10\x0f\x12\f\n" +
	"\bLINK_ATM\x10\x13\x12\x11\n" +
	"\rLINK_METRICOM\x10\x17\x12\x11\n" +
	"\rLINK_IEEE1394\x10\x18\x12\x0e\n" +
	"\n" +
	"LINK_EUI64\x10\x1b\x12\x13\n" +
	"\x0fLINK_INFINIBAND\x10 \x12\x0e\n" +
	"\tLINK_SLIP\x10\x80\x02\x12\x0f\n" +
	"\n" +
	"LINK_CSLIP\x10\x81\x02\x12\x0f\n" +
	"\n" +
	"LINK_SLIP6\x10\x82\x02\x12\x10\n" +
	"\vLINK_CSLIP6\x10\x83\x02\x12\x0f\n" +
	"\n" +
	"LINK_RSRVD\x10\x84\x02\x12\x0f\n" +
	"\n" +
	"LINK_ADAPT\x10\x88\x02\x12\x0e\n" +
	"\tLINK_ROSE\x10\x8e\x02\x12\r\n" +
	"\bLINK_X25\x10\x8f\x02\x12\x0f\n" +
	"\n" +
	"LINK_HWX25\x10\x90\x02\x12\r\n" +
	"\bLINK_CAN\x10\x98\x02\x12\r\n" +
	"\bLINK_PPP\x10\x80\x04\x12\x0f\n" +
	"\n" +
	"LINK_CISCO\x10\x81\x04\x12\x0e\n" +
	"\tLINK_HDLC\x10\x81\x04\x12\x0e\n" +
	"\tLINK_LAPB\x10\x84\x04\x12\x0f\n" +
	"\n" +
	"LINK_DDCMP\x10\x85\x04\x12\x11\n" +
	"\fLINK_RAWHDLC\x10\x86\x04\x12\x10\n" +
	"\vLINK_TUNNEL\x10\x80\x06\x12\x11\n" +
	"\fLINK_TUNNEL6\x10\x81\x06\x12\x0e\n" +
	"\tLINK_FRAD\x10\x82\x06\x12\x0e\n" +
	"\tLINK_SKIP\x10\x83\x06\x12\x11\n" +
	"\fLINK_LOOPBCK\x10\x84\x06\x12\x12\n" +
	"\rLINK_LOCALTLK\x10\x85\x06\x12\x0e\n" +
	"\tLINK_FDDI\x10\x86\x06\x12\r\n" +
	"\bLINK_BIF\x10\x87\x06\x12\r\n" +
	"\bLINK_SIT\x10\x88\x06\x12\x0f\n" +
	"\n" +
	"LINK_IPDDP\x10\x89\x06\x12\x0f\n" +
	"\n" +
	"LINK_IPGRE\x10\x8a\x06\x12\x10\n" +
	"\vLINK_PIMREG\x10\x8b\x06\x12\x0f\n" +
	"\n" +
	"LINK_HIPPI\x10\x8c\x06\x12\r\n" +
	"\bLINK_ASH\x10\x8d\x06\x12\x10\n" +
	"\vLINK_ECONET\x10\x8e\x06\x12\x0e\n" +
	"\tLINK_IRDA\x10\x8f\x06\x12\x0e\n" +
	"\tLINK_FCPP\x10\x90\x06\x12\x0e\n" +
	"\tLINK_FCAL\x10\x91\x06\x12\x0e\n" +
	"\tLINK_FCPL\x10\x92\x06\x12\x12\n" +
	"\rLINK_FCFABRIC\x10\x93\x06\x12\x13\n" +
	"\x0eLINK_FCFABRIC1\x10\x94\x06\x12\x13\n" +
	"\x0eLINK_FCFABRIC2\x10\x95\x06\x12\x13\n" +
	"\x0eLINK_FCFABRIC3\x10\x96\x06\x12\x13\n" +
	"\x0eLINK_FCFABRIC4\x10\x97\x06\x12\x13\n" +
	"\x0eLINK_FCFABRIC5\x10\x98\x06\x12\x13\n" +
	"\x0eLINK_FCFABRIC6\x10\x99\x06\x12\x13\n" +
	"\x0eLINK_FCFABRIC7\x10\x9a\x06\x12\x13\n" +
	"\x0eLINK_FCFABRIC8\x10\x9b\x06\x12\x13\n" +
	"\x0eLINK_FCFABRIC9\x10\x9c\x06\x12\x14\n" +
	"\x0fLINK_FCFABRIC10\x10\x9d\x06\x12\x14\n" +
	"\x0fLINK_FCFABRIC11\x10\x9e\x06\x12\x14\n" +
	"\x0fLINK_FCFABRIC12\x10\x9f\x06\x12\x12\n" +
	"\rLINK_IEE802TR\x10\xa0\x06\x12\x12\n" +
	"\rLINK_IEE80211\x10\xa1\x06\x12\x17\n" +
	"\x12LINK_IEE80211PRISM\x10\xa2\x06\x12\x1b\n" +
	"\x16LINK_IEE80211_RADIOTAP\x10\xa3\x06\x12\x14\n" +
	"\x0fLINK_IEE8021154\x10\xa4\x06\x12\x1b\n" +
	"\x16LINK_IEE8021154MONITOR\x10\xa5\x06\x12\x10\n" +
	"\vLINK_PHONET\x10\xb4\x06\x12\x14\n" +
	"\x0fLINK_PHONETPIPE\x10\xb5\x06\x12\x0e\n" +
	"\tLINK_CAIF\x10\xb6\x06\x12\x10\n" +
	"\vLINK_IP6GRE\x10\xb7\x06\x12\x11\n" +
	"\fLINK_NETLINK\x10\xb8\x06\x12\x11\n" +
	"\fLINK6_LOWPAN\x10\xb9\x06\x12\x0f\n" +
	"\tLINK_VOID\x10\xff\xff\x03\x12\x0f\n" +
	"\tLINK_NONE\x10\xfe\xff\x03\x1a\x02\x10\x01*E\n" +
	"\x17NethelpersMatchOperator\x12\x12\n" +
	"\x0eOPERATOR_EQUAL\x10\x00\x12\x16\n" +
	"\x12OPERATOR_NOT_EQUAL\x10\x01*\x99\x01\n" +
	"\x1bNethelpersNfTablesChainHook\x12\x19\n" +
	"\x15CHAIN_HOOK_PREROUTING\x10\x00\x12\x14\n" +
	"\x10CHAIN_HOOK_INPUT\x10\x01\x12\x16\n" +
	"\x12CHAIN_HOOK_FORWARD\x10\x02\x12\x15\n" +
	"\x11CHAIN_HOOK_OUTPUT\x10\x03\x12\x1a\n" +
	"\x16CHAIN_HOOK_POSTROUTING\x10\x04*\xa3\x04\n" +
	"\x1fNethelpersNfTablesChainPriority\x120\n" +
	",NETHELPERS_NFTABLESCHAINPRIORITY_UNSPECIFIED\x10\x00\x12!\n" +
	"\x14CHAIN_PRIORITY_FIRST\x10\x80\x80\x80\x80\xf8\xff\xff\xff\xff\x01\x12,\n" +
	"\x1fCHAIN_PRIORITY_CONNTRACK_DEFRAG\x10\xf0\xfc\xff\xff\xff\xff\xff\xff\xff\x01\x12\x1f\n" +
	"\x12CHAIN_PRIORITY_RAW\x10\xd4\xfd\xff\xff\xff\xff\xff\xff\xff\x01\x12*\n" +
	"\x1dCHAIN_PRIORITY_SE_LINUX_FIRST\x10\x9f\xfe\xff\xff\xff\xff\xff\xff\xff\x01\x12%\n" +
	"\x18CHAIN_PRIORITY_CONNTRACK\x10\xb8\xfe\xff\xff\xff\xff\xff\xff\xff\x01\x12\"\n" +
	"\x15CHAIN_PRIORITY_MANGLE\x10\xea\xfe\xff\xff\xff\xff\xff\xff\xff\x01\x12$\n" +
	"\x17CHAIN_PRIORITY_NAT_DEST\x10\x9c\xff\xff\xff\xff\xff\xff\xff\xff\x01\x12\x19\n" +
	"\x15CHAIN_PRIORITY_FILTER\x10\x00\x12\x1b\n" +
	"\x17CHAIN_PRIORITY_SECURITY\x102\x12\x1d\n" +
	"\x19CHAIN_PRIORITY_NAT_SOURCE\x10d\x12!\n" +
	"\x1cCHAIN_PRIORITY_SE_LINUX_LAST\x10\xe1\x01\x12$\n" +
	"\x1fCHAIN_PRIORITY_CONNTRACK_HELPER\x10\xac\x02\x12\x1b\n" +
	"\x13CHAIN_PRIORITY_LAST\x10\xff\xff\xff\xff\a\x1a\x02\x10\x01*A\n" +
	"\x19NethelpersNfTablesVerdict\x12\x10\n" +
	"\fVERDICT_DROP\x10\x00\x12\x12\n" +
	"\x0eVERDICT_ACCEPT\x10\x01*\xc9\x01\n" +
	"\x1aNethelpersOperationalState\x12\x16\n" +
	"\x12OPER_STATE_UNKNOWN\x10\x00\x12\x1a\n" +
	"\x16OPER_STATE_NOT_PRESENT\x10\x01\x12\x13\n" +
	"\x0fOPER_STATE_DOWN\x10\x02\x12\x1f\n" +
	"\x1bOPER_STATE_LOWER_LAYER_DOWN\x10\x03\x12\x16\n" +
	"\x12OPER_STATE_TESTING\x10\x04\x12\x16\n" +
	"\x12OPER_STATE_DORMANT\x10\x05\x12\x11\n" +
	"\rOPER_STATE_UP\x10\x06*r\n" +
	"\x0eNethelpersPort\x12\x10\n" +
	"\fTWISTED_PAIR\x10\x00\x12\a\n" +
	"\x03AUI\x10\x01\x12\a\n" +
	"\x03MII\x10\x02\x12\t\n" +
	"\x05FIBRE\x10\x03\x12\a\n" +
	"\x03BNC\x10\x04\x12\x11\n" +
	"\rDIRECT_ATTACH\x10\x05\x12\t\n" +
	"\x04NONE\x10\xef\x01\x12\n" +
	"\n" +
	"\x05OTHER\x10\xff\x01*s\n" +
	"\x19NethelpersPrimaryReselect\x12\x1b\n" +
	"\x17PRIMARY_RESELECT_ALWAYS\x10\x00\x12\x1b\n" +
	"\x17PRIMARY_RESELECT_BETTER\x10\x01\x12\x1c\n" +
	"\x18PRIMARY_RESELECT_FAILURE\x10\x02*\x86\x01\n" +
	"\x12NethelpersProtocol\x12#\n" +
	"\x1fNETHELPERS_PROTOCOL_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rPROTOCOL_ICMP\x10\x01\x12\x10\n" +
	"\fPROTOCOL_TCP\x10\x06\x12\x10\n" +
	"\fPROTOCOL_UDP\x10\x11\x12\x14\n" +
	"\x10PROTOCOL_ICM_PV6\x10:*\xdf\x01\n" +
	"\x13NethelpersRouteFlag\x12$\n" +
	" NETHELPERS_ROUTEFLAG_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\fROUTE_NOTIFY\x10\x80\x02\x12\x11\n" +
	"\fROUTE_CLONED\x10\x80\x04\x12\x13\n" +
	"\x0eROUTE_EQUALIZE\x10\x80\b\x12\x11\n" +
	"\fROUTE_PREFIX\x10\x80\x10\x12\x17\n" +
	"\x12ROUTE_LOOKUP_TABLE\x10\x80 \x12\x14\n" +
	"\x0fROUTE_FIB_MATCH\x10\x80@\x12\x13\n" +
	"\rROUTE_OFFLOAD\x10\x80\x80\x01\x12\x10\n" +
	"\n" +
	"ROUTE_TRAP\x10\x80\x80\x02*\xd2\x03\n" +
	"\x17NethelpersRouteProtocol\x12\x13\n" +
	"\x0fPROTOCOL_UNSPEC\x10\x00\x12\x15\n" +
	"\x11PROTOCOL_REDIRECT\x10\x01\x12\x13\n" +
	"\x0fPROTOCOL_KERNEL\x10\x02\x12\x11\n" +
	"\rPROTOCOL_BOOT\x10\x03\x12\x13\n" +
	"\x0fPROTOCOL_STATIC\x10\x04\x12\x0f\n" +
	"\vPROTOCOL_RA\x10\t\x12\x10\n" +
	"\fPROTOCOL_MRT\x10\n" +
	"\x12\x12\n" +
	"\x0ePROTOCOL_ZEBRA\x10\v\x12\x11\n" +
	"\rPROTOCOL_BIRD\x10\f\x12\x15\n" +
	"\x11PROTOCOL_DNROUTED\x10\r\x12\x11\n" +
	"\rPROTOCOL_XORP\x10\x0e\x12\x10\n" +
	"\fPROTOCOL_NTK\x10\x0f\x12\x11\n" +
	"\rPROTOCOL_DHCP\x10\x10\x12\x11\n" +
	"\rPROTOCOL_MRTD\x10\x11\x12\x17\n" +
	"\x13PROTOCOL_KEEPALIVED\x10\x12\x12\x12\n" +
	"\x0ePROTOCOL_BABEL\x10*\x12\x12\n" +
	"\x0ePROTOCOL_OPENR\x10c\x12\x11\n" +
	"\fPROTOCOL_BGP\x10\xba\x01\x12\x12\n" +
	"\rPROTOCOL_ISIS\x10\xbb\x01\x12\x12\n" +
	"\rPROTOCOL_OSPF\x10\xbc\x01\x12\x11\n" +
	"\fPROTOCOL_RIP\x10\xbd\x01\x12\x13\n" +
	"\x0ePROTOCOL_EIGRP\x10\xc0\x01*\xf1\x01\n" +
	"\x13NethelpersRouteType\x12\x0f\n" +
	"\vTYPE_UNSPEC\x10\x00\x12\x10\n" +
	"\fTYPE_UNICAST\x10\x01\x12\x0e\n" +
	"\n" +
	"TYPE_LOCAL\x10\x02\x12\x12\n" +
	"\x0eTYPE_BROADCAST\x10\x03\x12\x10\n" +
	"\fTYPE_ANYCAST\x10\x04\x12\x12\n" +
	"\x0eTYPE_MULTICAST\x10\x05\x12\x12\n" +
	"\x0eTYPE_BLACKHOLE\x10\x06\x12\x14\n" +
	"\x10TYPE_UNREACHABLE\x10\a\x12\x11\n" +
	"\rTYPE_PROHIBIT\x10\b\x12\x0e\n" +
	"\n" +
	"TYPE_THROW\x10\t\x12\f\n" +
	"\bTYPE_NAT\x10\n" +
	"\x12\x12\n" +
	"\x0eTYPE_X_RESOLVE\x10\v*\xba\x1c\n" +
	"\x16NethelpersRoutingTable\x12\x10\n" +
	"\fTABLE_UNSPEC\x10\x00\x12\n" +
	"\n" +
	"\x06TABLE1\x10\x01\x12\n" +
	"\n" +
	"\x06TABLE2\x10\x02\x12\n" +
	"\n" +
	"\x06TABLE3\x10\x03\x12\n" +
	"\n" +
	"\x06TABLE4\x10\x04\x12\n" +
	"\n" +
	"\x06TABLE5\x10\x05\x12\n" +
	"\n" +
	"\x06TABLE6\x10\x06\x12\n" +
	"\n" +
	"\x06TABLE7\x10\a\x12\n" +
	"\n" +
	"\x06TABLE8\x10\b\x12\n" +
	"\n" +
	"\x06TABLE9\x10\t\x12\v\n" +
	"\aTABLE10\x10\n" +
	"\x12\v\n" +
	"\aTABLE11\x10\v\x12\v\n" +
	"\aTABLE12\x10\f\x12\v\n" +
	"\aTABLE13\x10\r\x12\v\n" +
	"\aTABLE14\x10\x0e\x12\v\n" +
	"\aTABLE15\x10\x0f\x12\v\n" +
	"\aTABLE16\x10\x10\x12\v\n" +
	"\aTABLE17\x10\x11\x12\v\n" +
	"\aTABLE18\x10\x12\x12\v\n" +
	"\aTABLE19\x10\x13\x12\v\n" +
	"\aTABLE20\x10\x14\x12\v\n" +
	"\aTABLE21\x10\x15\x12\v\n" +
	"\aTABLE22\x10\x16\x12\v\n" +
	"\aTABLE23\x10\x17\x12\v\n" +
	"\aTABLE24\x10\x18\x12\v\n" +
	"\aTABLE25\x10\x19\x12\v\n" +
	"\aTABLE26\x10\x1a\x12\v\n" +
	"\aTABLE27\x10\x1b\x12\v\n" +
	"\aTABLE28\x10\x1c\x12\v\n" +
	"\aTABLE29\x10\x1d\x12\v\n" +
	"\aTABLE30\x10\x1e\x12\v\n" +
	"\aTABLE31\x10\x1f\x12\v\n" +
	"\aTABLE32\x10 \x12\v\n" +
	"\aTABLE33\x10!\x12\v\n" +
	"\aTABLE34\x10\"\x12\v\n" +
	"\aTABLE35\x10#\x12\v\n" +
	"\aTABLE36\x10$\x12\v\n" +
	"\aTABLE37\x10%\x12\v\n" +
	"\aTABLE38\x10&\x12\v\n" +
	"\aTABLE39\x10'\x12\v\n" +
	"\aTABLE40\x10(\x12\v\n" +
	"\aTABLE41\x10)\x12\v\n" +
	"\aTABLE42\x10*\x12\v\n" +
	"\aTABLE43\x10+\x12\v\n" +
	"\aTABLE44\x10,\x12\v\n" +
	"\aTABLE45\x10-\x12\v\n" +
	"\aTABLE46\x10.\x12\v\n" +
	"\aTABLE47\x10/\x12\v\n" +
	"\aTABLE48\x100\x12\v\n" +
	"\aTABLE49\x101\x12\v\n" +
	"\aTABLE50\x102\x12\v\n" +
	"\aTABLE51\x103\x12\v\n" +
	"\aTABLE52\x104\x12\v\n" +
	"\aTABLE53\x105\x12\v\n" +
	"\aTABLE54\x106\x12\v\n" +
	"\aTABLE55\x107\x12\v\n" +
	"\aTABLE56\x108\x12\v\n" +
	"\aTABLE57\x109\x12\v\n" +
	"\aTABLE58\x10:\x12\v\n" +
	"\aTABLE59\x10;\x12\v\n" +
	"\aTABLE60\x10<\x12\v\n" +
	"\aTABLE61\x10=\x12\v\n" +
	"\aTABLE62\x10>\x12\v\n" +
	"\aTABLE63\x10?\x12\v\n" +
	"\aTABLE64\x10@\x12\v\n" +
	"\aTABLE65\x10A\x12\v\n" +
	"\aTABLE66\x10B\x12\v\n" +
	"\aTABLE67\x10C\x12\v\n" +
	"\aTABLE68\x10D\x12\v\n" +
	"\aTABLE69\x10E\x12\v\n" +
	"\aTABLE70\x10F\x12\v\n" +
	"\aTABLE71\x10G\x12\v\n" +
	"\aTABLE72\x10H\x12\v\n" +
	"\aTABLE73\x10I\x12\v\n" +
	"\aTABLE74\x10J\x12\v\n" +
	"\aTABLE75\x10K\x12\v\n" +
	"\aTABLE76\x10L\x12\v\n" +
	"\aTABLE77\x10M\x12\v\n" +
	"\aTABLE78\x10N\x12\v\n" +
	"\aTABLE79\x10O\x12\v\n" +
	"\aTABLE80\x10P\x12\v\n" +
	"\aTABLE81\x10Q\x12\v\n" +
	"\aTABLE82\x10R\x12\v\n" +
	"\aTABLE83\x10S\x12\v\n" +
	"\aTABLE84\x10T\x12\v\n" +
	"\aTABLE85\x10U\x12\v\n" +
	"\aTABLE86\x10V\x12\v\n" +
	"\aTABLE87\x10W\x12\v\n" +
	"\aTABLE88\x10X\x12\v\n" +
	"\aTABLE89\x10Y\x12\v\n" +
	"\aTABLE90\x10Z\x12\v\n" +
	"\aTABLE91\x10[\x12\v\n" +
	"\aTABLE92\x10\\\x12\v\n" +
	"\aTABLE93\x10]\x12\v\n" +
	"\aTABLE94\x10^\x12\v\n" +
	"\aTABLE95\x10_\x12\v\n" +
	"\aTABLE96\x10`\x12\v\n" +
	"\aTABLE97\x10a\x12\v\n" +
	"\aTABLE98\x10b\x12\v\n" +
	"\aTABLE99\x10c\x12\f\n" +
	"\bTABLE100\x10d\x12\f\n" +
	"\bTABLE101\x10e\x12\f\n" +
	"\bTABLE102\x10f\x12\f\n" +
	"\bTABLE103\x10g\x12\f\n" +
	"\bTABLE104\x10h\x12\f\n" +
	"\bTABLE105\x10i\x12\f\n" +
	"\bTABLE106\x10j\x12\f\n" +
	"\bTABLE107\x10k\x12\f\n" +
	"\bTABLE108\x10l\x12\f\n" +
	"\bTABLE109\x10m\x12\f\n" +
	"\bTABLE110\x10n\x12\f\n" +
	"\bTABLE111\x10o\x12\f\n" +
	"\bTABLE112\x10p\x12\f\n" +
	"\bTABLE113\x10q\x12\f\n" +
	"\bTABLE114\x10r\x12\f\n" +
	"\bTABLE115\x10s\x12\f\n" +
	"\bTABLE116\x10t\x12\f\n" +
	"\bTABLE117\x10u\x12\f\n" +
	"\bTABLE118\x10v\x12\f\n" +
	"\bTABLE119\x10w\x12\f\n" +
	"\bTABLE120\x10x\x12\f\n" +
	"\bTABLE121\x10y\x12\f\n" +
	"\bTABLE122\x10z\x12\f\n" +
	"\bTABLE123\x10{\x12\f\n" +
	"\bTABLE124\x10|\x12\f\n" +
	"\bTABLE125\x10}\x12\f\n" +
	"\bTABLE126\x10~\x12\f\n" +
	"\bTABLE127\x10\x7f\x12\r\n" +
	"\bTABLE128\x10\x80\x01\x12\r\n" +
	"\bTABLE129\x10\x81\x01\x12\r\n" +
	"\bTABLE130\x10\x82\x01\x12\r\n" +
	"\bTABLE131\x10\x83\x01\x12\r\n" +
	"\bTABLE132\x10\x84\x01\x12\r\n" +
	"\bTABLE133\x10\x85\x01\x12\r\n" +
	"\bTABLE134\x10\x86\x01\x12\r\n" +
	"\bTABLE135\x10\x87\x01\x12\r\n" +
	"\bTABLE136\x10\x88\x01\x12\r\n" +
	"\bTABLE137\x10\x89\x01\x12\r\n" +
	"\bTABLE138\x10\x8a\x01\x12\r\n" +
	"\bTABLE139\x10\x8b\x01\x12\r\n" +
	"\bTABLE140\x10\x8c\x01\x12\r\n" +
	"\bTABLE141\x10\x8d\x01\x12\r\n" +
	"\bTABLE142\x10\x8e\x01\x12\r\n" +
	"\bTABLE143\x10\x8f\x01\x12\r\n" +
	"\bTABLE144\x10\x90\x01\x12\r\n" +
	"\bTABLE145\x10\x91\x01\x12\r\n" +
	"\bTABLE146\x10\x92\x01\x12\r\n" +
	"\bTABLE147\x10\x93\x01\x12\r\n" +
	"\bTABLE148\x10\x94\x01\x12\r\n" +
	"\bTABLE149\x10\x95\x01\x12\r\n" +
	"\bTABLE150\x10\x96\x01\x12\r\n" +
	"\bTABLE151\x10\x97\x01\x12\r\n" +
	"\bTABLE152\x10\x98\x01\x12\r\n" +
	"\bTABLE153\x10\x99\x01\x12\r\n" +
	"\bTABLE154\x10\x9a\x01\x12\r\n" +
	"\bTABLE155\x10\x9b\x01\x12\r\n" +
	"\bTABLE156\x10\x9c\x01\x12\r\n" +
	"\bTABLE157\x10\x9d\x01\x12\r\n" +
	"\bTABLE158\x10\x9e\x01\x12\r\n" +
	"\bTABLE159\x10\x9f\x01\x12\r\n" +
	"\bTABLE160\x10\xa0\x01\x12\r\n" +
	"\bTABLE161\x10\xa1\x01\x12\r\n" +
	"\bTABLE162\x10\xa2\x01\x12\r\n" +
	"\bTABLE163\x10\xa3\x01\x12\r\n" +
	"\bTABLE164\x10\xa4\x01\x12\r\n" +
	"\bTABLE165\x10\xa5\x01\x12\r\n" +
	"\bTABLE166\x10\xa6\x01\x12\r\n" +
	"\bTABLE167\x10\xa7\x01\x12\r\n" +
	"\bTABLE168\x10\xa8\x01\x12\r\n" +
	"\bTABLE169\x10\xa9\x01\x12\r\n" +
	"\bTABLE170\x10\xaa\x01\x12\r\n" +
	"\bTABLE171\x10\xab\x01\x12\r\n" +
	"\bTABLE172\x10\xac\x01\x12\r\n" +
	"\bTABLE173\x10\xad\x01\x12\r\n" +
	"\bTABLE174\x10\xae\x01\x12\r\n" +
	"\bTABLE175\x10\xaf\x01\x12\r\n" +
	"\bTABLE176\x10\xb0\x01\x12\r\n" +
	"\bTABLE177\x10\xb1\x01\x12\r\n" +
	"\bTABLE178\x10\xb2\x01\x12\r\n" +
	"\bTABLE179\x10\xb3\x01\x12\r\n" +
	"\bTABLE180\x10\xb4\x01\x12\r\n" +
	"\bTABLE181\x10\xb5\x01\x12\r\n" +
	"\bTABLE182\x10\xb6\x01\x12\r\n" +
	"\bTABLE183\x10\xb7\x01\x12\r\n" +
	"\bTABLE184\x10\xb8\x01\x12\r\n" +
	"\bTABLE185\x10\xb9\x01\x12\r\n" +
	"\bTABLE186\x10\xba\x01\x12\r\n" +
	"\bTABLE187\x10\xbb\x01\x12\r\n" +
	"\bTABLE188\x10\xbc\x01\x12\r\n" +
	"\bTABLE189\x10\xbd\x01\x12\r\n" +
	"\bTABLE190\x10\xbe\x01\x12\r\n" +
	"\bTABLE191\x10\xbf\x01\x12\r\n" +
	"\bTABLE192\x10\xc0\x01\x12\r\n" +
	"\bTABLE193\x10\xc1\x01\x12\r\n" +
	"\bTABLE194\x10\xc2\x01\x12\r\n" +
	"\bTABLE195\x10\xc3\x01\x12\r\n" +
	"\bTABLE196\x10\xc4\x01\x12\r\n" +
	"\bTABLE197\x10\xc5\x01\x12\r\n" +
	"\bTABLE198\x10\xc6\x01\x12\r\n" +
	"\bTABLE199\x10\xc7\x01\x12\r\n" +
	"\bTABLE200\x10\xc8\x01\x12\r\n" +
	"\bTABLE201\x10\xc9\x01\x12\r\n" +
	"\bTABLE202\x10\xca\x01\x12\r\n" +
	"\bTABLE203\x10\xcb\x01\x12\r\n" +
	"\bTABLE204\x10\xcc\x01\x12\r\n" +
	"\bTABLE205\x10\xcd\x01\x12\r\n" +
	"\bTABLE206\x10\xce\x01\x12\r\n" +
	"\bTABLE207\x10\xcf\x01\x12\r\n" +
	"\bTABLE208\x10\xd0\x01\x12\r\n" +
	"\bTABLE209\x10\xd1\x01\x12\r\n" +
	"\bTABLE210\x10\xd2\x01\x12\r\n" +
	"\bTABLE211\x10\xd3\x01\x12\r\n" +
	"\bTABLE212\x10\xd4\x01\x12\r\n" +
	"\bTABLE213\x10\xd5\x01\x12\r\n" +
	"\bTABLE214\x10\xd6\x01\x12\r\n" +
	"\bTABLE215\x10\xd7\x01\x12\r\n" +
	"\bTABLE216\x10\xd8\x01\x12\r\n" +
	"\bTABLE217\x10\xd9\x01\x12\r\n" +
	"\bTABLE218\x10\xda\x01\x12\r\n" +
	"\bTABLE219\x10\xdb\x01\x12\r\n" +
	"\bTABLE220\x10\xdc\x01\x12\r\n" +
	"\bTABLE221\x10\xdd\x01\x12\r\n" +
	"\bTABLE222\x10\xde\x01\x12\r\n" +
	"\bTABLE223\x10\xdf\x01\x12\r\n" +
	"\bTABLE224\x10\xe0\x01\x12\r\n" +
	"\bTABLE225\x10\xe1\x01\x12\r\n" +
	"\bTABLE226\x10\xe2\x01\x12\r\n" +
	"\bTABLE227\x10\xe3\x01\x12\r\n" +
	"\bTABLE228\x10\xe4\x01\x12\r\n" +
	"\bTABLE229\x10\xe5\x01\x12\r\n" +
	"\bTABLE230\x10\xe6\x01\x12\r\n" +
	"\bTABLE231\x10\xe7\x01\x12\r\n" +
	"\bTABLE232\x10\xe8\x01\x12\r\n" +
	"\bTABLE233\x10\xe9\x01\x12\r\n" +
	"\bTABLE234\x10\xea\x01\x12\r\n" +
	"\bTABLE235\x10\xeb\x01\x12\r\n" +
	"\bTABLE236\x10\xec\x01\x12\r\n" +
	"\bTABLE237\x10\xed\x01\x12\r\n" +
	"\bTABLE238\x10\xee\x01\x12\r\n" +
	"\bTABLE239\x10\xef\x01\x12\r\n" +
	"\bTABLE240\x10\xf0\x01\x12\r\n" +
	"\bTABLE241\x10\xf1\x01\x12\r\n" +
	"\bTABLE242\x10\xf2\x01\x12\r\n" +
	"\bTABLE243\x10\xf3\x01\x12\r\n" +
	"\bTABLE244\x10\xf4\x01\x12\r\n" +
	"\bTABLE245\x10\xf5\x01\x12\r\n" +
	"\bTABLE246\x10\xf6\x01\x12\r\n" +
	"\bTABLE247\x10\xf7\x01\x12\r\n" +
	"\bTABLE248\x10\xf8\x01\x12\r\n" +
	"\bTABLE249\x10\xf9\x01\x12\r\n" +
	"\bTABLE250\x10\xfa\x01\x12\r\n" +
	"\bTABLE251\x10\xfb\x01\x12\r\n" +
	"\bTABLE252\x10\xfc\x01\x12\x12\n" +
	"\rTABLE_DEFAULT\x10\xfd\x01\x12\x0f\n" +
	"\n" +
	"TABLE_MAIN\x10\xfe\x01\x12\x10\n" +
	"\vTABLE_LOCAL\x10\xff\x01*j\n" +
	"\x0fNethelpersScope\x12\x10\n" +
	"\fSCOPE_GLOBAL\x10\x00\x12\x0f\n" +
	"\n" +
	"SCOPE_SITE\x10\xc8\x01\x12\x0f\n" +
	"\n" +
	"SCOPE_LINK\x10\xfd\x01\x12\x0f\n" +
	"\n" +
	"SCOPE_HOST\x10\xfe\x01\x12\x12\n" +
	"\rSCOPE_NOWHERE\x10\xff\x01*x\n" +
	"\x16NethelpersVLANProtocol\x12'\n" +
	"#NETHELPERS_VLANPROTOCOL_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x13VLAN_PROTOCOL8021_Q\x10\x80\x82\x02\x12\x1a\n" +
	"\x14VLAN_PROTOCOL8021_AD\x10\xa8\x91\x02*\xd4\x01\n" +
	"\x11NethelpersWOLMode\x12\"\n" +
	"\x1eNETHELPERS_WOLMODE_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\fWOL_MODE_PHY\x10\x01\x12\x14\n" +
	"\x10WOL_MODE_UNICAST\x10\x02\x12\x16\n" +
	"\x12WOL_MODE_MULTICAST\x10\x04\x12\x16\n" +
	"\x12WOL_MODE_BROADCAST\x10\b\x12\x12\n" +
	"\x0eWOL_MODE_MAGIC\x10 \x12\x19\n" +
	"\x15WOL_MODE_MAGIC_SECURE\x10@\x12\x14\n" +
	"\x0fWOL_MODE_FILTER\x10\x80\x01*\x7f\n" +
	"\x16BlockEncryptionKeyType\x12\x19\n" +
	"\x15ENCRYPTION_KEY_STATIC\x10\x00\x12\x1a\n" +
	"\x16ENCRYPTION_KEY_NODE_ID\x10\x01\x12\x16\n" +
	"\x12ENCRYPTION_KEY_KMS\x10\x02\x12\x16\n" +
	"\x12ENCRYPTION_KEY_TPM\x10\x03*Z\n" +
	"\x1bBlockEncryptionProviderType\x12\x1c\n" +
	"\x18ENCRYPTION_PROVIDER_NONE\x10\x00\x12\x1d\n" +
	"\x19ENCRYPTION_PROVIDER_LUKS2\x10\x01*\xb3\x01\n" +
	"\x13BlockFilesystemType\x12\x18\n" +
	"\x14FILESYSTEM_TYPE_NONE\x10\x00\x12\x17\n" +
	"\x13FILESYSTEM_TYPE_XFS\x10\x01\x12\x18\n" +
	"\x14FILESYSTEM_TYPE_VFAT\x10\x02\x12\x18\n" +
	"\x14FILESYSTEM_TYPE_EXT4\x10\x03\x12\x1b\n" +
	"\x17FILESYSTEM_TYPE_ISO9660\x10\x04\x12\x18\n" +
	"\x14FILESYSTEM_TYPE_SWAP\x10\x05*\xe3\x01\n" +
	"\x10BlockVolumePhase\x12\x18\n" +
	"\x14VOLUME_PHASE_WAITING\x10\x00\x12\x17\n" +
	"\x13VOLUME_PHASE_FAILED\x10\x01\x12\x18\n" +
	"\x14VOLUME_PHASE_MISSING\x10\x02\x12\x18\n" +
	"\x14VOLUME_PHASE_LOCATED\x10\x03\x12\x1c\n" +
	"\x18VOLUME_PHASE_PROVISIONED\x10\x04\x12\x19\n" +
	"\x15VOLUME_PHASE_PREPARED\x10\x05\x12\x16\n" +
	"\x12VOLUME_PHASE_READY\x10\x06\x12\x17\n" +
	"\x13VOLUME_PHASE_CLOSED\x10\a*\xa6\x01\n" +
	"\x0fBlockVolumeType\x12\x19\n" +
	"\x15VOLUME_TYPE_PARTITION\x10\x00\x12\x14\n" +
	"\x10VOLUME_TYPE_DISK\x10\x01\x12\x15\n" +
	"\x11VOLUME_TYPE_TMPFS\x10\x02\x12\x19\n" +
	"\x15VOLUME_TYPE_DIRECTORY\x10\x03\x12\x17\n" +
	"\x13VOLUME_TYPE_SYMLINK\x10\x04\x12\x17\n" +
	"\x13VOLUME_TYPE_OVERLAY\x10\x05*\x96\x01\n" +
	"\x13CriImageCacheStatus\x12\x1e\n" +
	"\x1aIMAGE_CACHE_STATUS_UNKNOWN\x10\x00\x12\x1f\n" +
	"\x1bIMAGE_CACHE_STATUS_DISABLED\x10\x01\x12 \n" +
	"\x1cIMAGE_CACHE_STATUS_PREPARING\x10\x02\x12\x1c\n" +
	"\x18IMAGE_CACHE_STATUS_READY\x10\x03*\xab\x01\n" +
	"\x17CriImageCacheCopyStatus\x12#\n" +
	"\x1fIMAGE_CACHE_COPY_STATUS_UNKNOWN\x10\x00\x12#\n" +
	"\x1fIMAGE_CACHE_COPY_STATUS_SKIPPED\x10\x01\x12#\n" +
	"\x1fIMAGE_CACHE_COPY_STATUS_PENDING\x10\x02\x12!\n" +
	"\x1dIMAGE_CACHE_COPY_STATUS_READY\x10\x03*S\n" +
	"\x11KubespanPeerState\x12\x16\n" +
	"\x12PEER_STATE_UNKNOWN\x10\x00\x12\x11\n" +
	"\rPEER_STATE_UP\x10\x01\x12\x13\n" +
	"\x0fPEER_STATE_DOWN\x10\x02*\x88\x01\n" +
	"\x12NetworkConfigLayer\x12\x12\n" +
	"\x0eCONFIG_DEFAULT\x10\x00\x12\x12\n" +
	"\x0eCONFIG_CMDLINE\x10\x01\x12\x13\n" +
	"\x0fCONFIG_PLATFORM\x10\x02\x12\x13\n" +
	"\x0fCONFIG_OPERATOR\x10\x03\x12 \n" +
	"\x1cCONFIG_MACHINE_CONFIGURATION\x10\x04*K\n" +
	"\x0fNetworkOperator\x12\x12\n" +
	"\x0eOPERATOR_DHCP4\x10\x00\x12\x12\n" +
	"\x0eOPERATOR_DHCP6\x10\x01\x12\x10\n" +
	"\fOPERATOR_VIP\x10\x02Bt\n" +
	"(dev.talos.api.resource.definitions.enumsZHgithub.com/siderolabs/talos/pkg/machinery/api/resource/definitions/enumsb\x06proto3"

var (
	file_resource_definitions_enums_enums_proto_rawDescOnce sync.Once
	file_resource_definitions_enums_enums_proto_rawDescData []byte
)

func file_resource_definitions_enums_enums_proto_rawDescGZIP() []byte {
	file_resource_definitions_enums_enums_proto_rawDescOnce.Do(func() {
		file_resource_definitions_enums_enums_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_resource_definitions_enums_enums_proto_rawDesc), len(file_resource_definitions_enums_enums_proto_rawDesc)))
	})
	return file_resource_definitions_enums_enums_proto_rawDescData
}

var file_resource_definitions_enums_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 46)
var file_resource_definitions_enums_enums_proto_goTypes = []any{
	(RuntimeMachineStage)(0),             // 0: talos.resource.definitions.enums.RuntimeMachineStage
	(RuntimeSELinuxState)(0),             // 1: talos.resource.definitions.enums.RuntimeSELinuxState
	(RuntimeFIPSState)(0),                // 2: talos.resource.definitions.enums.RuntimeFIPSState
	(MachineType)(0),                     // 3: talos.resource.definitions.enums.MachineType
	(NethelpersAddressFlag)(0),           // 4: talos.resource.definitions.enums.NethelpersAddressFlag
	(NethelpersAddressSortAlgorithm)(0),  // 5: talos.resource.definitions.enums.NethelpersAddressSortAlgorithm
	(NethelpersADLACPActive)(0),          // 6: talos.resource.definitions.enums.NethelpersADLACPActive
	(NethelpersADSelect)(0),              // 7: talos.resource.definitions.enums.NethelpersADSelect
	(NethelpersARPAllTargets)(0),         // 8: talos.resource.definitions.enums.NethelpersARPAllTargets
	(NethelpersARPValidate)(0),           // 9: talos.resource.definitions.enums.NethelpersARPValidate
	(NethelpersAutoHostnameKind)(0),      // 10: talos.resource.definitions.enums.NethelpersAutoHostnameKind
	(NethelpersBondMode)(0),              // 11: talos.resource.definitions.enums.NethelpersBondMode
	(NethelpersBondXmitHashPolicy)(0),    // 12: talos.resource.definitions.enums.NethelpersBondXmitHashPolicy
	(NethelpersClientIdentifier)(0),      // 13: talos.resource.definitions.enums.NethelpersClientIdentifier
	(NethelpersConntrackState)(0),        // 14: talos.resource.definitions.enums.NethelpersConntrackState
	(NethelpersDuplex)(0),                // 15: talos.resource.definitions.enums.NethelpersDuplex
	(NethelpersFailOverMAC)(0),           // 16: talos.resource.definitions.enums.NethelpersFailOverMAC
	(NethelpersFamily)(0),                // 17: talos.resource.definitions.enums.NethelpersFamily
	(NethelpersICMPType)(0),              // 18: talos.resource.definitions.enums.NethelpersICMPType
	(NethelpersLACPRate)(0),              // 19: talos.resource.definitions.enums.NethelpersLACPRate
	(NethelpersLinkType)(0),              // 20: talos.resource.definitions.enums.NethelpersLinkType
	(NethelpersMatchOperator)(0),         // 21: talos.resource.definitions.enums.NethelpersMatchOperator
	(NethelpersNfTablesChainHook)(0),     // 22: talos.resource.definitions.enums.NethelpersNfTablesChainHook
	(NethelpersNfTablesChainPriority)(0), // 23: talos.resource.definitions.enums.NethelpersNfTablesChainPriority
	(NethelpersNfTablesVerdict)(0),       // 24: talos.resource.definitions.enums.NethelpersNfTablesVerdict
	(NethelpersOperationalState)(0),      // 25: talos.resource.definitions.enums.NethelpersOperationalState
	(NethelpersPort)(0),                  // 26: talos.resource.definitions.enums.NethelpersPort
	(NethelpersPrimaryReselect)(0),       // 27: talos.resource.definitions.enums.NethelpersPrimaryReselect
	(NethelpersProtocol)(0),              // 28: talos.resource.definitions.enums.NethelpersProtocol
	(NethelpersRouteFlag)(0),             // 29: talos.resource.definitions.enums.NethelpersRouteFlag
	(NethelpersRouteProtocol)(0),         // 30: talos.resource.definitions.enums.NethelpersRouteProtocol
	(NethelpersRouteType)(0),             // 31: talos.resource.definitions.enums.NethelpersRouteType
	(NethelpersRoutingTable)(0),          // 32: talos.resource.definitions.enums.NethelpersRoutingTable
	(NethelpersScope)(0),                 // 33: talos.resource.definitions.enums.NethelpersScope
	(NethelpersVLANProtocol)(0),          // 34: talos.resource.definitions.enums.NethelpersVLANProtocol
	(NethelpersWOLMode)(0),               // 35: talos.resource.definitions.enums.NethelpersWOLMode
	(BlockEncryptionKeyType)(0),          // 36: talos.resource.definitions.enums.BlockEncryptionKeyType
	(BlockEncryptionProviderType)(0),     // 37: talos.resource.definitions.enums.BlockEncryptionProviderType
	(BlockFilesystemType)(0),             // 38: talos.resource.definitions.enums.BlockFilesystemType
	(BlockVolumePhase)(0),                // 39: talos.resource.definitions.enums.BlockVolumePhase
	(BlockVolumeType)(0),                 // 40: talos.resource.definitions.enums.BlockVolumeType
	(CriImageCacheStatus)(0),             // 41: talos.resource.definitions.enums.CriImageCacheStatus
	(CriImageCacheCopyStatus)(0),         // 42: talos.resource.definitions.enums.CriImageCacheCopyStatus
	(KubespanPeerState)(0),               // 43: talos.resource.definitions.enums.KubespanPeerState
	(NetworkConfigLayer)(0),              // 44: talos.resource.definitions.enums.NetworkConfigLayer
	(NetworkOperator)(0),                 // 45: talos.resource.definitions.enums.NetworkOperator
}
var file_resource_definitions_enums_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_resource_definitions_enums_enums_proto_init() }
func file_resource_definitions_enums_enums_proto_init() {
	if File_resource_definitions_enums_enums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_resource_definitions_enums_enums_proto_rawDesc), len(file_resource_definitions_enums_enums_proto_rawDesc)),
			NumEnums:      46,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_resource_definitions_enums_enums_proto_goTypes,
		DependencyIndexes: file_resource_definitions_enums_enums_proto_depIdxs,
		EnumInfos:         file_resource_definitions_enums_enums_proto_enumTypes,
	}.Build()
	File_resource_definitions_enums_enums_proto = out.File
	file_resource_definitions_enums_enums_proto_goTypes = nil
	file_resource_definitions_enums_enums_proto_depIdxs = nil
}
