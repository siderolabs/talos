// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.1
// source: resource/definitions/runtime/runtime.proto

package runtime

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"

	common "github.com/siderolabs/talos/pkg/machinery/api/common"
	enums "github.com/siderolabs/talos/pkg/machinery/api/resource/definitions/enums"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DevicesStatusSpec is the spec for devices status.
type DevicesStatusSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ready         bool                   `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DevicesStatusSpec) Reset() {
	*x = DevicesStatusSpec{}
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DevicesStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevicesStatusSpec) ProtoMessage() {}

func (x *DevicesStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevicesStatusSpec.ProtoReflect.Descriptor instead.
func (*DevicesStatusSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_runtime_runtime_proto_rawDescGZIP(), []int{0}
}

func (x *DevicesStatusSpec) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

// DiagnosticSpec is the spec for devices status.
type DiagnosticSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Details       []string               `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiagnosticSpec) Reset() {
	*x = DiagnosticSpec{}
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiagnosticSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiagnosticSpec) ProtoMessage() {}

func (x *DiagnosticSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiagnosticSpec.ProtoReflect.Descriptor instead.
func (*DiagnosticSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_runtime_runtime_proto_rawDescGZIP(), []int{1}
}

func (x *DiagnosticSpec) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DiagnosticSpec) GetDetails() []string {
	if x != nil {
		return x.Details
	}
	return nil
}

// EventSinkConfigSpec describes configuration of Talos event log streaming.
type EventSinkConfigSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoint      string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventSinkConfigSpec) Reset() {
	*x = EventSinkConfigSpec{}
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventSinkConfigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSinkConfigSpec) ProtoMessage() {}

func (x *EventSinkConfigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSinkConfigSpec.ProtoReflect.Descriptor instead.
func (*EventSinkConfigSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_runtime_runtime_proto_rawDescGZIP(), []int{2}
}

func (x *EventSinkConfigSpec) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

// ExtensionServiceConfigFile describes extensions service config files.
type ExtensionServiceConfigFile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	MountPath     string                 `protobuf:"bytes,2,opt,name=mount_path,json=mountPath,proto3" json:"mount_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtensionServiceConfigFile) Reset() {
	*x = ExtensionServiceConfigFile{}
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtensionServiceConfigFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtensionServiceConfigFile) ProtoMessage() {}

func (x *ExtensionServiceConfigFile) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtensionServiceConfigFile.ProtoReflect.Descriptor instead.
func (*ExtensionServiceConfigFile) Descriptor() ([]byte, []int) {
	return file_resource_definitions_runtime_runtime_proto_rawDescGZIP(), []int{3}
}

func (x *ExtensionServiceConfigFile) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ExtensionServiceConfigFile) GetMountPath() string {
	if x != nil {
		return x.MountPath
	}
	return ""
}

// ExtensionServiceConfigSpec describes status of rendered extensions service config files.
type ExtensionServiceConfigSpec struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Files         []*ExtensionServiceConfigFile `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	Environment   []string                      `protobuf:"bytes,2,rep,name=environment,proto3" json:"environment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtensionServiceConfigSpec) Reset() {
	*x = ExtensionServiceConfigSpec{}
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtensionServiceConfigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtensionServiceConfigSpec) ProtoMessage() {}

func (x *ExtensionServiceConfigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtensionServiceConfigSpec.ProtoReflect.Descriptor instead.
func (*ExtensionServiceConfigSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_runtime_runtime_proto_rawDescGZIP(), []int{4}
}

func (x *ExtensionServiceConfigSpec) GetFiles() []*ExtensionServiceConfigFile {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *ExtensionServiceConfigSpec) GetEnvironment() []string {
	if x != nil {
		return x.Environment
	}
	return nil
}

// ExtensionServiceConfigStatusSpec describes status of rendered extensions service config files.
type ExtensionServiceConfigStatusSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpecVersion   string                 `protobuf:"bytes,1,opt,name=spec_version,json=specVersion,proto3" json:"spec_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtensionServiceConfigStatusSpec) Reset() {
	*x = ExtensionServiceConfigStatusSpec{}
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtensionServiceConfigStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtensionServiceConfigStatusSpec) ProtoMessage() {}

func (x *ExtensionServiceConfigStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtensionServiceConfigStatusSpec.ProtoReflect.Descriptor instead.
func (*ExtensionServiceConfigStatusSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_runtime_runtime_proto_rawDescGZIP(), []int{5}
}

func (x *ExtensionServiceConfigStatusSpec) GetSpecVersion() string {
	if x != nil {
		return x.SpecVersion
	}
	return ""
}

// KernelModuleSpecSpec describes Linux kernel module to load.
type KernelModuleSpecSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Parameters    []string               `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KernelModuleSpecSpec) Reset() {
	*x = KernelModuleSpecSpec{}
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KernelModuleSpecSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KernelModuleSpecSpec) ProtoMessage() {}

func (x *KernelModuleSpecSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KernelModuleSpecSpec.ProtoReflect.Descriptor instead.
func (*KernelModuleSpecSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_runtime_runtime_proto_rawDescGZIP(), []int{6}
}

func (x *KernelModuleSpecSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KernelModuleSpecSpec) GetParameters() []string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// KernelParamSpecSpec describes status of the defined sysctls.
type KernelParamSpecSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	IgnoreErrors  bool                   `protobuf:"varint,2,opt,name=ignore_errors,json=ignoreErrors,proto3" json:"ignore_errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KernelParamSpecSpec) Reset() {
	*x = KernelParamSpecSpec{}
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KernelParamSpecSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KernelParamSpecSpec) ProtoMessage() {}

func (x *KernelParamSpecSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KernelParamSpecSpec.ProtoReflect.Descriptor instead.
func (*KernelParamSpecSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_runtime_runtime_proto_rawDescGZIP(), []int{7}
}

func (x *KernelParamSpecSpec) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *KernelParamSpecSpec) GetIgnoreErrors() bool {
	if x != nil {
		return x.IgnoreErrors
	}
	return false
}

// KernelParamStatusSpec describes status of the defined sysctls.
type KernelParamStatusSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Current       string                 `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Default       string                 `protobuf:"bytes,2,opt,name=default,proto3" json:"default,omitempty"`
	Unsupported   bool                   `protobuf:"varint,3,opt,name=unsupported,proto3" json:"unsupported,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KernelParamStatusSpec) Reset() {
	*x = KernelParamStatusSpec{}
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KernelParamStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KernelParamStatusSpec) ProtoMessage() {}

func (x *KernelParamStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KernelParamStatusSpec.ProtoReflect.Descriptor instead.
func (*KernelParamStatusSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_runtime_runtime_proto_rawDescGZIP(), []int{8}
}

func (x *KernelParamStatusSpec) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *KernelParamStatusSpec) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

func (x *KernelParamStatusSpec) GetUnsupported() bool {
	if x != nil {
		return x.Unsupported
	}
	return false
}

// KmsgLogConfigSpec describes configuration for kmsg log streaming.
type KmsgLogConfigSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Destinations  []*common.URL          `protobuf:"bytes,1,rep,name=destinations,proto3" json:"destinations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KmsgLogConfigSpec) Reset() {
	*x = KmsgLogConfigSpec{}
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KmsgLogConfigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KmsgLogConfigSpec) ProtoMessage() {}

func (x *KmsgLogConfigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KmsgLogConfigSpec.ProtoReflect.Descriptor instead.
func (*KmsgLogConfigSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_runtime_runtime_proto_rawDescGZIP(), []int{9}
}

func (x *KmsgLogConfigSpec) GetDestinations() []*common.URL {
	if x != nil {
		return x.Destinations
	}
	return nil
}

// MachineStatusSpec describes status of the defined sysctls.
type MachineStatusSpec struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Stage         enums.RuntimeMachineStage `protobuf:"varint,1,opt,name=stage,proto3,enum=talos.resource.definitions.enums.RuntimeMachineStage" json:"stage,omitempty"`
	Status        *MachineStatusStatus      `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineStatusSpec) Reset() {
	*x = MachineStatusSpec{}
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineStatusSpec) ProtoMessage() {}

func (x *MachineStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineStatusSpec.ProtoReflect.Descriptor instead.
func (*MachineStatusSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_runtime_runtime_proto_rawDescGZIP(), []int{10}
}

func (x *MachineStatusSpec) GetStage() enums.RuntimeMachineStage {
	if x != nil {
		return x.Stage
	}
	return enums.RuntimeMachineStage(0)
}

func (x *MachineStatusSpec) GetStatus() *MachineStatusStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// MachineStatusStatus describes machine current status at the stage.
type MachineStatusStatus struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Ready           bool                   `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"`
	UnmetConditions []*UnmetCondition      `protobuf:"bytes,2,rep,name=unmet_conditions,json=unmetConditions,proto3" json:"unmet_conditions,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MachineStatusStatus) Reset() {
	*x = MachineStatusStatus{}
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineStatusStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineStatusStatus) ProtoMessage() {}

func (x *MachineStatusStatus) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineStatusStatus.ProtoReflect.Descriptor instead.
func (*MachineStatusStatus) Descriptor() ([]byte, []int) {
	return file_resource_definitions_runtime_runtime_proto_rawDescGZIP(), []int{11}
}

func (x *MachineStatusStatus) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *MachineStatusStatus) GetUnmetConditions() []*UnmetCondition {
	if x != nil {
		return x.UnmetConditions
	}
	return nil
}

// MaintenanceServiceConfigSpec describes configuration for maintenance service API.
type MaintenanceServiceConfigSpec struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ListenAddress      string                 `protobuf:"bytes,1,opt,name=listen_address,json=listenAddress,proto3" json:"listen_address,omitempty"`
	ReachableAddresses []*common.NetIP        `protobuf:"bytes,2,rep,name=reachable_addresses,json=reachableAddresses,proto3" json:"reachable_addresses,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *MaintenanceServiceConfigSpec) Reset() {
	*x = MaintenanceServiceConfigSpec{}
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaintenanceServiceConfigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintenanceServiceConfigSpec) ProtoMessage() {}

func (x *MaintenanceServiceConfigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintenanceServiceConfigSpec.ProtoReflect.Descriptor instead.
func (*MaintenanceServiceConfigSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_runtime_runtime_proto_rawDescGZIP(), []int{12}
}

func (x *MaintenanceServiceConfigSpec) GetListenAddress() string {
	if x != nil {
		return x.ListenAddress
	}
	return ""
}

func (x *MaintenanceServiceConfigSpec) GetReachableAddresses() []*common.NetIP {
	if x != nil {
		return x.ReachableAddresses
	}
	return nil
}

// MetaKeySpec describes status of the defined sysctls.
type MetaKeySpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetaKeySpec) Reset() {
	*x = MetaKeySpec{}
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetaKeySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaKeySpec) ProtoMessage() {}

func (x *MetaKeySpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaKeySpec.ProtoReflect.Descriptor instead.
func (*MetaKeySpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_runtime_runtime_proto_rawDescGZIP(), []int{13}
}

func (x *MetaKeySpec) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// MetaLoadedSpec is the spec for meta loaded. The Done field is always true when resource exists.
type MetaLoadedSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Done          bool                   `protobuf:"varint,1,opt,name=done,proto3" json:"done,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetaLoadedSpec) Reset() {
	*x = MetaLoadedSpec{}
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetaLoadedSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaLoadedSpec) ProtoMessage() {}

func (x *MetaLoadedSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaLoadedSpec.ProtoReflect.Descriptor instead.
func (*MetaLoadedSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_runtime_runtime_proto_rawDescGZIP(), []int{14}
}

func (x *MetaLoadedSpec) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

// MountStatusSpec describes status of the defined sysctls.
type MountStatusSpec struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Source              string                 `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Target              string                 `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	FilesystemType      string                 `protobuf:"bytes,3,opt,name=filesystem_type,json=filesystemType,proto3" json:"filesystem_type,omitempty"`
	Options             []string               `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty"`
	Encrypted           bool                   `protobuf:"varint,5,opt,name=encrypted,proto3" json:"encrypted,omitempty"`
	EncryptionProviders []string               `protobuf:"bytes,6,rep,name=encryption_providers,json=encryptionProviders,proto3" json:"encryption_providers,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *MountStatusSpec) Reset() {
	*x = MountStatusSpec{}
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MountStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountStatusSpec) ProtoMessage() {}

func (x *MountStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountStatusSpec.ProtoReflect.Descriptor instead.
func (*MountStatusSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_runtime_runtime_proto_rawDescGZIP(), []int{15}
}

func (x *MountStatusSpec) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *MountStatusSpec) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *MountStatusSpec) GetFilesystemType() string {
	if x != nil {
		return x.FilesystemType
	}
	return ""
}

func (x *MountStatusSpec) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *MountStatusSpec) GetEncrypted() bool {
	if x != nil {
		return x.Encrypted
	}
	return false
}

func (x *MountStatusSpec) GetEncryptionProviders() []string {
	if x != nil {
		return x.EncryptionProviders
	}
	return nil
}

// PlatformMetadataSpec describes platform metadata properties.
type PlatformMetadataSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Platform      string                 `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	Hostname      string                 `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Region        string                 `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	Zone          string                 `protobuf:"bytes,4,opt,name=zone,proto3" json:"zone,omitempty"`
	InstanceType  string                 `protobuf:"bytes,5,opt,name=instance_type,json=instanceType,proto3" json:"instance_type,omitempty"`
	InstanceId    string                 `protobuf:"bytes,6,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	ProviderId    string                 `protobuf:"bytes,7,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"`
	Spot          bool                   `protobuf:"varint,8,opt,name=spot,proto3" json:"spot,omitempty"`
	InternalDns   string                 `protobuf:"bytes,9,opt,name=internal_dns,json=internalDns,proto3" json:"internal_dns,omitempty"`
	ExternalDns   string                 `protobuf:"bytes,10,opt,name=external_dns,json=externalDns,proto3" json:"external_dns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlatformMetadataSpec) Reset() {
	*x = PlatformMetadataSpec{}
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlatformMetadataSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformMetadataSpec) ProtoMessage() {}

func (x *PlatformMetadataSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformMetadataSpec.ProtoReflect.Descriptor instead.
func (*PlatformMetadataSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_runtime_runtime_proto_rawDescGZIP(), []int{16}
}

func (x *PlatformMetadataSpec) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *PlatformMetadataSpec) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *PlatformMetadataSpec) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *PlatformMetadataSpec) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *PlatformMetadataSpec) GetInstanceType() string {
	if x != nil {
		return x.InstanceType
	}
	return ""
}

func (x *PlatformMetadataSpec) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *PlatformMetadataSpec) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

func (x *PlatformMetadataSpec) GetSpot() bool {
	if x != nil {
		return x.Spot
	}
	return false
}

func (x *PlatformMetadataSpec) GetInternalDns() string {
	if x != nil {
		return x.InternalDns
	}
	return ""
}

func (x *PlatformMetadataSpec) GetExternalDns() string {
	if x != nil {
		return x.ExternalDns
	}
	return ""
}

// SecurityStateSpec describes the security state resource properties.
type SecurityStateSpec struct {
	state                    protoimpl.MessageState    `protogen:"open.v1"`
	SecureBoot               bool                      `protobuf:"varint,1,opt,name=secure_boot,json=secureBoot,proto3" json:"secure_boot,omitempty"`
	UkiSigningKeyFingerprint string                    `protobuf:"bytes,2,opt,name=uki_signing_key_fingerprint,json=ukiSigningKeyFingerprint,proto3" json:"uki_signing_key_fingerprint,omitempty"`
	PcrSigningKeyFingerprint string                    `protobuf:"bytes,3,opt,name=pcr_signing_key_fingerprint,json=pcrSigningKeyFingerprint,proto3" json:"pcr_signing_key_fingerprint,omitempty"`
	SeLinuxState             enums.RuntimeSELinuxState `protobuf:"varint,4,opt,name=se_linux_state,json=seLinuxState,proto3,enum=talos.resource.definitions.enums.RuntimeSELinuxState" json:"se_linux_state,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *SecurityStateSpec) Reset() {
	*x = SecurityStateSpec{}
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityStateSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityStateSpec) ProtoMessage() {}

func (x *SecurityStateSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityStateSpec.ProtoReflect.Descriptor instead.
func (*SecurityStateSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_runtime_runtime_proto_rawDescGZIP(), []int{17}
}

func (x *SecurityStateSpec) GetSecureBoot() bool {
	if x != nil {
		return x.SecureBoot
	}
	return false
}

func (x *SecurityStateSpec) GetUkiSigningKeyFingerprint() string {
	if x != nil {
		return x.UkiSigningKeyFingerprint
	}
	return ""
}

func (x *SecurityStateSpec) GetPcrSigningKeyFingerprint() string {
	if x != nil {
		return x.PcrSigningKeyFingerprint
	}
	return ""
}

func (x *SecurityStateSpec) GetSeLinuxState() enums.RuntimeSELinuxState {
	if x != nil {
		return x.SeLinuxState
	}
	return enums.RuntimeSELinuxState(0)
}

// UniqueMachineTokenSpec is the spec for the machine unique token. Token can be empty if machine wasn't assigned any.
type UniqueMachineTokenSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UniqueMachineTokenSpec) Reset() {
	*x = UniqueMachineTokenSpec{}
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UniqueMachineTokenSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniqueMachineTokenSpec) ProtoMessage() {}

func (x *UniqueMachineTokenSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniqueMachineTokenSpec.ProtoReflect.Descriptor instead.
func (*UniqueMachineTokenSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_runtime_runtime_proto_rawDescGZIP(), []int{18}
}

func (x *UniqueMachineTokenSpec) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// UnmetCondition is a failure which prevents machine from being ready at the stage.
type UnmetCondition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnmetCondition) Reset() {
	*x = UnmetCondition{}
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnmetCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmetCondition) ProtoMessage() {}

func (x *UnmetCondition) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmetCondition.ProtoReflect.Descriptor instead.
func (*UnmetCondition) Descriptor() ([]byte, []int) {
	return file_resource_definitions_runtime_runtime_proto_rawDescGZIP(), []int{19}
}

func (x *UnmetCondition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UnmetCondition) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// WatchdogTimerConfigSpec describes configuration of watchdog timer.
type WatchdogTimerConfigSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Device        string                 `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	Timeout       *durationpb.Duration   `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchdogTimerConfigSpec) Reset() {
	*x = WatchdogTimerConfigSpec{}
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchdogTimerConfigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchdogTimerConfigSpec) ProtoMessage() {}

func (x *WatchdogTimerConfigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchdogTimerConfigSpec.ProtoReflect.Descriptor instead.
func (*WatchdogTimerConfigSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_runtime_runtime_proto_rawDescGZIP(), []int{20}
}

func (x *WatchdogTimerConfigSpec) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *WatchdogTimerConfigSpec) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

// WatchdogTimerStatusSpec describes configuration of watchdog timer.
type WatchdogTimerStatusSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Device        string                 `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	Timeout       *durationpb.Duration   `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	FeedInterval  *durationpb.Duration   `protobuf:"bytes,3,opt,name=feed_interval,json=feedInterval,proto3" json:"feed_interval,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchdogTimerStatusSpec) Reset() {
	*x = WatchdogTimerStatusSpec{}
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchdogTimerStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchdogTimerStatusSpec) ProtoMessage() {}

func (x *WatchdogTimerStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_runtime_runtime_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchdogTimerStatusSpec.ProtoReflect.Descriptor instead.
func (*WatchdogTimerStatusSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_runtime_runtime_proto_rawDescGZIP(), []int{21}
}

func (x *WatchdogTimerStatusSpec) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *WatchdogTimerStatusSpec) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *WatchdogTimerStatusSpec) GetFeedInterval() *durationpb.Duration {
	if x != nil {
		return x.FeedInterval
	}
	return nil
}

var File_resource_definitions_runtime_runtime_proto protoreflect.FileDescriptor

var file_resource_definitions_runtime_runtime_proto_rawDesc = string([]byte{
	0x0a, 0x2a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x74, 0x61,
	0x6c, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x65, 0x6e, 0x75, 0x6d,
	0x73, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x29, 0x0a,
	0x11, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x22, 0x44, 0x0a, 0x0e, 0x44, 0x69, 0x61, 0x67,
	0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x31,
	0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x22, 0x55, 0x0a, 0x1a, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x22, 0x94, 0x01, 0x0a, 0x1a, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x53, 0x70, 0x65, 0x63, 0x12, 0x54, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x74, 0x61, 0x6c, 0x6f, 0x73, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0x45, 0x0a, 0x20, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4a, 0x0a, 0x14, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x22, 0x50, 0x0a, 0x13, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x53, 0x70, 0x65, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x22, 0x6d, 0x0a, 0x15, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x70, 0x65, 0x63, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x6e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x75, 0x6e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x22, 0x44, 0x0a, 0x11, 0x4b, 0x6d, 0x73, 0x67, 0x4c, 0x6f, 0x67, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x53, 0x70, 0x65, 0x63, 0x12, 0x2f, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x52, 0x4c, 0x52, 0x0c, 0x64, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x11, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x4b, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35,
	0x2e, 0x74, 0x61, 0x6c, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x75, 0x6d,
	0x73, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x4f, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x74,
	0x61, 0x6c, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8a, 0x01,
	0x0a, 0x13, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x12, 0x5d, 0x0a, 0x10, 0x75,
	0x6e, 0x6d, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x74, 0x61, 0x6c, 0x6f, 0x73, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x55, 0x6e, 0x6d, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x75, 0x6e, 0x6d, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x1c, 0x4d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x70, 0x65, 0x63, 0x12, 0x25, 0x0a, 0x0e, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x3e, 0x0a, 0x13, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x65, 0x74, 0x49, 0x50, 0x52, 0x12,
	0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x22, 0x23, 0x0a, 0x0b, 0x4d, 0x65, 0x74, 0x61, 0x4b, 0x65, 0x79, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x24, 0x0a, 0x0e, 0x4d, 0x65, 0x74, 0x61, 0x4c,
	0x6f, 0x61, 0x64, 0x65, 0x64, 0x53, 0x70, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x22, 0xd5, 0x01,
	0x0a, 0x0f, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x65, 0x64, 0x12, 0x31, 0x0a, 0x14, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x13, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x22, 0xbb, 0x02, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f,
	0x6e, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x70, 0x6f,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x70, 0x6f, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x6e, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x6e, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x6e, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x44, 0x6e, 0x73, 0x22, 0x8f, 0x02, 0x0a, 0x11, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x65, 0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x42, 0x6f, 0x6f, 0x74, 0x12, 0x3d, 0x0a, 0x1b, 0x75, 0x6b,
	0x69, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x66, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x18, 0x75, 0x6b, 0x69, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x46, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x1b, 0x70, 0x63, 0x72,
	0x5f, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x66, 0x69, 0x6e,
	0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18,
	0x70, 0x63, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x46, 0x69, 0x6e,
	0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x5b, 0x0a, 0x0e, 0x73, 0x65, 0x5f, 0x6c,
	0x69, 0x6e, 0x75, 0x78, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x35, 0x2e, 0x74, 0x61, 0x6c, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e,
	0x75, 0x6d, 0x73, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x45, 0x4c, 0x69, 0x6e,
	0x75, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x73, 0x65, 0x4c, 0x69, 0x6e, 0x75, 0x78,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x2e, 0x0a, 0x16, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3c, 0x0a, 0x0e, 0x55, 0x6e, 0x6d, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x22, 0x66, 0x0a, 0x17, 0x57, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x17,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x12, 0x3e, 0x0a, 0x0d, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x42, 0x78, 0x0a, 0x2a, 0x64, 0x65, 0x76, 0x2e, 0x74, 0x61, 0x6c, 0x6f,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x5a, 0x4a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x69, 0x64, 0x65, 0x72, 0x6f, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x74, 0x61, 0x6c, 0x6f, 0x73, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_resource_definitions_runtime_runtime_proto_rawDescOnce sync.Once
	file_resource_definitions_runtime_runtime_proto_rawDescData []byte
)

func file_resource_definitions_runtime_runtime_proto_rawDescGZIP() []byte {
	file_resource_definitions_runtime_runtime_proto_rawDescOnce.Do(func() {
		file_resource_definitions_runtime_runtime_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_resource_definitions_runtime_runtime_proto_rawDesc), len(file_resource_definitions_runtime_runtime_proto_rawDesc)))
	})
	return file_resource_definitions_runtime_runtime_proto_rawDescData
}

var file_resource_definitions_runtime_runtime_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_resource_definitions_runtime_runtime_proto_goTypes = []any{
	(*DevicesStatusSpec)(nil),                // 0: talos.resource.definitions.runtime.DevicesStatusSpec
	(*DiagnosticSpec)(nil),                   // 1: talos.resource.definitions.runtime.DiagnosticSpec
	(*EventSinkConfigSpec)(nil),              // 2: talos.resource.definitions.runtime.EventSinkConfigSpec
	(*ExtensionServiceConfigFile)(nil),       // 3: talos.resource.definitions.runtime.ExtensionServiceConfigFile
	(*ExtensionServiceConfigSpec)(nil),       // 4: talos.resource.definitions.runtime.ExtensionServiceConfigSpec
	(*ExtensionServiceConfigStatusSpec)(nil), // 5: talos.resource.definitions.runtime.ExtensionServiceConfigStatusSpec
	(*KernelModuleSpecSpec)(nil),             // 6: talos.resource.definitions.runtime.KernelModuleSpecSpec
	(*KernelParamSpecSpec)(nil),              // 7: talos.resource.definitions.runtime.KernelParamSpecSpec
	(*KernelParamStatusSpec)(nil),            // 8: talos.resource.definitions.runtime.KernelParamStatusSpec
	(*KmsgLogConfigSpec)(nil),                // 9: talos.resource.definitions.runtime.KmsgLogConfigSpec
	(*MachineStatusSpec)(nil),                // 10: talos.resource.definitions.runtime.MachineStatusSpec
	(*MachineStatusStatus)(nil),              // 11: talos.resource.definitions.runtime.MachineStatusStatus
	(*MaintenanceServiceConfigSpec)(nil),     // 12: talos.resource.definitions.runtime.MaintenanceServiceConfigSpec
	(*MetaKeySpec)(nil),                      // 13: talos.resource.definitions.runtime.MetaKeySpec
	(*MetaLoadedSpec)(nil),                   // 14: talos.resource.definitions.runtime.MetaLoadedSpec
	(*MountStatusSpec)(nil),                  // 15: talos.resource.definitions.runtime.MountStatusSpec
	(*PlatformMetadataSpec)(nil),             // 16: talos.resource.definitions.runtime.PlatformMetadataSpec
	(*SecurityStateSpec)(nil),                // 17: talos.resource.definitions.runtime.SecurityStateSpec
	(*UniqueMachineTokenSpec)(nil),           // 18: talos.resource.definitions.runtime.UniqueMachineTokenSpec
	(*UnmetCondition)(nil),                   // 19: talos.resource.definitions.runtime.UnmetCondition
	(*WatchdogTimerConfigSpec)(nil),          // 20: talos.resource.definitions.runtime.WatchdogTimerConfigSpec
	(*WatchdogTimerStatusSpec)(nil),          // 21: talos.resource.definitions.runtime.WatchdogTimerStatusSpec
	(*common.URL)(nil),                       // 22: common.URL
	(enums.RuntimeMachineStage)(0),           // 23: talos.resource.definitions.enums.RuntimeMachineStage
	(*common.NetIP)(nil),                     // 24: common.NetIP
	(enums.RuntimeSELinuxState)(0),           // 25: talos.resource.definitions.enums.RuntimeSELinuxState
	(*durationpb.Duration)(nil),              // 26: google.protobuf.Duration
}
var file_resource_definitions_runtime_runtime_proto_depIdxs = []int32{
	3,  // 0: talos.resource.definitions.runtime.ExtensionServiceConfigSpec.files:type_name -> talos.resource.definitions.runtime.ExtensionServiceConfigFile
	22, // 1: talos.resource.definitions.runtime.KmsgLogConfigSpec.destinations:type_name -> common.URL
	23, // 2: talos.resource.definitions.runtime.MachineStatusSpec.stage:type_name -> talos.resource.definitions.enums.RuntimeMachineStage
	11, // 3: talos.resource.definitions.runtime.MachineStatusSpec.status:type_name -> talos.resource.definitions.runtime.MachineStatusStatus
	19, // 4: talos.resource.definitions.runtime.MachineStatusStatus.unmet_conditions:type_name -> talos.resource.definitions.runtime.UnmetCondition
	24, // 5: talos.resource.definitions.runtime.MaintenanceServiceConfigSpec.reachable_addresses:type_name -> common.NetIP
	25, // 6: talos.resource.definitions.runtime.SecurityStateSpec.se_linux_state:type_name -> talos.resource.definitions.enums.RuntimeSELinuxState
	26, // 7: talos.resource.definitions.runtime.WatchdogTimerConfigSpec.timeout:type_name -> google.protobuf.Duration
	26, // 8: talos.resource.definitions.runtime.WatchdogTimerStatusSpec.timeout:type_name -> google.protobuf.Duration
	26, // 9: talos.resource.definitions.runtime.WatchdogTimerStatusSpec.feed_interval:type_name -> google.protobuf.Duration
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_resource_definitions_runtime_runtime_proto_init() }
func file_resource_definitions_runtime_runtime_proto_init() {
	if File_resource_definitions_runtime_runtime_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_resource_definitions_runtime_runtime_proto_rawDesc), len(file_resource_definitions_runtime_runtime_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_resource_definitions_runtime_runtime_proto_goTypes,
		DependencyIndexes: file_resource_definitions_runtime_runtime_proto_depIdxs,
		MessageInfos:      file_resource_definitions_runtime_runtime_proto_msgTypes,
	}.Build()
	File_resource_definitions_runtime_runtime_proto = out.File
	file_resource_definitions_runtime_runtime_proto_goTypes = nil
	file_resource_definitions_runtime_runtime_proto_depIdxs = nil
}
