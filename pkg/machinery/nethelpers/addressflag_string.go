// Code generated by "stringer -type=AddressFlag -linecomment"; DO NOT EDIT.

package nethelpers

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AddressTemporary-1]
	_ = x[AddressNoDAD-2]
	_ = x[AddressOptimistic-4]
	_ = x[AddressDADFailed-8]
	_ = x[AddressHome-16]
	_ = x[AddressDeprecated-32]
	_ = x[AddressTentative-64]
	_ = x[AddressPermanent-128]
	_ = x[AddressManagementTemp-256]
	_ = x[AddressNoPrefixRoute-512]
	_ = x[AddressMCAutoJoin-1024]
	_ = x[AddressStablePrivacy-2048]
}

const _AddressFlag_name = "temporarynodadoptimisticdadfailedhomeaddressdeprecatedtentativepermanentmngmtmpaddrnoprefixroutemcautojoinstableprivacy"

var _AddressFlag_map = map[AddressFlag]string{
	1:    _AddressFlag_name[0:9],
	2:    _AddressFlag_name[9:14],
	4:    _AddressFlag_name[14:24],
	8:    _AddressFlag_name[24:33],
	16:   _AddressFlag_name[33:44],
	32:   _AddressFlag_name[44:54],
	64:   _AddressFlag_name[54:63],
	128:  _AddressFlag_name[63:72],
	256:  _AddressFlag_name[72:83],
	512:  _AddressFlag_name[83:96],
	1024: _AddressFlag_name[96:106],
	2048: _AddressFlag_name[106:119],
}

func (i AddressFlag) String() string {
	if str, ok := _AddressFlag_map[i]; ok {
		return str
	}
	return "AddressFlag(" + strconv.FormatInt(int64(i), 10) + ")"
}
