# commit to be tagged for new release
commit = "HEAD"

project_name = "Talos"
github_repo = "siderolabs/talos"
match_deps = "^github.com/((talos-systems|siderolabs)/[a-zA-Z0-9-]+)$"
ignore_deps = ["github.com/coredns/coredns"]

# previous release
previous = "v1.8.0"

pre_release = true

preface = """
"""

[notes]
    [notes.updates]
        title = "Component Updates"
        description = """\
* Linux: 6.6.60
* containerd: 2.0.0
* Flannel: 0.26.0
* Kubernetes: 1.32.0-beta.0
* runc: 1.2.1

Talos is built with Go 1.23.3.
"""

    [notes.drm]
        title = "Direct Rendering Manager (DRM)"
        description = """\
Starting with Talos 1.9, the `i915` and `amdgpu` DRM drivers will be dropped from the Talos squashfs.
There will be new system extensions named `i915` and `amdgpu` that would contain both the drivers and firmware packaged together.
Upgrades via Image Factory will automatically include the new extensions if previously `i915-ucode` or `amdgpu-firmware` were used.
"""

    [notes.usernamespaces]
        title = "User Namespaces"
        description = """\
Talos Linux now supports running Kubernetes pods with user namespaces enabled.
Refer to the [documentation](https://www.talos.dev/v1.9/kubernetes-guides/configuration/usernamespace/) for more information.
"""

    [notes.apparmor]
        title = "AppArmor"
        description = """\
Talos Linux starting with v1.9 will ship with SELinux LSM enabled by default.
If you need to use AppArmor LSM add the following to the machine configuration:

```yaml
machine:
  install:
     extraKernelArgs:
      - -selinux
      - lsm=lockdown,capability,yama,apparmor,bpf
      - apparmor=1
```
"""

    [notes.auditd]
        title = "Auditd"
        description = """\
Talos Linux now starts a auditd service by default.
Logs can be read with `talosctl logs auditd`.
"""

    [notes.cgroups]
        title = "`talosctl cgroups`"
        description = """\
The `talosctl cgroups` command has been added to the `talosctl` tool.
This command allows you to view the cgroup resource consumption and limits for a machine, e.g.
`talosctl cgroups --preset memory`.
"""

    [notes.udevd]
        title = "udevd"
        description = """\
Talos previously used `eudev` to provide `udevd`, now it uses `systemd-udevd` instead.
"""

    [notes.registry-mirrors]
        title = "Registry Mirrors"
        description = """\
In versions before Talos 1.9, there was a discrepancy between the way Talos itself and CRI plugin resolves registry mirrors:
Talos will never fall back to the default registry if endpoints are configured, while CRI plugin will.

> Note: Talos Linux pulls images for the `installer`, `kubelet`, `etcd`, while all workload images are pulled by the CRI plugin.

In Talos 1.9 this was fixed, so that by default an upstream registry is used as a fallback in all cases, while new registry mirror
configuration option `.skipFallback` can be used to disable this behavior both for Talos and CRI plugin.
"""

    [notes.device-selectors]
        title = "Device Selectors"
        description = """\
Talos now supports matching on permanent hardware (MAC) address of the network interfaces.
This is specifically useful to match bond members, as they change their hardware addresses when they become part of the bond.
"""

    [notes.talosctl-disk]
        title = "talosctl disks"
        description = """\
The command `talosctl disks` was removed, please use `talosctl get disks`, `talosctl get systemdisk`, and `talosctl get blockdevices` instead.
"""

    [notes.talosctl-wipe]
        title = "talosctl wipe"
        description = """\
The new command `talosctl wipe disk` allows to wipe a disk or a partition which is not used as a volume.
"""

[make_deps]

    [make_deps.tools]
        variable = "TOOLS"
        repository = "github.com/siderolabs/tools"

    [make_deps.pkgs]
        variable = "PKGS"
        repository = "github.com/siderolabs/pkgs"

    [make_deps.extras]
        variable = "EXTRAS"
        repository = "github.com/siderolabs/extras"
