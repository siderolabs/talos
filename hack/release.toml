# commit to be tagged for new release
commit = "HEAD"

project_name = "Talos"
github_repo = "siderolabs/talos"
match_deps = "^github.com/((talos-systems|siderolabs)/[a-zA-Z0-9-]+)$"
ignore_deps = ["github.com/coredns/coredns"]

# previous release
previous = "v1.9.0"

pre_release = true

preface = """
"""

[notes]
    [notes.updates]
        title = "Component Updates"
        description = """\
* Linux: 6.12.24
* CNI plugins: 1.6.2
* runc: 1.2.6
* containerd: 2.0.5
* etcd: 3.5.20
* Flannel: 0.26.7
* Kubernetes: 1.33.0
* CoreDNS: 1.12.1

Talos is built with Go 1.24.2.
"""

    [notes.driver-rebind]
        title = "Driver Rebind"
        description = """\
Talos 1.10 now supports a new machine config document named `PCIDriverRebindConfig` that allows rebinding the driver of a PCI device to a different target driver.
See the [documentation](https://www.talos.dev/v1.10/reference/configuration/hardware/pcidriverrebindconfig/) for more information.
"""

    [notes.cgroupsv1]
        title = "cgroups v1"
        description = """\
Talos Linux no longer supports `cgroupsv1` when running in non-container mode.
The kernel argument `talos.unified_cgroup_hierarchy` is now ignored.
"""

    [notes.auditd]
        title = "auditd"
        description = """\
Kernel parameter `talos.auditd.disabled=1` can be used to disable Talos built-in `auditd` service.
"""

    [notes.kube-apiserver-authorization-config]
        title = "kube-apiserver Authorization Config"
        description = """\
When using `.cluster.apiServer.authorizationConfig` the user provided order for the authorizers is honoured and `Node` and `RBAC` authorizers are always added to the end if not explicitly specified.

Eg: If user provides only `Webhook` authorizer, the final order will be `Webhook`, `Node`, `RBAC`.

To provide a specific order for `Node` or `RBAC` explicitly, user can provide the authorizer in the order they want.

Eg:

```yaml
cluster:
  apiServer:
    authorizationConfig:
      - type: Node
        name: Node
      - type: Webhook
        name: Webhook
        webhook:
          connectionInfo:
            type: InClusterConfig
        ...
      - type: RBAC
        name: rbac
```

Usage of `authorization-mode` CLI argument will not support this form of customization.
"""

    [notes.iscsi-initiator-iqn]
        title = "iSCSI Initiator"
        description = """\
Talos now generates `/etc/iscsi/initiatorname.iscsi` file based on the node identity which is tied to the lifecycle of the node.
If using `iscsi-tools` extension, starting with Talos 1.10 would have a more deterministic IQN for the initiator node.
Make sure to update any iSCSI targets to use the new initiator IQN.

The iqn can be read by `talosctl read /etc/iscsi/initiatorname.iscsi`
"""

    [notes.nvme-nqn]
        title = "NVMe NQN"
        description = """\
Talos now generates `/etc/nvme/hostnqn` and `/etc/nvme/hostid` files based on the node identity which is tied to the lifecycle of the node.

The NQN can be read by `talosctl read /etc/nvme/hostnqn`
"""

    [notes.iso]
        title = "ISO"
        description = """\
Talos starting with 1.10 will have ISO's that will use GRUB only for legacy BIOS and systemd-boot for modern UEFI systems.
"""

    [notes.disk-image]
        title = "Disk Image"
        description = """\
Talos starting with 1.10 will have disk images that will use GRUB only for legacy BIOS and systemd-boot for modern UEFI systems.
On first boot Talos determines the boot method and will wipe the unused bootloader.

Secureboot disk-images will be sd-boot only.

For ARM64 imager will still generate GRUB bootloader for Talos < 1.10 and for Talos >= 1.10 all ARM64 boot assets will use systemd-boot.

Imager supports overwriting bootloader when generating a disk image via the Imager profile `output` option.

Eg:

```yaml
output:
  kind: image
  imageOptions:
    bootloader: sd-boot # supported options are sd-boot, grub, dual-boot
```

"""

    [notes.ethernet]
        title = "Ethernet"
        description = """\
Talos now provides `ethtool`-style Ethernet low-level configuration via `network/EthernetConfig` documents.
Current status of the interface can be read by `talosctl get ethernetstatus`.
"""

    [notes.toolchain]
        title = "Fully bootstrapped builds"
        description = """\
Talos 1.10 is built with a toolchain based on [[StageË£]](https://stagex.tools/), which is a project building fully bootstrapped software.
This change increases reproducibility, auditability and security of Talos builds.

This also changes Talos root filesystem structure for unified /usr, with other directories symlinking to /usr/bin and /usr/lib.
System extensions must move their directories accordingly for 1.10.
"""

    [notes.ingress-firewall]
        title = "Ingress Firewall"
        description = """\
Talos Ingress Firewall now filters access to Kubernetes NodePort services correctly.
"""

    [notes.extraKernelArgs]
        title = "Extra Kernel Args"
        description = """\
Talos 1.10 on fresh install on UEFI systems will now use systemd-boot and UKIs (Unified Kernel Images)[https://uapi-group.org/specifications/specs/unified_kernel_image/].
This means the kernel command line arguments are part of the UKI and cannot be modified without an upgrade to a new UKI.

Upgrades to Talos 1.10 will preseve the existing bootloader (GRUB for non-secureboot) and sd-boot for Secureboot and this change will have no effect.

To build a [boot asset](https://www.talos.dev/v1.10/talos-guides/install/boot-assets/) with extra kernel arguments whether an `installer` or a boot image use either [Image Factory](https://www.talos.dev/v1.10/talos-guides/install/boot-assets/#image-factory) or
[Imager](https://www.talos.dev/v1.10/talos-guides/install/boot-assets/#imager).

This means kernel arguments not part of the UKI will not be preserved across updates and a proper installer image generated via Imager Factory or Imager is required.
"""

    [notes.extensions]
        title = "Machine Install Extensions"
        description = """\
`.machine.install.extensions` will have no effect starting from Talos 1.10, the machine config document field is still kept so upgrades from older versions are possible.
Use [Boot Assets](https://www.talos.dev/v1.10/talos-guides/install/boot-assets/) instead.
"""

    [notes.user-volumes]
        title = "User Volumes"
        description = """\
Talos now supports [user disk volumes](https://www.talos.dev/v1.10/talos-guides/configuration/disk-management/#user-volumes) via the `UserVolumeConfig` machine config document.

The old `.machine.disks` field is deprecated, but still supported for backwards compatibility.
"""

    [notes.selinux]
        title = "SELinux"
        description = """\
Talos now supports enabling SELinux enforcing mode, see [SELinux](https://www.talos.dev/v1.10/advanced/selinux/) for more details.
"""

[make_deps]

    [make_deps.tools]
        variable = "TOOLS"
        repository = "github.com/siderolabs/tools"

    [make_deps.pkgs]
        variable = "PKGS"
        repository = "github.com/siderolabs/pkgs"
